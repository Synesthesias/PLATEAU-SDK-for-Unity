{
  "api/PLATEAU.Basemap.html": {
    "href": "api/PLATEAU.Basemap.html",
    "title": "Namespace PLATEAU.Basemap | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.Basemap Classes TileProjection 緯度経度と、地理院地図タイル番号を変換します。 VectorTileDownloader 地理院地図の地図タイルをダウンロードします。 Structs TileCoordinate 地理院地図のタイル座標です。 タイル座標については国土地理院のWebサイトを参照してください。 https://maps.gsi.go.jp/development/siyou.html#siyou-zm データ構造は C++側と合わせる必要があります。"
  },
  "api/PLATEAU.Basemap.TileCoordinate.html": {
    "href": "api/PLATEAU.Basemap.TileCoordinate.html",
    "title": "Struct TileCoordinate | PLATEAU SDK for Unity",
    "keywords": "Struct TileCoordinate 地理院地図のタイル座標です。 タイル座標については国土地理院のWebサイトを参照してください。 https://maps.gsi.go.jp/development/siyou.html#siyou-zm データ構造は C++側と合わせる必要があります。 Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.Basemap Assembly : cs.temp.dll.dll Syntax public readonly struct TileCoordinate Constructors TileCoordinate(Int32, Int32, Int32) Declaration public TileCoordinate(int column, int row, int zoomLevel) Parameters Type Name Description Int32 column Int32 row Int32 zoomLevel Fields Column Declaration public readonly int Column Field Value Type Description Int32 Row Declaration public readonly int Row Field Value Type Description Int32 ZoomLevel Declaration public readonly int ZoomLevel Field Value Type Description Int32 Methods ToString() Declaration public override readonly string ToString() Returns Type Description String Overrides ValueType.ToString()"
  },
  "api/PLATEAU.Basemap.TileProjection.html": {
    "href": "api/PLATEAU.Basemap.TileProjection.html",
    "title": "Class TileProjection | PLATEAU SDK for Unity",
    "keywords": "Class TileProjection 緯度経度と、地理院地図タイル番号を変換します。 Inheritance Object TileProjection Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Basemap Assembly : cs.temp.dll.dll Syntax public static class TileProjection Methods Project(GeoCoordinate, Int32) 緯度経度から地理院地図タイル番号に変換します。 Declaration public static TileCoordinate Project(GeoCoordinate geoCoord, int zoomLevel = 15) Parameters Type Name Description GeoCoordinate geoCoord Int32 zoomLevel Returns Type Description TileCoordinate Unproject(TileCoordinate) 地理院地図タイル番号から緯度経度範囲に変換します。 Declaration public static Extent Unproject(TileCoordinate tileCoord) Parameters Type Name Description TileCoordinate tileCoord Returns Type Description Extent"
  },
  "api/PLATEAU.Basemap.VectorTileDownloader.html": {
    "href": "api/PLATEAU.Basemap.VectorTileDownloader.html",
    "title": "Class VectorTileDownloader | PLATEAU SDK for Unity",
    "keywords": "Class VectorTileDownloader 地理院地図の地図タイルをダウンロードします。 Inheritance Object VectorTileDownloader Namespace : PLATEAU.Basemap Assembly : cs.temp.dll.dll Syntax public class VectorTileDownloader : PInvokeDisposable Properties TileCount Declaration public int TileCount { get; } Property Value Type Description Int32 Methods CalcDestPath(Int32) Declaration public string CalcDestPath(int index) Parameters Type Name Description Int32 index Returns Type Description String Create(String, Extent, Int32) Declaration public static VectorTileDownloader Create(string destinationPath, Extent extent, int zoomLevel) Parameters Type Name Description String destinationPath Extent extent Int32 zoomLevel Returns Type Description VectorTileDownloader DisposeNative() Declaration protected override void DisposeNative() Download(Int32) 地理院地図タイルをダウンロードして pngファイルに保存します。 Declaration public void Download(int index) Parameters Type Name Description Int32 index GetTileCoordinate(Int32) Declaration public TileCoordinate GetTileCoordinate(int index) Parameters Type Name Description Int32 index Returns Type Description TileCoordinate"
  },
  "api/PLATEAU.CityAdjust.CityDuplicateProcessor.html": {
    "href": "api/PLATEAU.CityAdjust.CityDuplicateProcessor.html",
    "title": "Class CityDuplicateProcessor | PLATEAU SDK for Unity",
    "keywords": "Class CityDuplicateProcessor 重複した地物があるか検索し、重複して表示されないようにします。 Inheritance Object CityDuplicateProcessor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityAdjust Assembly : cs.temp.dll.dll Syntax public static class CityDuplicateProcessor Methods EnableOnlyLargestLODInDuplicate(PLATEAUInstancedCityModel) 重複した地物があるか検索します。 重複のうちLODが最大のものを有効化し、そうでないものを無効化します。 ただしすでに無効化されているものは無視します。 Declaration public static void EnableOnlyLargestLODInDuplicate(PLATEAUInstancedCityModel city) Parameters Type Name Description PLATEAUInstancedCityModel city"
  },
  "api/PLATEAU.CityAdjust.html": {
    "href": "api/PLATEAU.CityAdjust.html",
    "title": "Namespace PLATEAU.CityAdjust | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.CityAdjust Classes CityDuplicateProcessor 重複した地物があるか検索し、重複して表示されないようにします。"
  },
  "api/PLATEAU.CityGML.Address.html": {
    "href": "api/PLATEAU.CityGML.Address.html",
    "title": "Class Address | PLATEAU SDK for Unity",
    "keywords": "Class Address 住所情報を保持します。 CityObject が Address を保持します。 Inheritance Object Address Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class Address Constructors Address(IntPtr) Declaration public Address(IntPtr handle) Parameters Type Name Description IntPtr handle Properties Country Declaration public string Country { get; } Property Value Type Description String Locality Declaration public string Locality { get; } Property Value Type Description String PostalCode Declaration public string PostalCode { get; } Property Value Type Description String ThoroughFareName Declaration public string ThoroughFareName { get; } Property Value Type Description String ThoroughFareNumber Declaration public string ThoroughFareNumber { get; } Property Value Type Description String"
  },
  "api/PLATEAU.CityGML.Appearance.html": {
    "href": "api/PLATEAU.CityGML.Appearance.html",
    "title": "Class Appearance | PLATEAU SDK for Unity",
    "keywords": "Class Appearance Texture , Material の基底クラスです。 Inheritance Object Object Appearance Material Texture Inherited Members Object.Handle Object.ID Object.AttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class Appearance : Object Properties IsFront Declaration public bool IsFront { get; } Property Value Type Description Boolean Themes テーマ名を配列で返します。 Declaration public string[] Themes { get; } Property Value Type Description String [] Type Texture なら \"Texture\" という文字列を返します。 Declaration public string Type { get; } Property Value Type Description String"
  },
  "api/PLATEAU.CityGML.AppearanceTarget.html": {
    "href": "api/PLATEAU.CityGML.AppearanceTarget.html",
    "title": "Class AppearanceTarget | PLATEAU SDK for Unity",
    "keywords": "Class AppearanceTarget 見た目に関する情報のターゲットとなる CityGMLオブジェクトの基底クラスです。 テーマ名, TextureTargetDefinition , MaterialTargetDefinition を保持し、それらを紐付けます。 Inheritance Object Object AppearanceTarget Geometry Polygon Inherited Members Object.Handle Object.ID Object.AttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class AppearanceTarget : Object Properties TextureTargetDefinitions 保持する TextureTargetDefinition を foreach や LINQ でイテレートするための機能です。 Declaration public IEnumerable<TextureTargetDefinition> TextureTargetDefinitions { get; } Property Value Type Description IEnumerable < TextureTargetDefinition > TextureTargetDefinitionsCount 保持する TextureTargetDefinitions の数を返します。 Declaration public int TextureTargetDefinitionsCount { get; } Property Value Type Description Int32 Methods GetMaterialTargetDefinitionByThemeName(String, Boolean) Declaration public MaterialTargetDefinition GetMaterialTargetDefinitionByThemeName(string themeName, bool front) Parameters Type Name Description String themeName Boolean front Returns Type Description MaterialTargetDefinition GetTextureTargetDefinition(Int32) インデックス指定で TextureTargetDefinition を取得します。 Declaration public TextureTargetDefinition GetTextureTargetDefinition(int index) Parameters Type Name Description Int32 index Returns Type Description TextureTargetDefinition GetTextureTargetDefinition(String, Boolean) テーマ名から TextureTargetDefinition を取得します。 与えられたテーマ名に該当するものがない場合は を投げます。 Declaration public TextureTargetDefinition GetTextureTargetDefinition(string themeName, bool front) Parameters Type Name Description String themeName Boolean front Returns Type Description TextureTargetDefinition MaterialThemeNames(Boolean) Declaration public string[] MaterialThemeNames(bool front) Parameters Type Name Description Boolean front Returns Type Description String [] MaterialThemesCountByFront(Boolean) Declaration public int MaterialThemesCountByFront(bool front) Parameters Type Name Description Boolean front Returns Type Description Int32 TextureThemeNames(Boolean) テクスチャのテーマ名(0個以上)を取得して配列で返します。 Declaration public string[] TextureThemeNames(bool front) Parameters Type Name Description Boolean front Returns Type Description String [] TextureThemesCountOfFront(Boolean) 保持するテクスチャのテーマのうち、 front が与えられたタイプであるものの数を返します。 Declaration public int TextureThemesCountOfFront(bool front) Parameters Type Name Description Boolean front Returns Type Description Int32"
  },
  "api/PLATEAU.CityGML.AppearanceTargetDefinition-1.html": {
    "href": "api/PLATEAU.CityGML.AppearanceTargetDefinition-1.html",
    "title": "Class AppearanceTargetDefinition<T> | PLATEAU SDK for Unity",
    "keywords": "Class AppearanceTargetDefinition<T> TextureTargetDefinition , MaterialTargetDefinition の基底クラスです。 TargetID , Appearance を保持します。 Appearance は TextureTargetDefinition ならば Texture 型、 MaterialTargetDefinition ならば Material 型です。 Inheritance Object Object AppearanceTargetDefinition<T> MaterialTargetDefinition TextureTargetDefinition Inherited Members Object.Handle Object.ID Object.AttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class AppearanceTargetDefinition<T> : Object where T : Appearance Type Parameters Name Description T Properties Appearance Declaration public T Appearance { get; } Property Value Type Description T TargetID Declaration public string TargetID { get; } Property Value Type Description String"
  },
  "api/PLATEAU.CityGML.AttributesMap.html": {
    "href": "api/PLATEAU.CityGML.AttributesMap.html",
    "title": "Class AttributesMap | PLATEAU SDK for Unity",
    "keywords": "Class AttributesMap 属性の辞書です。 を実装します。 string をキーとし、 AttributeValue が値になります。 this[key] で AttributeValue が返ります。 Inheritance Object AttributesMap Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class AttributesMap : IReadOnlyDictionary<string, AttributeValue> Properties Count 属性の数を返します。 Declaration public int Count { get; } Property Value Type Description Int32 Item[String] 属性のキーから値を返します。 key が存在しない場合は を投げます。 Declaration public AttributeValue this[string key] { get; } Parameters Type Name Description String key Property Value Type Description AttributeValue Keys 属性のキーをすべて返します。 結果はキャッシュされるので2回目以降は速いです。 Declaration public IEnumerable<string> Keys { get; } Property Value Type Description IEnumerable < String > Values (key, value) のペアのうち value ( AttributeValue ) をすべて返します。 Declaration public IEnumerable<AttributeValue> Values { get; } Property Value Type Description IEnumerable < AttributeValue > Methods ContainsKey(String) 属性に key が含まれていれば true, key がなければ false を返します。 Declaration public bool ContainsKey(string key) Parameters Type Name Description String key Returns Type Description Boolean GetEnumerator() Declaration public IEnumerator<AttrPair> GetEnumerator() Returns Type Description IEnumerator < AttrPair > GetValueOrNull(String) key に対応する値 AttributeValue を返します。 なければ null を返します。 Declaration public AttributeValue GetValueOrNull(string key) Parameters Type Name Description String key Returns Type Description AttributeValue ToString() 属性の中身を、見やすくフォーマットした文字列にして返します。 子の属性も再帰的に含みます。 Declaration public override string ToString() Returns Type Description String TryGetValue(String, out AttributeValue) 属性辞書の中に key が存在すればその値を value に代入して true を返します。 key が存在しなければ value に null を代入して false を返します。 Declaration public bool TryGetValue(string key, out AttributeValue value) Parameters Type Name Description String key AttributeValue value Returns Type Description Boolean"
  },
  "api/PLATEAU.CityGML.AttributeType.html": {
    "href": "api/PLATEAU.CityGML.AttributeType.html",
    "title": "Enum AttributeType | PLATEAU SDK for Unity",
    "keywords": "Enum AttributeType 属性の値の想定形式です。 形式が String, Double, Integer, Date, Uri, Measure である場合、内部的にはデータは string です。 AttributeSet である場合、内部的にはデータは AttributesMap への参照です。 Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public enum AttributeType Fields Name Description AttributeSet Date Double Integer Measure String Uri"
  },
  "api/PLATEAU.CityGML.AttributeValue.html": {
    "href": "api/PLATEAU.CityGML.AttributeValue.html",
    "title": "Class AttributeValue | PLATEAU SDK for Unity",
    "keywords": "Class AttributeValue Plateau のオブジェクトが持つ属性 (key と value のペア) のうち、 value の部分です。 value は、内部的には string または 子の属性セットへの参照 のどちらかのデータを保持します。 value の値がどのような形式であるかを AttributeType 形式で保持し、 Type で取得できます。 Type が String, Double, Integer, Data, Uri, Measure の場合、内部的にはデータは単に string であり、 AsString で取得できます。 AsDouble , AsInt プロパティもありますが、それは単に AsString を数値にパースするものです。 Type が AttributeSet である場合、 この属性の子に属性セットがあることを意味します。 この場合は AsString は意味を成さず、代わりに AsAttrSet で子の属性セットを取得できます。 Inheritance Object AttributeValue Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class AttributeValue Constructors AttributeValue(IntPtr) Declaration public AttributeValue(IntPtr handle) Parameters Type Name Description IntPtr handle Properties AsAttrSet Type が AttributeSet であることを前提に、 子の AttributesMap を返します。 Type がその他である場合は意味を成しません。 Declaration public AttributesMap AsAttrSet { get; } Property Value Type Description AttributesMap AsBool 属性値を bool にパースして返します。 Declaration public bool AsBool { get; } Property Value Type Description Boolean AsDouble 属性値を double にパースして返します。 Declaration public double AsDouble { get; } Property Value Type Description Double AsInt 属性値を int にパースして返します。 Declaration public int AsInt { get; } Property Value Type Description Int32 AsString 属性値を string 形式で取得します。 Type が String, Double, Integer, Data, Uri, Measure の場合に有効です。 Type が AttributeSet の場合は意味を成しません。 Declaration public string AsString { get; } Property Value Type Description String Type 属性の値の想定形式です。 AttributeType 型で返します。 Declaration public AttributeType Type { get; } Property Value Type Description AttributeType"
  },
  "api/PLATEAU.CityGML.CityGml.html": {
    "href": "api/PLATEAU.CityGML.CityGml.html",
    "title": "Class CityGml | PLATEAU SDK for Unity",
    "keywords": "Class CityGml Inheritance Object CityGml Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public static class CityGml Methods Load(String, CitygmlParserParams, LogCallbacks, DllLogLevel) DLLの機能によって gmlファイルをパースし、CityModelを生成します。 Declaration public static CityModel Load(string gmlPath, CitygmlParserParams parserParams, LogCallbacks logCallbacks = null, DllLogLevel logLevel = null) Parameters Type Name Description String gmlPath gmlファイルのパスです。 CitygmlParserParams parserParams 変換の設定です。 LogCallbacks logCallbacks ログを受け取るコールバックです。省略または null の場合は C# の標準出力にログを転送します。 DllLogLevel logLevel ログの詳細度です。 Returns Type Description CityModel"
  },
  "api/PLATEAU.CityGML.CitygmlParserParams.html": {
    "href": "api/PLATEAU.CityGML.CitygmlParserParams.html",
    "title": "Struct CitygmlParserParams | PLATEAU SDK for Unity",
    "keywords": "Struct CitygmlParserParams GMLファイルのパース時の設定です。 Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public struct CitygmlParserParams Constructors CitygmlParserParams(Boolean, Boolean, Boolean, Boolean) Declaration public CitygmlParserParams(bool optimize, bool keepVertices, bool tessellate, bool ignoreGeometries) Parameters Type Name Description Boolean optimize Boolean keepVertices Boolean tessellate Boolean ignoreGeometries Properties IgnoreGeometries Declaration public bool IgnoreGeometries { get; set; } Property Value Type Description Boolean KeepVertices Declaration public bool KeepVertices { get; set; } Property Value Type Description Boolean Optimize Declaration public bool Optimize { get; set; } Property Value Type Description Boolean Tesselate を false に設定すると、 Polygon が頂点を保持する代わりに LinearRing を保持します。 Declaration public bool Tesselate { get; set; } Property Value Type Description Boolean"
  },
  "api/PLATEAU.CityGML.CityModel.html": {
    "href": "api/PLATEAU.CityGML.CityModel.html",
    "title": "Class CityModel | PLATEAU SDK for Unity",
    "keywords": "Class CityModel GMLファイルをパースして得られる街のモデルです。 0個以上の CityObject を保持します。 Inheritance Object CityModel Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public sealed class CityModel : IDisposable Properties Handle セーフハンドルを取得します。 Declaration public IntPtr Handle { get; } Property Value Type Description IntPtr RootCityObjects CityModel のトップレベルにある CityObject の一覧を返します。 Declaration public ReadOnlyCollection<CityObject> RootCityObjects { get; } Property Value Type Description ReadOnlyCollection < CityObject > Methods Dispose() Declaration public void Dispose() Finalize() Declaration protected void Finalize() GetCenterPoint(Int32) cityModel の中心点を返します。 また GMLファイルから cityModel の Envelope を読み取れない場合は、 中心点が分からないので原点座標を返します。 Declaration public PlateauVector3d GetCenterPoint(int coordinateZoneID) Parameters Type Name Description Int32 coordinateZoneID Returns Type Description PlateauVector3d GetCityObjectById(String) idから CityObject を返します。 該当idのものがない場合は を投げます。 Declaration public CityObject GetCityObjectById(string id) Parameters Type Name Description String id Returns Type Description CityObject GetCityObjectsByType(CityObjectType) CityModel の type タイプの全ての CityObject を返します。 Declaration public CityObject[] GetCityObjectsByType(CityObjectType type) Parameters Type Name Description CityObjectType type 取得したい都市オブジェクトのタイプ Returns Type Description CityObject [] type タイプの全ての CityObject"
  },
  "api/PLATEAU.CityGML.CityObject.html": {
    "href": "api/PLATEAU.CityGML.CityObject.html",
    "title": "Class CityObject | PLATEAU SDK for Unity",
    "keywords": "Class CityObject CityGMLにおける都市オブジェクトです。 CityModel または 親 CityObject が CityObject を保持します。 この CityObject は CityObjectType , Address , 子 CityObject , Geometry を保持します。 Inheritance Object Object FeatureObject CityObject Inherited Members FeatureObject.Envelope FeatureObject.SetEnvelope(Double, Double, Double, Double, Double, Double) Object.Handle Object.ID Object.AttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class CityObject : FeatureObject Properties Address Declaration public Address Address { get; } Property Value Type Description Address ChildCityObjectCount Declaration public int ChildCityObjectCount { get; } Property Value Type Description Int32 ChildCityObjects 子 CityObject をforeachやLinqで回したい時に利用できます。 Declaration public IEnumerable<CityObject> ChildCityObjects { get; } Property Value Type Description IEnumerable < CityObject > CityObjectDescendantsDFS 子孫の CityObject をすべて再帰的にイテレートします。自分自身を含みます。 イテレートの順番は DFS（深さ優先探索）です。 Declaration public IEnumerable<CityObject> CityObjectDescendantsDFS { get; } Property Value Type Description IEnumerable < CityObject > Geometries 各 Geometry を foreach で回したい時に利用できます。 Declaration public IEnumerable<Geometry> Geometries { get; } Property Value Type Description IEnumerable < Geometry > GeometryCount ジオメトリの数を返します。 Declaration public int GeometryCount { get; } Property Value Type Description Int32 ImplicitGeometryCount Declaration public int ImplicitGeometryCount { get; } Property Value Type Description Int32 Type Declaration public CityObjectType Type { get; } Property Value Type Description CityObjectType Methods GetChildCityObject(Int32) Declaration public CityObject GetChildCityObject(int index) Parameters Type Name Description Int32 index Returns Type Description CityObject GetGeometry(Int32) Declaration public Geometry GetGeometry(int index) Parameters Type Name Description Int32 index Returns Type Description Geometry"
  },
  "api/PLATEAU.CityGML.CityObjectType.html": {
    "href": "api/PLATEAU.CityGML.CityObjectType.html",
    "title": "Enum CityObjectType | PLATEAU SDK for Unity",
    "keywords": "Enum CityObjectType Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public enum CityObjectType : ulong Fields Name Description COT_All COT_BreaklineRelief COT_Bridge COT_BridgeConstructionElement COT_BridgeInstallation COT_BridgePart COT_Building COT_BuildingFurniture COT_BuildingInstallation COT_BuildingPart COT_CeilingSurface COT_CityFurniture COT_CityObjectGroup COT_ClosureSurface COT_Door COT_FloorSurface COT_GenericCityObject COT_GroundSurface COT_IntBuildingInstallation COT_InteriorWallSurface COT_LandUse COT_MassPointRelief COT_OuterCeilingSurface COT_OuterFloorSurface COT_PlantCover COT_Railway COT_RasterRelief COT_ReliefComponent COT_ReliefFeature COT_Road COT_RoofSurface COT_Room COT_SolitaryVegetationObject COT_Square COT_TINRelief COT_Track COT_TransportationObject COT_Tunnel COT_WallSurface COT_WaterBody COT_Window"
  },
  "api/PLATEAU.CityGML.FeatureObject.html": {
    "href": "api/PLATEAU.CityGML.FeatureObject.html",
    "title": "Class FeatureObject | PLATEAU SDK for Unity",
    "keywords": "Class FeatureObject CityGMLにおける全ての地物オブジェクトのベースクラスです。 Envelope (オブジェクトの存在範囲を2点の座標で示したもの)を持ちます。 Inheritance Object Object FeatureObject CityObject Inherited Members Object.Handle Object.ID Object.AttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class FeatureObject : Object Properties Envelope 建築物の範囲を double[6] で返します。 Declaration public double[] Envelope { get; } Property Value Type Description Double [] 戻り値 double[6] の配列の中身は座標 { lower_x, lower_y, lower_z, upper_x, upper_y, upper_z } です。 Methods SetEnvelope(Double, Double, Double, Double, Double, Double) 建物の範囲を設定します。 Declaration public void SetEnvelope(double lowerX, double lowerY, double lowerZ, double upperX, double upperY, double upperZ) Parameters Type Name Description Double lowerX Double lowerY Double lowerZ Double upperX Double upperY Double upperZ"
  },
  "api/PLATEAU.CityGML.Geometry.html": {
    "href": "api/PLATEAU.CityGML.Geometry.html",
    "title": "Class Geometry | PLATEAU SDK for Unity",
    "keywords": "Class Geometry 建築物の形状と見た目の情報を保持します。 CityObject が Geometry を保持します。 Geometry は Polygon , 子 Geometry を保持します。 Inheritance Object Object AppearanceTarget Geometry Inherited Members AppearanceTarget.TextureTargetDefinitionsCount AppearanceTarget.GetTextureTargetDefinition(Int32) AppearanceTarget.TextureTargetDefinitions AppearanceTarget.GetTextureTargetDefinition(String, Boolean) AppearanceTarget.TextureThemesCountOfFront(Boolean) AppearanceTarget.TextureThemeNames(Boolean) AppearanceTarget.MaterialThemesCountByFront(Boolean) AppearanceTarget.MaterialThemeNames(Boolean) AppearanceTarget.GetMaterialTargetDefinitionByThemeName(String, Boolean) Object.Handle Object.ID Object.AttributesMap Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class Geometry : AppearanceTarget Constructors Geometry(IntPtr) Declaration public Geometry(IntPtr handle) Parameters Type Name Description IntPtr handle Properties ChildGeometryCount 子の Geometry の数を返します。 Declaration public int ChildGeometryCount { get; } Property Value Type Description Int32 GeometryDescendantsDFS 子孫の Geometry を再帰ですべてイテレートします。自分自身を含みます。 イテレートの順番は DFS(深さ優先探索)です。 Declaration public IEnumerable<Geometry> GeometryDescendantsDFS { get; } Property Value Type Description IEnumerable < Geometry > LineStringCount LineString の数を返します。 TODO LineString の取得は未実装です。 GMLファイルが LineString を含むケースが今のところ見当たらないため Declaration public int LineStringCount { get; } Property Value Type Description Int32 LOD LOD (Level Of Detail) を取得します。 LOD は 0 がもっとも簡略化された形状であり、数字が上がるほど形状が詳細であることを意味します。 Declaration public int LOD { get; } Property Value Type Description Int32 PolygonCount Polygon の数を返します。 Declaration public int PolygonCount { get; } Property Value Type Description Int32 Polygons Polygon をforeachやLinqで回したい時に利用できます。 Declaration public IEnumerable<Polygon> Polygons { get; } Property Value Type Description IEnumerable < Polygon > SRSName SRSName を取得します。 SRSNameは典型的には次のようなURL形式の文字列になるはずです。 例: \" http://www.opengis.net/def/crs/EPSG/0/6697&quot ; Declaration public string SRSName { get; } Property Value Type Description String Type Declaration public GeometryType Type { get; } Property Value Type Description GeometryType Methods GetChildGeometry(Int32) インデックス指定で子の Geometry を1つ返します。 Declaration public Geometry GetChildGeometry(int index) Parameters Type Name Description Int32 index Returns Type Description Geometry GetPolygon(Int32) インデックス指定で Polygon を1つ返します。 Declaration public Polygon GetPolygon(int index) Parameters Type Name Description Int32 index Returns Type Description Polygon ToString() デバッグ用に自身に関する情報を文字列で返します。 Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/PLATEAU.CityGML.GeometryType.html": {
    "href": "api/PLATEAU.CityGML.GeometryType.html",
    "title": "Enum GeometryType | PLATEAU SDK for Unity",
    "keywords": "Enum GeometryType Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public enum GeometryType : ulong Fields Name Description GT_Ceiling GT_Closure GT_Floor GT_Ground GT_InteriorWall GT_OuterCeiling GT_OuterFloor GT_Roof GT_Tin GT_Unknown GT_Wall"
  },
  "api/PLATEAU.CityGML.html": {
    "href": "api/PLATEAU.CityGML.html",
    "title": "Namespace PLATEAU.CityGML | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.CityGML Classes Address 住所情報を保持します。 CityObject が Address を保持します。 Appearance Texture , Material の基底クラスです。 AppearanceTarget 見た目に関する情報のターゲットとなる CityGMLオブジェクトの基底クラスです。 テーマ名, TextureTargetDefinition , MaterialTargetDefinition を保持し、それらを紐付けます。 AppearanceTargetDefinition<T> TextureTargetDefinition , MaterialTargetDefinition の基底クラスです。 TargetID , Appearance を保持します。 Appearance は TextureTargetDefinition ならば Texture 型、 MaterialTargetDefinition ならば Material 型です。 AttributesMap 属性の辞書です。 を実装します。 string をキーとし、 AttributeValue が値になります。 this[key] で AttributeValue が返ります。 AttributeValue Plateau のオブジェクトが持つ属性 (key と value のペア) のうち、 value の部分です。 value は、内部的には string または 子の属性セットへの参照 のどちらかのデータを保持します。 value の値がどのような形式であるかを AttributeType 形式で保持し、 Type で取得できます。 Type が String, Double, Integer, Data, Uri, Measure の場合、内部的にはデータは単に string であり、 AsString で取得できます。 AsDouble , AsInt プロパティもありますが、それは単に AsString を数値にパースするものです。 Type が AttributeSet である場合、 この属性の子に属性セットがあることを意味します。 この場合は AsString は意味を成さず、代わりに AsAttrSet で子の属性セットを取得できます。 CityGml CityModel GMLファイルをパースして得られる街のモデルです。 0個以上の CityObject を保持します。 CityObject CityGMLにおける都市オブジェクトです。 CityModel または 親 CityObject が CityObject を保持します。 この CityObject は CityObjectType , Address , 子 CityObject , Geometry を保持します。 FeatureObject CityGMLにおける全ての地物オブジェクトのベースクラスです。 Envelope (オブジェクトの存在範囲を2点の座標で示したもの)を持ちます。 Geometry 建築物の形状と見た目の情報を保持します。 CityObject が Geometry を保持します。 Geometry は Polygon , 子 Geometry を保持します。 LinearRing 多角形による形状表現です。 頂点座標のリストを保持します。 Polygon が LinearRing を保持します。（ただし条件付きで一部のみです。） Material マテリアル情報です。 MaterialTargetDefinition 未実装です。 マテリアルを含むGMLの例が見当たらないため Object CityGMLにおける全てのオブジェクトのベースクラスです。 ユニークIDと0個以上の属性ペアを持ち、属性ペアはすべて AttributesMap に格納されています。 Polygon 建築物の形状におけるポリゴンです。 Vertices , Indices を保持します。 ただし、GMLファイルのパース時に を false に設定した時に限り、 Vertices, Indices の代わりに ExteriorRing , InteriorRings を保持することがあります。 Vertex と Ring を両方保持する場合もあれば、片方だけの場合もあります。 Polygon は Geometry によって保持されます。 Texture テクスチャ情報です。 Url と TextureWrapMode を保持します。 TextureTargetDefinition によって保持されます。 TextureCoordinates テクスチャのマッピングに関する情報です。 テクスチャ座標と LinearRing の頂点を紐付けます。 TextureTargetDefinition テクスチャとテクスチャマッピングを紐付けます。 Appearance でテクスチャ情報を取得できます。 GetCoordinate(Int32) (i) で i番目のテクスチャマッピング ( TextureCoordinates ) を取得できます。 AppearanceTarget によって保持されます。 Structs CitygmlParserParams GMLファイルのパース時の設定です。 Enums AttributeType 属性の値の想定形式です。 形式が String, Double, Integer, Date, Uri, Measure である場合、内部的にはデータは string です。 AttributeSet である場合、内部的にはデータは AttributesMap への参照です。 CityObjectType GeometryType TextureWrapMode"
  },
  "api/PLATEAU.CityGML.LinearRing.html": {
    "href": "api/PLATEAU.CityGML.LinearRing.html",
    "title": "Class LinearRing | PLATEAU SDK for Unity",
    "keywords": "Class LinearRing 多角形による形状表現です。 頂点座標のリストを保持します。 Polygon が LinearRing を保持します。（ただし条件付きで一部のみです。） Inheritance Object Object LinearRing Inherited Members Object.Handle Object.ID Object.AttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class LinearRing : Object Properties VertexCount 頂点数を取得します。 注意: GMLファイルのパース時の設定が tessellate = false のときに限り 意味のある値を返します。 tessellate = true でパースした場合、この値は 0 になります。 Declaration public int VertexCount { get; } Property Value Type Description Int32 Methods GetVertex(Int32) index 番目の頂点座標を取得します。 Declaration public PlateauVector3d GetVertex(int index) Parameters Type Name Description Int32 index Returns Type Description PlateauVector3d"
  },
  "api/PLATEAU.CityGML.Material.html": {
    "href": "api/PLATEAU.CityGML.Material.html",
    "title": "Class Material | PLATEAU SDK for Unity",
    "keywords": "Class Material マテリアル情報です。 Inheritance Object Object Appearance Material Implements IEquatable < Material > Inherited Members Appearance.Type Appearance.IsFront Appearance.Themes Object.Handle Object.ID Object.AttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class Material : Appearance Properties AmbientIntensity Declaration public float AmbientIntensity { get; } Property Value Type Description Single Diffuse マテリアル情報を返します。 Declaration public PlateauVector3f Diffuse { get; } Property Value Type Description PlateauVector3f Emissive Declaration public PlateauVector3f Emissive { get; } Property Value Type Description PlateauVector3f IsSmooth Declaration public bool IsSmooth { get; } Property Value Type Description Boolean Shininess Declaration public float Shininess { get; } Property Value Type Description Single Specular Declaration public PlateauVector3f Specular { get; } Property Value Type Description PlateauVector3f Transparency Declaration public float Transparency { get; } Property Value Type Description Single Methods Equals(Material) Declaration public bool Equals(Material other) Parameters Type Name Description Material other Returns Type Description Boolean GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() Implements IEquatable<>"
  },
  "api/PLATEAU.CityGML.MaterialTargetDefinition.html": {
    "href": "api/PLATEAU.CityGML.MaterialTargetDefinition.html",
    "title": "Class MaterialTargetDefinition | PLATEAU SDK for Unity",
    "keywords": "Class MaterialTargetDefinition 未実装です。 マテリアルを含むGMLの例が見当たらないため Inheritance Object Object AppearanceTargetDefinition < Material > MaterialTargetDefinition Inherited Members AppearanceTargetDefinition<Material>.Appearance AppearanceTargetDefinition<Material>.TargetID Object.Handle Object.ID Object.AttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class MaterialTargetDefinition : AppearanceTargetDefinition<Material>"
  },
  "api/PLATEAU.CityGML.Object.html": {
    "href": "api/PLATEAU.CityGML.Object.html",
    "title": "Class Object | PLATEAU SDK for Unity",
    "keywords": "Class Object CityGMLにおける全てのオブジェクトのベースクラスです。 ユニークIDと0個以上の属性ペアを持ち、属性ペアはすべて AttributesMap に格納されています。 Inheritance Object Object Appearance AppearanceTarget AppearanceTargetDefinition<T> FeatureObject LinearRing TextureCoordinates Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class Object Properties AttributesMap 属性の辞書を取得します。 Declaration public virtual AttributesMap AttributesMap { get; } Property Value Type Description AttributesMap AttributesMap 型で返します。 Handle セーフハンドルを取得します。 Declaration public IntPtr Handle { get; } Property Value Type Description IntPtr ID オブジェクトのユニークIDを取得します。 Declaration public string ID { get; protected set; } Property Value Type Description String"
  },
  "api/PLATEAU.CityGML.Polygon.html": {
    "href": "api/PLATEAU.CityGML.Polygon.html",
    "title": "Class Polygon | PLATEAU SDK for Unity",
    "keywords": "Class Polygon 建築物の形状におけるポリゴンです。 Vertices , Indices を保持します。 ただし、GMLファイルのパース時に を false に設定した時に限り、 Vertices, Indices の代わりに ExteriorRing , InteriorRings を保持することがあります。 Vertex と Ring を両方保持する場合もあれば、片方だけの場合もあります。 Polygon は Geometry によって保持されます。 Inheritance Object Object AppearanceTarget Polygon Inherited Members AppearanceTarget.TextureTargetDefinitionsCount AppearanceTarget.GetTextureTargetDefinition(Int32) AppearanceTarget.TextureTargetDefinitions AppearanceTarget.GetTextureTargetDefinition(String, Boolean) AppearanceTarget.TextureThemesCountOfFront(Boolean) AppearanceTarget.TextureThemeNames(Boolean) AppearanceTarget.MaterialThemesCountByFront(Boolean) AppearanceTarget.MaterialThemeNames(Boolean) AppearanceTarget.GetMaterialTargetDefinitionByThemeName(String, Boolean) Object.Handle Object.ID Object.AttributesMap Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class Polygon : AppearanceTarget Properties DoHaveRings 多角形の形状情報としての LinearRing (Exterior または Interior)を持っているか Declaration public bool DoHaveRings { get; } Property Value Type Description Boolean DoHaveVertices ポリゴンとしての頂点を持っているか Declaration public bool DoHaveVertices { get; } Property Value Type Description Boolean ExteriorRing 建物の外周の形状です。 GMLファイルのパース時の設定で が true の場合、この情報は保持されません。 false の場合、 ExteriorRing , InteriorRings が保持される場合があります。 Declaration public LinearRing ExteriorRing { get; } Property Value Type Description LinearRing Indices Declaration public IEnumerable<int> Indices { get; } Property Value Type Description IEnumerable < Int32 > IndicesCount Declaration public int IndicesCount { get; } Property Value Type Description Int32 InteriorRingCount 建物の形状の多角形表現のうち、内側にある多角形の数です。 Declaration public int InteriorRingCount { get; } Property Value Type Description Int32 InteriorRings InteriorRing を foreach や Linq で回したい時に利用できます。 Declaration public IEnumerable<LinearRing> InteriorRings { get; } Property Value Type Description IEnumerable < LinearRing > VertexCount 頂点数を返します。 Declaration public int VertexCount { get; } Property Value Type Description Int32 Methods GetVertex(Int32) 頂点番号を受け取り、その頂点の座標を返します。 Declaration public PlateauVector3d GetVertex(int index) Parameters Type Name Description Int32 index Returns Type Description PlateauVector3d ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/PLATEAU.CityGML.Texture.html": {
    "href": "api/PLATEAU.CityGML.Texture.html",
    "title": "Class Texture | PLATEAU SDK for Unity",
    "keywords": "Class Texture テクスチャ情報です。 Url と TextureWrapMode を保持します。 TextureTargetDefinition によって保持されます。 Inheritance Object Object Appearance Texture Inherited Members Appearance.Type Appearance.IsFront Appearance.Themes Object.Handle Object.ID Object.AttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class Texture : Appearance Properties Url テクスチャのURLを返します。 Declaration public string Url { get; } Property Value Type Description String WrapMode Declaration public TextureWrapMode WrapMode { get; } Property Value Type Description TextureWrapMode"
  },
  "api/PLATEAU.CityGML.TextureCoordinates.html": {
    "href": "api/PLATEAU.CityGML.TextureCoordinates.html",
    "title": "Class TextureCoordinates | PLATEAU SDK for Unity",
    "keywords": "Class TextureCoordinates テクスチャのマッピングに関する情報です。 テクスチャ座標と LinearRing の頂点を紐付けます。 Inheritance Object Object TextureCoordinates Inherited Members Object.Handle Object.ID Object.AttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class TextureCoordinates : Object Properties TargetLinearRingId このテクスチャマッピングの対象となる LinearRing のIDを返します。 Declaration public string TargetLinearRingId { get; } Property Value Type Description String Vec2CoordsCount 保持するテクスチャ座標の数です。 LinearRing の頂点とテクスチャ座標が1対1で対応するので、 この値は LinearRing の頂点数と同じになります。 Declaration public int Vec2CoordsCount { get; } Property Value Type Description Int32 Methods GetVec2Coord(Int32) LinearRing の index 番目の頂点に対応する テクスチャ座標を返します。 Declaration public PlateauVector2f GetVec2Coord(int index) Parameters Type Name Description Int32 index Returns Type Description PlateauVector2f IsRingTarget(LinearRing) 引数で与えられた LinearRing が このテクスチャマッピングの対象かどうか判定します。 Declaration public bool IsRingTarget(LinearRing ring) Parameters Type Name Description LinearRing ring Returns Type Description Boolean"
  },
  "api/PLATEAU.CityGML.TextureTargetDefinition.html": {
    "href": "api/PLATEAU.CityGML.TextureTargetDefinition.html",
    "title": "Class TextureTargetDefinition | PLATEAU SDK for Unity",
    "keywords": "Class TextureTargetDefinition テクスチャとテクスチャマッピングを紐付けます。 Appearance でテクスチャ情報を取得できます。 GetCoordinate(Int32) (i) で i番目のテクスチャマッピング ( TextureCoordinates ) を取得できます。 AppearanceTarget によって保持されます。 Inheritance Object Object AppearanceTargetDefinition < Texture > TextureTargetDefinition Inherited Members AppearanceTargetDefinition<Texture>.Appearance AppearanceTargetDefinition<Texture>.TargetID Object.Handle Object.ID Object.AttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class TextureTargetDefinition : AppearanceTargetDefinition<Texture> Constructors TextureTargetDefinition(IntPtr) Declaration public TextureTargetDefinition(IntPtr handle) Parameters Type Name Description IntPtr handle Properties TexCoordinatesCount 保持するテクスチャマッピングの数です。 Declaration public int TexCoordinatesCount { get; } Property Value Type Description Int32 Methods GetCoordinate(Int32) index 番目のテクスチャマッピングを取得します。 Declaration public TextureCoordinates GetCoordinate(int index) Parameters Type Name Description Int32 index Returns Type Description TextureCoordinates"
  },
  "api/PLATEAU.CityGML.TextureWrapMode.html": {
    "href": "api/PLATEAU.CityGML.TextureWrapMode.html",
    "title": "Enum TextureWrapMode | PLATEAU SDK for Unity",
    "keywords": "Enum TextureWrapMode Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public enum TextureWrapMode Fields Name Description WM_Border WM_Clamp WM_Mirror WM_None WM_Wrap"
  },
  "api/PLATEAU.CityImport.AreaSelector.AreaSelectResult.html": {
    "href": "api/PLATEAU.CityImport.AreaSelector.AreaSelectResult.html",
    "title": "Class AreaSelectResult | PLATEAU SDK for Unity",
    "keywords": "Class AreaSelectResult Inheritance Object AreaSelectResult Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityImport.AreaSelector Assembly : cs.temp.dll.dll Syntax public class AreaSelectResult Constructors AreaSelectResult(String[], Extent, PackageToLodDict) Declaration public AreaSelectResult(string[] areaMeshCodes, Extent extent, PackageToLodDict packageToLodDict) Parameters Type Name Description String [] areaMeshCodes Extent extent PackageToLodDict packageToLodDict Properties AreaMeshCodes Declaration public string[] AreaMeshCodes { get; } Property Value Type Description String [] Extent Declaration public Extent Extent { get; } Property Value Type Description Extent PackageToLodDict Declaration public PackageToLodDict PackageToLodDict { get; } Property Value Type Description PackageToLodDict"
  },
  "api/PLATEAU.CityImport.AreaSelector.html": {
    "href": "api/PLATEAU.CityImport.AreaSelector.html",
    "title": "Namespace PLATEAU.CityImport.AreaSelector | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.CityImport.AreaSelector Classes AreaSelectResult"
  },
  "api/PLATEAU.CityImport.AreaSelector.SceneObjs.AreaLodController.html": {
    "href": "api/PLATEAU.CityImport.AreaSelector.SceneObjs.AreaLodController.html",
    "title": "Class AreaLodController | PLATEAU SDK for Unity",
    "keywords": "Class AreaLodController 範囲選択画面で、利用可能なLODをメッシュコードごとに検索して表示します。 構成: AreaLodController -> (所有) -> [ AreaLodSearcher , (多) AreaLodView ] Inheritance Object AreaLodController Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityImport.AreaSelector.SceneObjs Assembly : cs.temp.dll.dll Syntax public class AreaLodController Constructors AreaLodController(DatasetSourceConfig, GeoReference, IEnumerable<MeshCode>) Declaration public AreaLodController(DatasetSourceConfig datasetSourceConfig, GeoReference geoReference, IEnumerable<MeshCode> allMeshCodes) Parameters Type Name Description DatasetSourceConfig datasetSourceConfig GeoReference geoReference IEnumerable < MeshCode > allMeshCodes Methods DrawSceneGUI(Camera) ビューに描画させます。 Declaration public void DrawSceneGUI(Camera camera) Parameters Type Name Description Camera camera Update(Extent) LOD未検索のメッシュコードのうち、カメラにもっとも近いメッシュコードのLODを検索して、 範囲選択画面の地図に表示します。 ただし、すでに検索処理が動いている場合は何もしません。 Declaration public void Update(Extent cameraExtent) Parameters Type Name Description Extent cameraExtent"
  },
  "api/PLATEAU.CityImport.AreaSelector.SceneObjs.AreaLodSearcher.html": {
    "href": "api/PLATEAU.CityImport.AreaSelector.SceneObjs.AreaLodSearcher.html",
    "title": "Class AreaLodSearcher | PLATEAU SDK for Unity",
    "keywords": "Class AreaLodSearcher メッシュコード内で利用可能なLODを検索します。 AreaLodController によって保持されます。 Inheritance Object AreaLodSearcher Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityImport.AreaSelector.SceneObjs Assembly : cs.temp.dll.dll Syntax public class AreaLodSearcher Constructors AreaLodSearcher(DatasetSourceConfig) Declaration public AreaLodSearcher(DatasetSourceConfig datasetSourceConfig) Parameters Type Name Description DatasetSourceConfig datasetSourceConfig Methods LoadLodsInMeshCode(String) 与えられたメッシュコードと、その上位に含まれるパッケージとLODを返します。 Declaration public PackageToLodDict LoadLodsInMeshCode(string meshCode) Parameters Type Name Description String meshCode Returns Type Description PackageToLodDict"
  },
  "api/PLATEAU.CityImport.AreaSelector.SceneObjs.AreaLodView.html": {
    "href": "api/PLATEAU.CityImport.AreaSelector.SceneObjs.AreaLodView.html",
    "title": "Class AreaLodView | PLATEAU SDK for Unity",
    "keywords": "Class AreaLodView 範囲選択画面で、メッシュコードごとに利用可能なLODを表示します。 AreaLodController によって保持されます。 Inheritance Object AreaLodView Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityImport.AreaSelector.SceneObjs Assembly : cs.temp.dll.dll Syntax public class AreaLodView Constructors AreaLodView(PackageToLodDict, Vector3, Vector3) Declaration public AreaLodView(PackageToLodDict packageToLodDict, Vector3 meshCodeUnityPositionUpperLeft, Vector3 meshCodeUnityPositionLowerRight) Parameters Type Name Description PackageToLodDict packageToLodDict Vector3 meshCodeUnityPositionUpperLeft Vector3 meshCodeUnityPositionLowerRight Methods DrawHandles(Camera) Declaration public void DrawHandles(Camera camera) Parameters Type Name Description Camera camera HasIconOfPackage(PredefinedCityModelPackage) このパッケージの利用可能LODを地図上で表示するかどうかを返します。 Declaration public static bool HasIconOfPackage(PredefinedCityModelPackage package) Parameters Type Name Description PredefinedCityModelPackage package Returns Type Description Boolean Init() 地図上に利用可能LODを表示するためのアイコンをロードします。 Declaration public static void Init()"
  },
  "api/PLATEAU.CityImport.AreaSelector.SceneObjs.GSIMapLoader.html": {
    "href": "api/PLATEAU.CityImport.AreaSelector.SceneObjs.GSIMapLoader.html",
    "title": "Class GSIMapLoader | PLATEAU SDK for Unity",
    "keywords": "Class GSIMapLoader 地理院地図タイルをダウンロードしてシーンに配置します。 Inheritance Object GSIMapLoader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityImport.AreaSelector.SceneObjs Assembly : cs.temp.dll.dll Syntax public static class GSIMapLoader Fields MapRootObjName Declaration public const string MapRootObjName = \"Basemap\" Field Value Type Description String Methods DownloadAndPlaceAsync(Extent, GeoReference, Int32, CancellationToken) 地理院地図タイルをダウンロードして、シーンに配置します。 メインスレッドで呼ぶ必要があります。 Declaration public static async Task<List<Material>> DownloadAndPlaceAsync(Extent extent, GeoReference geoReference, int zoomLevel, CancellationToken cancel) Parameters Type Name Description Extent extent GeoReference geoReference Int32 zoomLevel CancellationToken cancel Returns Type Description Task < List < Material >> 生成したマテリアルのリストを返します。このマテリアルはメソッドの利用者が利用終了時に廃棄してください。"
  },
  "api/PLATEAU.CityImport.AreaSelector.SceneObjs.GSIMapLoaderZoomSwitch.html": {
    "href": "api/PLATEAU.CityImport.AreaSelector.SceneObjs.GSIMapLoaderZoomSwitch.html",
    "title": "Class GSIMapLoaderZoomSwitch | PLATEAU SDK for Unity",
    "keywords": "Class GSIMapLoaderZoomSwitch GSIMapLoader に次の機能を追加したものです: ・カメラの位置によってズームレベル（地図の詳細度）を切り替えて表示します Inheritance Object GSIMapLoaderZoomSwitch Namespace : PLATEAU.CityImport.AreaSelector.SceneObjs Assembly : cs.temp.dll.dll Syntax public class GSIMapLoaderZoomSwitch : IDisposable Constructors GSIMapLoaderZoomSwitch(GeoReference, Extent) Declaration public GSIMapLoaderZoomSwitch(GeoReference geoReference, Extent entireExtent) Parameters Type Name Description GeoReference geoReference Extent entireExtent Methods CalcCameraExtent(Camera, GeoReference) Declaration public static Extent CalcCameraExtent(Camera cam, GeoReference geoRef) Parameters Type Name Description Camera cam GeoReference geoRef Returns Type Description Extent Dispose() Declaration public void Dispose() Update(Camera) Declaration public void Update(Camera cam) Parameters Type Name Description Camera cam"
  },
  "api/PLATEAU.CityImport.AreaSelector.SceneObjs.HandlesBase.html": {
    "href": "api/PLATEAU.CityImport.AreaSelector.SceneObjs.HandlesBase.html",
    "title": "Class HandlesBase | PLATEAU SDK for Unity",
    "keywords": "Class HandlesBase シーンビューにハンドルを表示する MonoBehaviour の基底クラスです。 Inheritance Object HandlesBase Namespace : PLATEAU.CityImport.AreaSelector.SceneObjs Assembly : cs.temp.dll.dll Syntax public abstract class HandlesBase : MonoBehaviour"
  },
  "api/PLATEAU.CityImport.AreaSelector.SceneObjs.html": {
    "href": "api/PLATEAU.CityImport.AreaSelector.SceneObjs.html",
    "title": "Namespace PLATEAU.CityImport.AreaSelector.SceneObjs | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.CityImport.AreaSelector.SceneObjs Classes AreaLodController 範囲選択画面で、利用可能なLODをメッシュコードごとに検索して表示します。 構成: AreaLodController -> (所有) -> [ AreaLodSearcher , (多) AreaLodView ] AreaLodSearcher メッシュコード内で利用可能なLODを検索します。 AreaLodController によって保持されます。 AreaLodView 範囲選択画面で、メッシュコードごとに利用可能なLODを表示します。 AreaLodController によって保持されます。 GSIMapLoader 地理院地図タイルをダウンロードしてシーンに配置します。 GSIMapLoaderZoomSwitch GSIMapLoader に次の機能を追加したものです: ・カメラの位置によってズームレベル（地図の詳細度）を切り替えて表示します HandlesBase シーンビューにハンドルを表示する MonoBehaviour の基底クラスです。"
  },
  "api/PLATEAU.CityImport.Setting.html": {
    "href": "api/PLATEAU.CityImport.Setting.html",
    "title": "Namespace PLATEAU.CityImport.Setting | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.CityImport.Setting Classes PackageToLodDict パッケージとそこに含まれる最大LODの組です。"
  },
  "api/PLATEAU.CityImport.Setting.PackageToLodDict.html": {
    "href": "api/PLATEAU.CityImport.Setting.PackageToLodDict.html",
    "title": "Class PackageToLodDict | PLATEAU SDK for Unity",
    "keywords": "Class PackageToLodDict パッケージとそこに含まれる最大LODの組です。 Inheritance Object PackageToLodDict Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityImport.Setting Assembly : cs.temp.dll.dll Syntax public class PackageToLodDict Methods AddOrUpdate(PredefinedCityModelPackage, Int32) Declaration public void AddOrUpdate(PredefinedCityModelPackage package, int maxLod) Parameters Type Name Description PredefinedCityModelPackage package Int32 maxLod Contains(PredefinedCityModelPackage) Declaration public bool Contains(PredefinedCityModelPackage package) Parameters Type Name Description PredefinedCityModelPackage package Returns Type Description Boolean GetEnumerator() Declaration public IEnumerator<KeyValuePair<PredefinedCityModelPackage, int>> GetEnumerator() Returns Type Description IEnumerator < KeyValuePair < PredefinedCityModelPackage , Int32 >> GetLod(PredefinedCityModelPackage) 引数の package で利用可能な最大LODを返します。 ない場合は -1 を返します。 Declaration public int GetLod(PredefinedCityModelPackage package) Parameters Type Name Description PredefinedCityModelPackage package Returns Type Description Int32 MargeDict(PackageToLodDict) Declaration public void MargeDict(PackageToLodDict other) Parameters Type Name Description PackageToLodDict other MergePackage(PredefinedCityModelPackage, Int32) Declaration public void MergePackage(PredefinedCityModelPackage package, int otherLod) Parameters Type Name Description PredefinedCityModelPackage package Int32 otherLod"
  },
  "api/PLATEAU.CityInfo.CityObjectList.Attributes.html": {
    "href": "api/PLATEAU.CityInfo.CityObjectList.Attributes.html",
    "title": "Class CityObjectList.Attributes | PLATEAU SDK for Unity",
    "keywords": "Class CityObjectList.Attributes シリアライズ可能なAttributeMapデータです。 Inheritance Object CityObjectList.Attributes Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityInfo Assembly : cs.temp.dll.dll Syntax public class Attributes Properties Count Declaration public int Count { get; } Property Value Type Description Int32 Item[String] Declaration public CityObjectList.Attributes.Value this[string key] { get; } Parameters Type Name Description String key Property Value Type Description CityObjectList.Attributes.Value Keys Declaration public IEnumerable<string> Keys { get; } Property Value Type Description IEnumerable < String > Values Declaration public IEnumerable<CityObjectList.Attributes.Value> Values { get; } Property Value Type Description IEnumerable < CityObjectList.Attributes.Value > Methods DebugString(Int32) Declaration public string DebugString(int indent) Parameters Type Name Description Int32 indent Returns Type Description String GetEnumerator() Declaration public IEnumerator<KeyValuePair<string, CityObjectList.Attributes.Value>> GetEnumerator() Returns Type Description IEnumerator < KeyValuePair < String , CityObjectList.Attributes.Value >> SetAttribute(String, AttributeType, Object) Declaration public void SetAttribute(string key, AttributeType type, object value) Parameters Type Name Description String key AttributeType type Object value SetAttribute(String, AttributeValue) Declaration public void SetAttribute(string key, AttributeValue value) Parameters Type Name Description String key AttributeValue value TryGetValue(String, out CityObjectList.Attributes.Value) Declaration public bool TryGetValue(string key, out CityObjectList.Attributes.Value val) Parameters Type Name Description String key CityObjectList.Attributes.Value val Returns Type Description Boolean"
  },
  "api/PLATEAU.CityInfo.CityObjectList.Attributes.Value.html": {
    "href": "api/PLATEAU.CityInfo.CityObjectList.Attributes.Value.html",
    "title": "Class CityObjectList.Attributes.Value | PLATEAU SDK for Unity",
    "keywords": "Class CityObjectList.Attributes.Value Inheritance Object CityObjectList.Attributes.Value Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityInfo Assembly : cs.temp.dll.dll Syntax public class Value Constructors Value(AttributeType, Object) Declaration public Value(AttributeType type, object value) Parameters Type Name Description AttributeType type Object value Value(AttributeValue) Declaration public Value(AttributeValue value) Parameters Type Name Description AttributeValue value Fields AttributesMapValue Declaration public CityObjectList.Attributes AttributesMapValue Field Value Type Description CityObjectList.Attributes Properties DoubleValue Declaration public double DoubleValue { get; } Property Value Type Description Double IntValue Declaration public int IntValue { get; } Property Value Type Description Int32 StringValue Declaration public string StringValue { get; } Property Value Type Description String Type Declaration public AttributeType Type { get; } Property Value Type Description AttributeType Methods DebugString(Int32) Declaration public string DebugString(int indent) Parameters Type Name Description Int32 indent Returns Type Description String"
  },
  "api/PLATEAU.CityInfo.CityObjectList.CityObject.html": {
    "href": "api/PLATEAU.CityInfo.CityObjectList.CityObject.html",
    "title": "Class CityObjectList.CityObject | PLATEAU SDK for Unity",
    "keywords": "Class CityObjectList.CityObject Inheritance Object CityObjectList.CityObject Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityInfo Assembly : cs.temp.dll.dll Syntax public class CityObject Properties AttributesMap Declaration public CityObjectList.Attributes AttributesMap { get; } Property Value Type Description CityObjectList.Attributes Children Declaration public List<CityObjectList.CityObject> Children { get; } Property Value Type Description List < CityObjectList.CityObject > CityObjectIndex Declaration public int[] CityObjectIndex { get; } Property Value Type Description Int32 [] CityObjectType Declaration public CityObjectType CityObjectType { get; } Property Value Type Description CityObjectType GmlID Declaration public string GmlID { get; } Property Value Type Description String IndexInMesh Declaration public CityObjectIndex IndexInMesh { get; } Property Value Type Description CityObjectIndex type Declaration public CityObjectType type { get; } Property Value Type Description CityObjectType Methods DebugString() デバッグ用に自身の情報をstringで返します。 Declaration public virtual string DebugString() Returns Type Description String Init(String, Int32[], UInt64, CityObjectList.Attributes, List<CityObjectList.CityObject>) Declaration public CityObjectList.CityObject Init(string gmlIDArg, int[] cityObjectIndexArg, ulong cityObjectTypeArg, CityObjectList.Attributes attributesMapArg, List<CityObjectList.CityObject> childrenArg = null) Parameters Type Name Description String gmlIDArg Int32 [] cityObjectIndexArg UInt64 cityObjectTypeArg CityObjectList.Attributes attributesMapArg List < CityObjectList.CityObject > childrenArg Returns Type Description CityObjectList.CityObject"
  },
  "api/PLATEAU.CityInfo.CityObjectList.html": {
    "href": "api/PLATEAU.CityInfo.CityObjectList.html",
    "title": "Class CityObjectList | PLATEAU SDK for Unity",
    "keywords": "Class CityObjectList シリアライズ可能なCityObjectデータです。 Inheritance Object CityObjectList Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityInfo Assembly : cs.temp.dll.dll Syntax public class CityObjectList Fields outsideChildren Declaration public List<string> outsideChildren Field Value Type Description List < String > outsideParent Declaration public string outsideParent Field Value Type Description String rootCityObjects Declaration public readonly List<CityObjectList.CityObject> rootCityObjects Field Value Type Description List < CityObjectList.CityObject >"
  },
  "api/PLATEAU.CityInfo.CityObjectTypeHierarchy.html": {
    "href": "api/PLATEAU.CityInfo.CityObjectTypeHierarchy.html",
    "title": "Class CityObjectTypeHierarchy | PLATEAU SDK for Unity",
    "keywords": "Class CityObjectTypeHierarchy Inheritance Object CityObjectTypeHierarchy Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityInfo Assembly : cs.temp.dll.dll Syntax public static class CityObjectTypeHierarchy Properties RootNode 都市オブジェクトの分類を階層構造のノードで表現したものです。 Declaration public static CityObjectTypeHierarchy.Node RootNode { get; } Property Value Type Description CityObjectTypeHierarchy.Node Methods GetNodeByPackage(Package) Declaration public static CityObjectTypeHierarchy.Node GetNodeByPackage(Package p) Parameters Type Name Description Package p Returns Type Description CityObjectTypeHierarchy.Node GetNodeByType(COType) Declaration public static CityObjectTypeHierarchy.Node GetNodeByType(COType t) Parameters Type Name Description COType t Returns Type Description CityObjectTypeHierarchy.Node"
  },
  "api/PLATEAU.CityInfo.CityObjectTypeHierarchy.Node.html": {
    "href": "api/PLATEAU.CityInfo.CityObjectTypeHierarchy.Node.html",
    "title": "Class CityObjectTypeHierarchy.Node | PLATEAU SDK for Unity",
    "keywords": "Class CityObjectTypeHierarchy.Node Inheritance Object CityObjectTypeHierarchy.Node Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityInfo Assembly : cs.temp.dll.dll Syntax public class Node Constructors Node(String, PredefinedCityModelPackage, CityObjectType[], CityObjectTypeHierarchy.Node[]) Declaration public Node(string nodeName, PredefinedCityModelPackage package, CityObjectType[] types, CityObjectTypeHierarchy.Node[] children) Parameters Type Name Description String nodeName PredefinedCityModelPackage package CityObjectType [] types CityObjectTypeHierarchy.Node [] children Properties Children Declaration public ReadOnlyCollection<CityObjectTypeHierarchy.Node> Children { get; } Property Value Type Description ReadOnlyCollection < CityObjectTypeHierarchy.Node > NodeName Declaration public string NodeName { get; } Property Value Type Description String Package Declaration public PredefinedCityModelPackage Package { get; } Property Value Type Description PredefinedCityModelPackage Parent Declaration public CityObjectTypeHierarchy.Node Parent { get; } Property Value Type Description CityObjectTypeHierarchy.Node UpperPackage Nodeの親子関係を自身から上へ調べて、PackageがNoneでない初めて見つかったPackageを返します。 調べてもNoneだけならNoneを返します。 Declaration public Package UpperPackage { get; } Property Value Type Description Package"
  },
  "api/PLATEAU.CityInfo.GeoReferenceData.html": {
    "href": "api/PLATEAU.CityInfo.GeoReferenceData.html",
    "title": "Struct GeoReferenceData | PLATEAU SDK for Unity",
    "keywords": "Struct GeoReferenceData Unityでシリアライズ化して保存できるようにした のデータです。 Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.CityInfo Assembly : cs.temp.dll.dll Syntax public struct GeoReferenceData Constructors GeoReferenceData(Double, Double, Double, Single, CoordinateSystem, Int32) Declaration public GeoReferenceData(double referencePointX, double referencePointY, double referencePointZ, float unitScale, CoordinateSystem coordinateSystem, int zoneID) Parameters Type Name Description Double referencePointX Double referencePointY Double referencePointZ Single unitScale CoordinateSystem coordinateSystem Int32 zoneID Fields coordinateSystem Declaration public CoordinateSystem coordinateSystem Field Value Type Description CoordinateSystem referencePointX Declaration public double referencePointX Field Value Type Description Double referencePointY Declaration public double referencePointY Field Value Type Description Double referencePointZ Declaration public double referencePointZ Field Value Type Description Double unitScale Declaration public float unitScale Field Value Type Description Single zoneID Declaration public int zoneID Field Value Type Description Int32"
  },
  "api/PLATEAU.CityInfo.html": {
    "href": "api/PLATEAU.CityInfo.html",
    "title": "Namespace PLATEAU.CityInfo | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.CityInfo Classes CityObjectList シリアライズ可能なCityObjectデータです。 CityObjectList.Attributes シリアライズ可能なAttributeMapデータです。 CityObjectList.Attributes.Value CityObjectList.CityObject CityObjectTypeHierarchy CityObjectTypeHierarchy.Node PLATEAUCityGmlProxy GMLファイルから都市情報を読み込みます。 PLATEAUCityObjectGroup シリアライズ可能なCityObjectデータの管理用コンポーネントです PLATEAUInstancedCityModel GMLファイルからUnityにインポートした都市のルートGameObjectに付与されます。 Structs GeoReferenceData Unityでシリアライズ化して保存できるようにした のデータです。"
  },
  "api/PLATEAU.CityInfo.PLATEAUCityGmlProxy.html": {
    "href": "api/PLATEAU.CityInfo.PLATEAUCityGmlProxy.html",
    "title": "Class PLATEAUCityGmlProxy | PLATEAU SDK for Unity",
    "keywords": "Class PLATEAUCityGmlProxy GMLファイルから都市情報を読み込みます。 Inheritance Object PLATEAUCityGmlProxy Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityInfo Assembly : cs.temp.dll.dll Syntax public class PLATEAUCityGmlProxy Methods LoadAsync(GameObject, String, String) GMLファイルをパースし、 を返します。 パースには時間がかかりますが、結果はキャッシュに入るので、2回目以降はパースはスキップされて速いです。 Declaration public static async Task<CityModel> LoadAsync(GameObject go, string rootDirName = null, string parentPathOfRootDir = null) Parameters Type Name Description GameObject go GMLファイルの名称が、与えられたゲームオブジェクトの名称であるものをパースします。 String rootDirName 都市データが入っているディレクトリのルートの名称を指定します。 省略または空文字の場合、 go .transform.parent.name になります。 String parentPathOfRootDir rootDirName の親ディレクトリのパスを指定します。 省略または空文字の場合、インポート時に自動でコピーされる場所になります。 すなわち、 Assets/StreamingAssets/.PLATEAU になります。 Returns Type Description Task < CityModel > パースした結果を返します。パース失敗時は null を返します。"
  },
  "api/PLATEAU.CityInfo.PLATEAUCityObjectGroup.html": {
    "href": "api/PLATEAU.CityInfo.PLATEAUCityObjectGroup.html",
    "title": "Class PLATEAUCityObjectGroup | PLATEAU SDK for Unity",
    "keywords": "Class PLATEAUCityObjectGroup シリアライズ可能なCityObjectデータの管理用コンポーネントです Inheritance Object PLATEAUCityObjectGroup Namespace : PLATEAU.CityInfo Assembly : cs.temp.dll.dll Syntax public class PLATEAUCityObjectGroup : MonoBehaviour Properties CityObjects Declaration public CityObjectList CityObjects { get; } Property Value Type Description CityObjectList PrimaryCityObjects Declaration public IEnumerable<CityObjectList.CityObject> PrimaryCityObjects { get; } Property Value Type Description IEnumerable < CityObjectList.CityObject > Methods GetAtomicCityObject(RaycastHit) RaycastHitからAtomic CityObjectを取得します Declaration public CityObject GetAtomicCityObject(RaycastHit hit) Parameters Type Name Description RaycastHit hit Returns Type Description CityObject GetAtomicCityObjectAsync(RaycastHit) RaycastHitから非同期でAtomic CityObjectを取得します Declaration public async Task<CityObject> GetAtomicCityObjectAsync(RaycastHit hit) Parameters Type Name Description RaycastHit hit Returns Type Description Task < CityObject > GetCityObject(CityObjectIndex) CityObjectIndexからAtomic CityObjectを取得します Declaration public CityObject GetCityObject(CityObjectIndex index) Parameters Type Name Description CityObjectIndex index Returns Type Description CityObject GetCityObject(Vector2) 座標からAtomic CityObjectを取得します Declaration public CityObject GetCityObject(Vector2 uv) Parameters Type Name Description Vector2 uv Returns Type Description CityObject GetCityObjectAsync(CityObjectIndex) CityObjectIndexから非同期でCityObjectを取得します Declaration public async Task<CityObject> GetCityObjectAsync(CityObjectIndex index) Parameters Type Name Description CityObjectIndex index Returns Type Description Task < CityObject > GetPrimaryAndAtomicCityObjectsAsync(CityObjectIndex) CityObjectIndexから非同期でPrimary Atomic CityObjectを両方取得します Declaration public async Task<CityObject[]> GetPrimaryAndAtomicCityObjectsAsync(CityObjectIndex index) Parameters Type Name Description CityObjectIndex index Returns Type Description Task < CityObject []> GetPrimaryAndAtomicCityObjectsAsync(RaycastHit) RaycastHitから非同期でPrimary Atomic CityObjectを両方取得します Declaration public async Task<CityObject[]> GetPrimaryAndAtomicCityObjectsAsync(RaycastHit hit) Parameters Type Name Description RaycastHit hit Returns Type Description Task < CityObject []> GetPrimaryCityObject(RaycastHit) RaycastHitからPrimary CityObjectを取得します Declaration public CityObject GetPrimaryCityObject(RaycastHit hit) Parameters Type Name Description RaycastHit hit Returns Type Description CityObject GetPrimaryCityObjectAsync(RaycastHit) RaycastHitから非同期でPrimary CityObjectを取得します Declaration public async Task<CityObject> GetPrimaryCityObjectAsync(RaycastHit hit) Parameters Type Name Description RaycastHit hit Returns Type Description Task < CityObject > SetSerializableCityObject(CityObjectList) Declaration public void SetSerializableCityObject(CityObjectList cityObjectSerializable) Parameters Type Name Description CityObjectList cityObjectSerializable"
  },
  "api/PLATEAU.CityInfo.PLATEAUInstancedCityModel.html": {
    "href": "api/PLATEAU.CityInfo.PLATEAUInstancedCityModel.html",
    "title": "Class PLATEAUInstancedCityModel | PLATEAU SDK for Unity",
    "keywords": "Class PLATEAUInstancedCityModel GMLファイルからUnityにインポートした都市のルートGameObjectに付与されます。 Inheritance Object PLATEAUInstancedCityModel Namespace : PLATEAU.CityInfo Assembly : cs.temp.dll.dll Syntax public class PLATEAUInstancedCityModel : MonoBehaviour Properties GeoReference 極座標と平面直角座標を変換するインスタンスです。 Declaration public GeoReference GeoReference { get; set; } Property Value Type Description GeoReference GmlTransforms ゲームオブジェクトの階層のうち、GMLファイルに対応する Transform の一覧を返します。 Declaration public Transform[] GmlTransforms { get; } Property Value Type Description Transform [] Methods GetCityObjects(Transform, Int32) 引数として GMLに対応する Transform と LOD番号を受け取ります。 GMLのゲームオブジェクト階層を見て、そのLODで存在する CityObject に対応する Transform をリストで返します。 Declaration public static List<Transform> GetCityObjects(Transform gmlTransform, int lod) Parameters Type Name Description Transform gmlTransform Int32 lod Returns Type Description List < Transform > GetLods(Transform) GMLに対応する Transform を受け取り、そのゲームオブジェクト階層の子を見て 利用可能なLODの番号をリストで返します。 Declaration public static List<int> GetLods(Transform gmlTransform) Parameters Type Name Description Transform gmlTransform Returns Type Description List < Int32 > GetLodTransforms(Transform) GMLに対応する Transform を受け取り、そのゲームオブジェクト階層の子を見て 利用可能なLODに対応する Transform のリストを返します。 Declaration public static List<Transform> GetLodTransforms(Transform gmlTransform) Parameters Type Name Description Transform gmlTransform Returns Type Description List < Transform > LoadGmlAsync(Transform) GMLに対応する Transform からGMLを非同期ロードして を返します。 合致するGMLがなければ null を返します。 Declaration public async Task<CityModel> LoadGmlAsync(Transform gmlTransform) Parameters Type Name Description Transform gmlTransform Returns Type Description Task < CityModel > TryParseLodGameObjectName(String, out Int32) Declaration public static bool TryParseLodGameObjectName(string lodGameObjName, out int outLod) Parameters Type Name Description String lodGameObjName Int32 outLod Returns Type Description Boolean"
  },
  "api/PLATEAU.CityObjectGizmoDrawer.html": {
    "href": "api/PLATEAU.CityObjectGizmoDrawer.html",
    "title": "Class CityObjectGizmoDrawer | PLATEAU SDK for Unity",
    "keywords": "Class CityObjectGizmoDrawer 属性情報パネル表示時にシーン上に選択中地物の情報を表示します Inheritance Object CityObjectGizmoDrawer Namespace : PLATEAU Assembly : cs.temp.dll.dll Syntax public class CityObjectGizmoDrawer : MonoBehaviour Methods ClearChildSelection() Declaration public void ClearChildSelection() ClearParentSelection() Declaration public void ClearParentSelection() ShowChildSelection(Transform, CityObjectIndex, String) Declaration public async Task ShowChildSelection(Transform trans, CityObjectIndex index, string id) Parameters Type Name Description Transform trans CityObjectIndex index String id Returns Type Description Task ShowParentSelection(Transform, CityObjectIndex, String) Declaration public async Task ShowParentSelection(Transform trans, CityObjectIndex index, string id) Parameters Type Name Description Transform trans CityObjectIndex index String id Returns Type Description Task"
  },
  "api/PLATEAU.Dataset.CityModelPackageInfo.html": {
    "href": "api/PLATEAU.Dataset.CityModelPackageInfo.html",
    "title": "Class CityModelPackageInfo | PLATEAU SDK for Unity",
    "keywords": "Class CityModelPackageInfo 都市モデルインポート時のパッケージごとの設定です。 Inheritance Object CityModelPackageInfo Namespace : PLATEAU.Dataset Assembly : cs.temp.dll.dll Syntax public class CityModelPackageInfo : PInvokeDisposable Properties HasAppearance Declaration public bool HasAppearance { get; } Property Value Type Description Boolean MaxLOD Declaration public int MaxLOD { get; } Property Value Type Description Int32 MinLOD Declaration public int MinLOD { get; } Property Value Type Description Int32 Methods Create(Boolean, Int32, Int32) Declaration public static CityModelPackageInfo Create(bool hasAppearance, int minLOD, int maxLOD) Parameters Type Name Description Boolean hasAppearance Int32 minLOD Int32 maxLOD Returns Type Description CityModelPackageInfo DisposeNative() Declaration protected override void DisposeNative() GetPredefined(PredefinedCityModelPackage) 与えられたパッケージ種別に対して、仕様上存在する可能性のあるLODの範囲と、仕様上テクスチャが存在する可能性があるかをタプルで返します。 Declaration public static (bool hasAppearance, int minLOD, int maxLOD) GetPredefined(PredefinedCityModelPackage package) Parameters Type Name Description PredefinedCityModelPackage package Returns Type Description (T1, T2, T3) < Boolean , Int32 , Int32 >"
  },
  "api/PLATEAU.Dataset.DatasetAccessor.html": {
    "href": "api/PLATEAU.Dataset.DatasetAccessor.html",
    "title": "Class DatasetAccessor | PLATEAU SDK for Unity",
    "keywords": "Class DatasetAccessor GMLファイル群から利用可能なファイル、メッシュコード、LODを検索します。 C++の内部ではこれは基底クラスとなっており、継承によりローカル向けとサーバー向けの両方に対応しています。 このクラスのポインタ (Handle) の具体的な型がローカル向けとサーバー向けのどちらであるかは、 DatasetSource の初期化時に指定し、 Accessor でその型である DatasetAccessor を取得します。 Inheritance Object DatasetAccessor Namespace : PLATEAU.Dataset Assembly : cs.temp.dll.dll Syntax public class DatasetAccessor : PInvokeDisposable Constructors DatasetAccessor(IntPtr) handle は C++側の基底クラス (IDatasetAccessor) のポインタです。 Declaration public DatasetAccessor(IntPtr handle) Parameters Type Name Description IntPtr handle Properties MeshCodes Declaration public NativeVectorMeshCode MeshCodes { get; } Property Value Type Description NativeVectorMeshCode Packages ローカルの場合: 存在するパッケージ種をフラグ形式で返します。 サーバーの場合: したことのある に関して、 存在するパッケージ種をフラグ形式で返します。 を実行した後でないと None が返ります。 Declaration public PredefinedCityModelPackage Packages { get; } Property Value Type Description PredefinedCityModelPackage Methods CalculateCenterPoint(GeoReference) Declaration public PlateauVector3d CalculateCenterPoint(GeoReference geoReference) Parameters Type Name Description GeoReference geoReference Returns Type Description PlateauVector3d DisposeNative() Declaration protected override void DisposeNative() FeatureTypeToPackage(String) gmlのパスが \"udx/(featureType)/aaa.gml\" として、 (featureType) の部分を PredefinedCityModelPackage に変換します。 Declaration public static PredefinedCityModelPackage FeatureTypeToPackage(string featureType) Parameters Type Name Description String featureType Returns Type Description PredefinedCityModelPackage FilterByMeshCodes(IEnumerable<MeshCode>) Declaration public DatasetAccessor FilterByMeshCodes(IEnumerable<MeshCode> meshCodes) Parameters Type Name Description IEnumerable < MeshCode > meshCodes Returns Type Description DatasetAccessor GetAllGmlFiles() Declaration public NativeVectorGmlFile GetAllGmlFiles() Returns Type Description NativeVectorGmlFile GetGmlFiles(PredefinedCityModelPackage) 引数のパッケージに対応する GmlFile を取得して vector で返します。 引数のパッケージは、複数のビットを立てることで複数指定可能です。 Declaration public NativeVectorGmlFile GetGmlFiles(PredefinedCityModelPackage package) Parameters Type Name Description PredefinedCityModelPackage package Returns Type Description NativeVectorGmlFile"
  },
  "api/PLATEAU.Dataset.DatasetMetadata.html": {
    "href": "api/PLATEAU.Dataset.DatasetMetadata.html",
    "title": "Class DatasetMetadata | PLATEAU SDK for Unity",
    "keywords": "Class DatasetMetadata Inheritance Object DatasetMetadata Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Dataset Assembly : cs.temp.dll.dll Syntax public class DatasetMetadata Constructors DatasetMetadata(IntPtr) Declaration public DatasetMetadata(IntPtr ptr) Parameters Type Name Description IntPtr ptr Properties Description Declaration public string Description { get; } Property Value Type Description String FeatureTypes Declaration public string[] FeatureTypes { get; } Property Value Type Description String [] ID Declaration public string ID { get; } Property Value Type Description String PackageFlags Declaration public PredefinedCityModelPackage PackageFlags { get; } Property Value Type Description PredefinedCityModelPackage Title Declaration public string Title { get; } Property Value Type Description String Methods Create() Declaration public static DatasetMetadata Create() Returns Type Description DatasetMetadata Dispose() Declaration public void Dispose()"
  },
  "api/PLATEAU.Dataset.DatasetMetadataGroup.html": {
    "href": "api/PLATEAU.Dataset.DatasetMetadataGroup.html",
    "title": "Class DatasetMetadataGroup | PLATEAU SDK for Unity",
    "keywords": "Class DatasetMetadataGroup Inheritance Object DatasetMetadataGroup Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Dataset Assembly : cs.temp.dll.dll Syntax public class DatasetMetadataGroup Constructors DatasetMetadataGroup(IntPtr) Declaration public DatasetMetadataGroup(IntPtr ptr) Parameters Type Name Description IntPtr ptr Properties Datasets Declaration public NativeVectorDatasetMetadata Datasets { get; } Property Value Type Description NativeVectorDatasetMetadata ID Declaration public string ID { get; } Property Value Type Description String Title Declaration public string Title { get; } Property Value Type Description String Methods Create() Declaration public static DatasetMetadataGroup Create() Returns Type Description DatasetMetadataGroup Dispose() Declaration public void Dispose()"
  },
  "api/PLATEAU.Dataset.DatasetSource.html": {
    "href": "api/PLATEAU.Dataset.DatasetSource.html",
    "title": "Class DatasetSource | PLATEAU SDK for Unity",
    "keywords": "Class DatasetSource Inheritance Object DatasetSource Namespace : PLATEAU.Dataset Assembly : cs.temp.dll.dll Syntax public class DatasetSource : PInvokeDisposable Properties Accessor Declaration public DatasetAccessor Accessor { get; } Property Value Type Description DatasetAccessor Methods Create(DatasetSourceConfig) Declaration public static DatasetSource Create(DatasetSourceConfig config) Parameters Type Name Description DatasetSourceConfig config Returns Type Description DatasetSource CreateForMockServer(String) Declaration public static DatasetSource CreateForMockServer(string datasetID) Parameters Type Name Description String datasetID Returns Type Description DatasetSource CreateLocal(String) ローカルPCのデータセットを指す DatasetSource を作ります。 Declaration public static DatasetSource CreateLocal(string path) Parameters Type Name Description String path Returns Type Description DatasetSource CreateServer(String, String, String) リモートPCのデータセットを指す DatasetSource を作ります。 Declaration public static DatasetSource CreateServer(string datasetID, string serverUrl, string apiToken) Parameters Type Name Description String datasetID String serverUrl String apiToken Returns Type Description DatasetSource DisposeNative() Declaration protected override void DisposeNative()"
  },
  "api/PLATEAU.Dataset.DatasetSourceConfig.html": {
    "href": "api/PLATEAU.Dataset.DatasetSourceConfig.html",
    "title": "Class DatasetSourceConfig | PLATEAU SDK for Unity",
    "keywords": "Class DatasetSourceConfig DatasetSource の初期化方法は、データの場所がローカルかサーバーかで異なりますが、 その違いを吸収するためのクラスです。 Inheritance Object DatasetSourceConfig Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Dataset Assembly : cs.temp.dll.dll Syntax public class DatasetSourceConfig Constructors DatasetSourceConfig(Boolean, String, String, String, String) DatasetSource の初期化のための情報を渡すコンストラクタです。 Declaration public DatasetSourceConfig(bool isServer, string localSourcePath, string serverDatasetID, string serverUrl, string serverToken) Parameters Type Name Description Boolean isServer データの場所は true ならサーバー、falseならローカルです。 String localSourcePath ローカルモードでのみ利用します。インポート元のパスを渡します。 String serverDatasetID サーバーモードでのみ利用します。データセットのIDを渡します。 そのIDとは、APIサーバーにデータセットの一覧を問い合わせたときに得られるID文字列です。例: 東京23区のデータセットのIDは \"23ku\" String serverUrl サーバーモードでのみ利用します。サーバーのURLです。 String serverToken サーバーモードでのみ利用します。サーバー認証のトークンです。 Properties IsServer Declaration public bool IsServer { get; set; } Property Value Type Description Boolean LocalSourcePath Declaration public string LocalSourcePath { get; set; } Property Value Type Description String ServerDatasetID Declaration public string ServerDatasetID { get; set; } Property Value Type Description String ServerToken Declaration public string ServerToken { get; set; } Property Value Type Description String ServerUrl Declaration public string ServerUrl { get; set; } Property Value Type Description String"
  },
  "api/PLATEAU.Dataset.GmlFile.html": {
    "href": "api/PLATEAU.Dataset.GmlFile.html",
    "title": "Class GmlFile | PLATEAU SDK for Unity",
    "keywords": "Class GmlFile GMLファイルに関する情報を保持します。 寿命管理について: の Dispose時、中身の GmlFile も自動的に廃棄されます。 その自動廃棄が呼ばれないケースでのみ、手動で Dispose() を呼んでください。 Inheritance Object GmlFile Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Dataset Assembly : cs.temp.dll.dll Syntax public class GmlFile Constructors GmlFile(IntPtr) Declaration public GmlFile(IntPtr handle) Parameters Type Name Description IntPtr handle Properties FeatureType Declaration public string FeatureType { get; } Property Value Type Description String Handle Declaration public IntPtr Handle { get; } Property Value Type Description IntPtr MeshCode GMLファイルのメッシュコードを返します。 ただし、誤った形式のGMLファイル名である等の理由でメッシュコードを読み取れなかった場合は 戻り値の meshCode.IsValid が false になります。 Declaration public MeshCode MeshCode { get; } Property Value Type Description MeshCode Package Declaration public PredefinedCityModelPackage Package { get; } Property Value Type Description PredefinedCityModelPackage Path Declaration public string Path { get; set; } Property Value Type Description String Methods CityRootPath() 都市データのルートディレクトリ、すなわち \"udx\"フォルダの1つ上のパスを返します。 Declaration public string CityRootPath() Returns Type Description String Create(String) GMLファイルに関する情報を保持するためのインスタンスを生成します。 実際にGMLファイルを作るわけではありません。 Declaration public static GmlFile Create(string path) Parameters Type Name Description String path Returns Type Description GmlFile Dispose() Declaration public void Dispose() Fetch(String) GmlFileのパスがローカルPCを指す場合: GMLファイルとその関連ファイルをコピーします。 関連ファイルを探すために、GMLファイルの中身に対して文字列検索（テクスチャパスなどの記載を探す）が行われるため、 GMLファイルの容量が増えるほど処理時間が増えます。 GmlFileのパスが http で始まる場合: GMLファイルとその関連ファイルをダウンロードします。 Declaration public GmlFile Fetch(string destinationRootPath) Parameters Type Name Description String destinationRootPath コピー先のルートフォルダのパスです。 Returns Type Description GmlFile GetMaxLod() ローカルの場合、GMLファイルの全文を検索して対応LODの最大を求めます。 サーバーの場合、APIサーバーに問い合わせて対応LODの最大を求めます。 どちらにしても時間がかかる処理になります。 Declaration public int GetMaxLod() Returns Type Description Int32 SearchAllCodelistPathsInGml() Declaration public string[] SearchAllCodelistPathsInGml() Returns Type Description String [] SearchAllImagePathsInGml() Declaration public string[] SearchAllImagePathsInGml() Returns Type Description String []"
  },
  "api/PLATEAU.Dataset.html": {
    "href": "api/PLATEAU.Dataset.html",
    "title": "Namespace PLATEAU.Dataset | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.Dataset Classes CityModelPackageInfo 都市モデルインポート時のパッケージごとの設定です。 DatasetAccessor GMLファイル群から利用可能なファイル、メッシュコード、LODを検索します。 C++の内部ではこれは基底クラスとなっており、継承によりローカル向けとサーバー向けの両方に対応しています。 このクラスのポインタ (Handle) の具体的な型がローカル向けとサーバー向けのどちらであるかは、 DatasetSource の初期化時に指定し、 Accessor でその型である DatasetAccessor を取得します。 DatasetMetadata DatasetMetadataGroup DatasetSource DatasetSourceConfig DatasetSource の初期化方法は、データの場所がローカルかサーバーかで異なりますが、 その違いを吸収するためのクラスです。 GmlFile GMLファイルに関する情報を保持します。 寿命管理について: の Dispose時、中身の GmlFile も自動的に廃棄されます。 その自動廃棄が呼ばれないケースでのみ、手動で Dispose() を呼んでください。 PredefinedCityModelPackageExtension Structs MeshCode Enums PredefinedCityModelPackage"
  },
  "api/PLATEAU.Dataset.MeshCode.html": {
    "href": "api/PLATEAU.Dataset.MeshCode.html",
    "title": "Struct MeshCode | PLATEAU SDK for Unity",
    "keywords": "Struct MeshCode Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.Dataset Assembly : cs.temp.dll.dll Syntax public struct MeshCode Fields Level Declaration public readonly int Level Field Value Type Description Int32 Properties Extent Declaration public readonly Extent Extent { get; } Property Value Type Description Extent IsValid Declaration public readonly bool IsValid { get; } Property Value Type Description Boolean Methods Level2() Declaration public string Level2() Returns Type Description String Parse(String) Declaration public static MeshCode Parse(string code) Parameters Type Name Description String code Returns Type Description MeshCode ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString()"
  },
  "api/PLATEAU.Dataset.PredefinedCityModelPackage.html": {
    "href": "api/PLATEAU.Dataset.PredefinedCityModelPackage.html",
    "title": "Enum PredefinedCityModelPackage | PLATEAU SDK for Unity",
    "keywords": "Enum PredefinedCityModelPackage Namespace : PLATEAU.Dataset Assembly : cs.temp.dll.dll Syntax public enum PredefinedCityModelPackage : uint Fields Name Description Area Bridge Building CityFurniture DisasterRisk Generic LandUse None OtherConstruction Railway Relief Road Square Track Tunnel UndergroundBuilding UndergroundFacility Unknown UrbanPlanningDecision Vegetation WaterBody Waterway"
  },
  "api/PLATEAU.Dataset.PredefinedCityModelPackageExtension.html": {
    "href": "api/PLATEAU.Dataset.PredefinedCityModelPackageExtension.html",
    "title": "Class PredefinedCityModelPackageExtension | PLATEAU SDK for Unity",
    "keywords": "Class PredefinedCityModelPackageExtension Inheritance Object PredefinedCityModelPackageExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Dataset Assembly : cs.temp.dll.dll Syntax public static class PredefinedCityModelPackageExtension Methods All() PredefinedCityModelPackage の各パッケージのビットを立てたものを返します。 Declaration public static PredefinedCityModelPackage All() Returns Type Description PredefinedCityModelPackage ToJapaneseName(PredefinedCityModelPackage) Package を日本語名にして返します。 Package として複数のフラグが立っている場合、それらの日本語名を \",\" で繋いで返します。 Declaration public static string ToJapaneseName(this PredefinedCityModelPackage package) Parameters Type Name Description PredefinedCityModelPackage package Returns Type Description String"
  },
  "api/PLATEAU.Editor.CityExport.html": {
    "href": "api/PLATEAU.Editor.CityExport.html",
    "title": "Namespace PLATEAU.Editor.CityExport | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.Editor.CityExport Enums MeshFileFormat"
  },
  "api/PLATEAU.Editor.CityExport.MeshFileFormat.html": {
    "href": "api/PLATEAU.Editor.CityExport.MeshFileFormat.html",
    "title": "Enum MeshFileFormat | PLATEAU SDK for Unity",
    "keywords": "Enum MeshFileFormat Namespace : PLATEAU.Editor.CityExport Assembly : cs.temp.dll.dll Syntax public enum MeshFileFormat Fields Name Description FBX GLTF OBJ"
  },
  "api/PLATEAU.Editor.CityInfo.html": {
    "href": "api/PLATEAU.Editor.CityInfo.html",
    "title": "Namespace PLATEAU.Editor.CityInfo | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.Editor.CityInfo Classes PLATEAUInstancedCityModelEditor"
  },
  "api/PLATEAU.Editor.CityInfo.PLATEAUInstancedCityModelEditor.html": {
    "href": "api/PLATEAU.Editor.CityInfo.PLATEAUInstancedCityModelEditor.html",
    "title": "Class PLATEAUInstancedCityModelEditor | PLATEAU SDK for Unity",
    "keywords": "Class PLATEAUInstancedCityModelEditor Inheritance Object PLATEAUInstancedCityModelEditor Namespace : PLATEAU.Editor.CityInfo Assembly : cs.temp.dll.dll Syntax public class PLATEAUInstancedCityModelEditor : UnityEditor.Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/PLATEAU.Editor.EditorWindow.PlateauWindow.MainTabGUI.ImportGUIParts.html": {
    "href": "api/PLATEAU.Editor.EditorWindow.PlateauWindow.MainTabGUI.ImportGUIParts.html",
    "title": "Namespace PLATEAU.Editor.EditorWindow.PlateauWindow.MainTabGUI.ImportGUIParts | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.Editor.EditorWindow.PlateauWindow.MainTabGUI.ImportGUIParts Classes ServerDatasetFetchGUI サーバーURLとトークンを指定するGUIを描画し、 そのURLに対して利用可能なデータセットを問い合わせます。 Enums ServerDatasetFetchGUI.LoadStatusEnum"
  },
  "api/PLATEAU.Editor.EditorWindow.PlateauWindow.MainTabGUI.ImportGUIParts.ServerDatasetFetchGUI.html": {
    "href": "api/PLATEAU.Editor.EditorWindow.PlateauWindow.MainTabGUI.ImportGUIParts.ServerDatasetFetchGUI.html",
    "title": "Class ServerDatasetFetchGUI | PLATEAU SDK for Unity",
    "keywords": "Class ServerDatasetFetchGUI サーバーURLとトークンを指定するGUIを描画し、 そのURLに対して利用可能なデータセットを問い合わせます。 Inheritance Object ServerDatasetFetchGUI Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Editor.EditorWindow.PlateauWindow.MainTabGUI.ImportGUIParts Assembly : cs.temp.dll.dll Syntax public class ServerDatasetFetchGUI Constructors ServerDatasetFetchGUI(UnityEditor.EditorWindow) Declaration public ServerDatasetFetchGUI(UnityEditor.EditorWindow parentWindow) Parameters Type Name Description UnityEditor.EditorWindow parentWindow Properties DatasetGroups Declaration public NativeVectorDatasetMetadataGroup DatasetGroups { get; } Property Value Type Description NativeVectorDatasetMetadataGroup LoadStatus Declaration public ServerDatasetFetchGUI.LoadStatusEnum LoadStatus { get; } Property Value Type Description ServerDatasetFetchGUI.LoadStatusEnum ServerToken Declaration public string ServerToken { get; } Property Value Type Description String ServerUrl Declaration public string ServerUrl { get; } Property Value Type Description String Methods Draw() Declaration public void Draw()"
  },
  "api/PLATEAU.Editor.EditorWindow.PlateauWindow.MainTabGUI.ImportGUIParts.ServerDatasetFetchGUI.LoadStatusEnum.html": {
    "href": "api/PLATEAU.Editor.EditorWindow.PlateauWindow.MainTabGUI.ImportGUIParts.ServerDatasetFetchGUI.LoadStatusEnum.html",
    "title": "Enum ServerDatasetFetchGUI.LoadStatusEnum | PLATEAU SDK for Unity",
    "keywords": "Enum ServerDatasetFetchGUI.LoadStatusEnum Namespace : PLATEAU.Editor.EditorWindow.PlateauWindow.MainTabGUI.ImportGUIParts Assembly : cs.temp.dll.dll Syntax public enum LoadStatusEnum Fields Name Description Failure Loading NotStarted Success"
  },
  "api/PLATEAU.Geometries.CoordinateSystem.html": {
    "href": "api/PLATEAU.Geometries.CoordinateSystem.html",
    "title": "Enum CoordinateSystem | PLATEAU SDK for Unity",
    "keywords": "Enum CoordinateSystem 各列挙子について、3つのアルファベットはXYZ軸がどの方角、方向になるかを表しています。 N,S,E,Wはそれぞれ北,南,東,西 U,Dはそれぞれ上,下 に対応します。 Namespace : PLATEAU.Geometries Assembly : cs.temp.dll.dll Syntax public enum CoordinateSystem Fields Name Description ENU PLATEAUでの座標系 ESU Unreal Engineでの座標系 EUN Unityでの座標系 WUN"
  },
  "api/PLATEAU.Geometries.CoordinateSystemExtension.html": {
    "href": "api/PLATEAU.Geometries.CoordinateSystemExtension.html",
    "title": "Class CoordinateSystemExtension | PLATEAU SDK for Unity",
    "keywords": "Class CoordinateSystemExtension Inheritance Object CoordinateSystemExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Geometries Assembly : cs.temp.dll.dll Syntax public static class CoordinateSystemExtension Methods ToNaturalLanguage(CoordinateSystem) Declaration public static string ToNaturalLanguage(this CoordinateSystem system) Parameters Type Name Description CoordinateSystem system Returns Type Description String"
  },
  "api/PLATEAU.Geometries.GeoReference.html": {
    "href": "api/PLATEAU.Geometries.GeoReference.html",
    "title": "Class GeoReference | PLATEAU SDK for Unity",
    "keywords": "Class GeoReference 極座標と平面直角座標を変換します。 また座標変換の基準を保持します。 Inheritance Object GeoReference Namespace : PLATEAU.Geometries Assembly : cs.temp.dll.dll Syntax public class GeoReference : PInvokeDisposable Properties CoordinateSystem Declaration public CoordinateSystem CoordinateSystem { get; } Property Value Type Description CoordinateSystem ReferencePoint Declaration public PlateauVector3d ReferencePoint { get; } Property Value Type Description PlateauVector3d UnitScale Declaration public float UnitScale { get; } Property Value Type Description Single ZoneID Declaration public int ZoneID { get; } Property Value Type Description Int32 ZoneIdExplanation Declaration public static string[] ZoneIdExplanation { get; } Property Value Type Description String [] Methods Create(PlateauVector3d, Single, CoordinateSystem, Int32) Declaration public static GeoReference Create(PlateauVector3d referencePoint, float unitScale, CoordinateSystem coordinateSystem, int zoneID) Parameters Type Name Description PlateauVector3d referencePoint 平面直角座標に変換したあと、この座標が原点となるように並行移動します。 Single unitScale 平面直角座標に変換したあと、拡大縮小します。 CoordinateSystem coordinateSystem 平面直角座標のX,Y,Z軸の向きを決めます。 Int32 zoneID 国土交通省告示第九号に基づく平面直角座標系の原点の番号です。 関東地方では 9 を選択すると歪みが少なくなりますが、 この値を間違えても、ぱっと見ですぐ分かるような歪みにはなりません。 詳しくはこちらを参照してください : https://www.gsi.go.jp/sokuchikijun/jpc.html Returns Type Description GeoReference DisposeNative() Declaration protected override void DisposeNative() Finalize() Declaration protected void Finalize() Project(GeoCoordinate) Declaration public PlateauVector3d Project(GeoCoordinate geoCoordinate) Parameters Type Name Description GeoCoordinate geoCoordinate Returns Type Description PlateauVector3d Unproject(PlateauVector3d) Declaration public GeoCoordinate Unproject(PlateauVector3d point) Parameters Type Name Description PlateauVector3d point Returns Type Description GeoCoordinate"
  },
  "api/PLATEAU.Geometries.html": {
    "href": "api/PLATEAU.Geometries.html",
    "title": "Namespace PLATEAU.Geometries | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.Geometries Classes CoordinateSystemExtension GeoReference 極座標と平面直角座標を変換します。 また座標変換の基準を保持します。 Enums CoordinateSystem 各列挙子について、3つのアルファベットはXYZ軸がどの方角、方向になるかを表しています。 N,S,E,Wはそれぞれ北,南,東,西 U,Dはそれぞれ上,下 に対応します。"
  },
  "api/PLATEAU.html": {
    "href": "api/PLATEAU.html",
    "title": "Namespace PLATEAU | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU Classes CityObjectGizmoDrawer 属性情報パネル表示時にシーン上に選択中地物の情報を表示します PLATEAUCityObjectGroupEditor"
  },
  "api/PLATEAU.MeshWriter.FbxFileFormat.html": {
    "href": "api/PLATEAU.MeshWriter.FbxFileFormat.html",
    "title": "Enum FbxFileFormat | PLATEAU SDK for Unity",
    "keywords": "Enum FbxFileFormat Namespace : PLATEAU.MeshWriter Assembly : cs.temp.dll.dll Syntax public enum FbxFileFormat Fields Name Description Ascii Binary"
  },
  "api/PLATEAU.MeshWriter.FbxWriteOptions.html": {
    "href": "api/PLATEAU.MeshWriter.FbxWriteOptions.html",
    "title": "Struct FbxWriteOptions | PLATEAU SDK for Unity",
    "keywords": "Struct FbxWriteOptions Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.MeshWriter Assembly : cs.temp.dll.dll Syntax public struct FbxWriteOptions Constructors FbxWriteOptions(FbxFileFormat) Declaration public FbxWriteOptions(FbxFileFormat fileFormat) Parameters Type Name Description FbxFileFormat fileFormat Fields FileFormat Declaration public FbxFileFormat FileFormat Field Value Type Description FbxFileFormat"
  },
  "api/PLATEAU.MeshWriter.FbxWriter.html": {
    "href": "api/PLATEAU.MeshWriter.FbxWriter.html",
    "title": "Class FbxWriter | PLATEAU SDK for Unity",
    "keywords": "Class FbxWriter Inheritance Object FbxWriter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.MeshWriter Assembly : cs.temp.dll.dll Syntax public static class FbxWriter Methods Write(String, Model, FbxWriteOptions) Declaration public static bool Write(string fbxPath, Model model, FbxWriteOptions options) Parameters Type Name Description String fbxPath Model model FbxWriteOptions options Returns Type Description Boolean"
  },
  "api/PLATEAU.MeshWriter.GltfFileFormat.html": {
    "href": "api/PLATEAU.MeshWriter.GltfFileFormat.html",
    "title": "Enum GltfFileFormat | PLATEAU SDK for Unity",
    "keywords": "Enum GltfFileFormat Namespace : PLATEAU.MeshWriter Assembly : cs.temp.dll.dll Syntax public enum GltfFileFormat Fields Name Description GLB GLTF"
  },
  "api/PLATEAU.MeshWriter.GltfWriteOptions.html": {
    "href": "api/PLATEAU.MeshWriter.GltfWriteOptions.html",
    "title": "Struct GltfWriteOptions | PLATEAU SDK for Unity",
    "keywords": "Struct GltfWriteOptions Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.MeshWriter Assembly : cs.temp.dll.dll Syntax public struct GltfWriteOptions Constructors GltfWriteOptions(GltfFileFormat, String) Declaration public GltfWriteOptions(GltfFileFormat format, string path) Parameters Type Name Description GltfFileFormat format String path Fields GltfFileFormat Declaration public GltfFileFormat GltfFileFormat Field Value Type Description GltfFileFormat TextureDirectoryPath Declaration public string TextureDirectoryPath Field Value Type Description String"
  },
  "api/PLATEAU.MeshWriter.GltfWriter.html": {
    "href": "api/PLATEAU.MeshWriter.GltfWriter.html",
    "title": "Class GltfWriter | PLATEAU SDK for Unity",
    "keywords": "Class GltfWriter Inheritance Object GltfWriter Namespace : PLATEAU.MeshWriter Assembly : cs.temp.dll.dll Syntax public class GltfWriter : IDisposable Constructors GltfWriter() Declaration public GltfWriter() Methods Dispose() Declaration public void Dispose() Finalize() Declaration protected void Finalize() Write(String, Model, GltfWriteOptions) Declaration public bool Write(string destination, Model model, GltfWriteOptions options) Parameters Type Name Description String destination Model model GltfWriteOptions options Returns Type Description Boolean"
  },
  "api/PLATEAU.MeshWriter.html": {
    "href": "api/PLATEAU.MeshWriter.html",
    "title": "Namespace PLATEAU.MeshWriter | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.MeshWriter Classes FbxWriter GltfWriter ObjWriter Structs FbxWriteOptions GltfWriteOptions Enums FbxFileFormat GltfFileFormat"
  },
  "api/PLATEAU.MeshWriter.ObjWriter.html": {
    "href": "api/PLATEAU.MeshWriter.ObjWriter.html",
    "title": "Class ObjWriter | PLATEAU SDK for Unity",
    "keywords": "Class ObjWriter Inheritance Object ObjWriter Namespace : PLATEAU.MeshWriter Assembly : cs.temp.dll.dll Syntax public class ObjWriter : IDisposable Constructors ObjWriter() Declaration public ObjWriter() Methods Dispose() Declaration public void Dispose() Finalize() Declaration protected void Finalize() Write(String, Model) Declaration public bool Write(string destination, Model model) Parameters Type Name Description String destination Model model Returns Type Description Boolean"
  },
  "api/PLATEAU.Native.DllLogger.html": {
    "href": "api/PLATEAU.Native.DllLogger.html",
    "title": "Class DllLogger | PLATEAU SDK for Unity",
    "keywords": "Class DllLogger DLL側のログをC#側にコールバックで転送するクラスです。 C#側でログを表示するためのコールバックメソッドとログ詳細度を指定できます。 Inheritance Object DllLogger Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public class DllLogger : IDisposable Constructors DllLogger() Declaration public DllLogger() DllLogger(IntPtr) Declaration public DllLogger(IntPtr handle) Parameters Type Name Description IntPtr handle Methods Dispose() Declaration public void Dispose() Finalize() Declaration protected void Finalize() SetCallbacksToStdOut() DLLから受け取ったログメッセージを C#での標準出力に転送するよう設定します。 Declaration public void SetCallbacksToStdOut() SetLogCallbacks(LogCallbacks) DLL内でのログをコールバックによって受け取ることができるようにします。 Declaration public void SetLogCallbacks(LogCallbacks callbacks) Parameters Type Name Description LogCallbacks callbacks SetLogLevel(DllLogLevel) 指定したログレベル未満のログは無視するようにします。 Declaration public void SetLogLevel(DllLogLevel logLevel) Parameters Type Name Description DllLogLevel logLevel"
  },
  "api/PLATEAU.Native.DllLogLevel.html": {
    "href": "api/PLATEAU.Native.DllLogLevel.html",
    "title": "Enum DllLogLevel | PLATEAU SDK for Unity",
    "keywords": "Enum DllLogLevel Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public enum DllLogLevel Fields Name Description Debug Error Info Trace Warning"
  },
  "api/PLATEAU.Native.Extent.html": {
    "href": "api/PLATEAU.Native.Extent.html",
    "title": "Struct Extent | PLATEAU SDK for Unity",
    "keywords": "Struct Extent 最小点と最大点の2点で表現される範囲であり、 各点は緯度・経度・高さで表現されます。 すなわち、2つの GeoCoordinate からなる範囲表現です。 Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public struct Extent Constructors Extent(GeoCoordinate, GeoCoordinate) Declaration public Extent(GeoCoordinate min, GeoCoordinate max) Parameters Type Name Description GeoCoordinate min GeoCoordinate max Fields All Declaration public static readonly Extent All Field Value Type Description Extent Max Declaration public GeoCoordinate Max Field Value Type Description GeoCoordinate Min Declaration public GeoCoordinate Min Field Value Type Description GeoCoordinate Properties Center Declaration public readonly GeoCoordinate Center { get; } Property Value Type Description GeoCoordinate Methods Intersection(Extent, Extent) 共通部分を返します。 なければ (-99, -99, -99), (-99, -99, -99)を返します。 Declaration public static Extent Intersection(Extent op1, Extent op2) Parameters Type Name Description Extent op1 Extent op2 Returns Type Description Extent Size() Declaration public GeoCoordinate Size() Returns Type Description GeoCoordinate ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString()"
  },
  "api/PLATEAU.Native.GeoCoordinate.html": {
    "href": "api/PLATEAU.Native.GeoCoordinate.html",
    "title": "Struct GeoCoordinate | PLATEAU SDK for Unity",
    "keywords": "Struct GeoCoordinate 緯度・経度・高さで表現される座標です。 Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public struct GeoCoordinate Constructors GeoCoordinate(Double, Double, Double) Declaration public GeoCoordinate(double lat, double lon, double height) Parameters Type Name Description Double lat Double lon Double height Fields Height Declaration public double Height Field Value Type Description Double Latitude Declaration public double Latitude Field Value Type Description Double Longitude Declaration public double Longitude Field Value Type Description Double Properties SqrMagnitudeLatLon 緯度、経度の値を2次元ベクトルとして見たときのベクトルの長さの2乗です。 高さは無視されます。 Declaration public readonly double SqrMagnitudeLatLon { get; } Property Value Type Description Double Methods Max(GeoCoordinate, GeoCoordinate) Declaration public static GeoCoordinate Max(GeoCoordinate op1, GeoCoordinate op2) Parameters Type Name Description GeoCoordinate op1 GeoCoordinate op2 Returns Type Description GeoCoordinate Min(GeoCoordinate, GeoCoordinate) Declaration public static GeoCoordinate Min(GeoCoordinate op1, GeoCoordinate op2) Parameters Type Name Description GeoCoordinate op1 GeoCoordinate op2 Returns Type Description GeoCoordinate ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators Addition(GeoCoordinate, GeoCoordinate) Declaration public static GeoCoordinate operator +(GeoCoordinate op1, GeoCoordinate op2) Parameters Type Name Description GeoCoordinate op1 GeoCoordinate op2 Returns Type Description GeoCoordinate Division(GeoCoordinate, Double) Declaration public static GeoCoordinate operator /(GeoCoordinate geo, double scalar) Parameters Type Name Description GeoCoordinate geo Double scalar Returns Type Description GeoCoordinate Multiply(GeoCoordinate, Double) Declaration public static GeoCoordinate operator *(GeoCoordinate geo, double scalar) Parameters Type Name Description GeoCoordinate geo Double scalar Returns Type Description GeoCoordinate Subtraction(GeoCoordinate, GeoCoordinate) Declaration public static GeoCoordinate operator -(GeoCoordinate op1, GeoCoordinate op2) Parameters Type Name Description GeoCoordinate op1 GeoCoordinate op2 Returns Type Description GeoCoordinate"
  },
  "api/PLATEAU.Native.html": {
    "href": "api/PLATEAU.Native.html",
    "title": "Namespace PLATEAU.Native | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.Native Classes DllLogger DLL側のログをC#側にコールバックで転送するクラスです。 C#側でログを表示するためのコールバックメソッドとログ詳細度を指定できます。 LogCallbacks DLL側のログをC#側でコールバックで受け取ることができますが、 その Error, Warn, Info の3つのコールバックをまとめたクラスです。 詳しくは DllLogger をご覧ください。 NativeVectorBase<T> C++側の vector を扱う基底クラスです。 自動で Dispose したいときは NativeVectorDisposableBase<T> を利用してください。 NativeVectorDatasetMetadata NativeVectorDatasetMetadataGroup NativeVectorDisposableBase<T> NativeVectorBase<T> の自動で NativeDispose する版です。 NativeVectorGmlFile NativeVectorMeshCode PInvokeDisposable 廃棄時に Native側で delete する必要があるものの基底クラスです。 Native側で delete する処理として、 DisposeNative() がサブクラスで実装されていることを前提とします。 廃棄タイミングは GC処理時 または using(var a){} ブロックを抜ける時 または Dispose() を呼んだときです。 Structs Extent 最小点と最大点の2点で表現される範囲であり、 各点は緯度・経度・高さで表現されます。 すなわち、2つの GeoCoordinate からなる範囲表現です。 GeoCoordinate 緯度・経度・高さで表現される座標です。 PlateauVector2f PlateauVector3d PlateauVector3f Interfaces INativeVector<T> Enums DllLogLevel Delegates LogCallbacks.LogCallbackFuncType"
  },
  "api/PLATEAU.Native.INativeVector-1.html": {
    "href": "api/PLATEAU.Native.INativeVector-1.html",
    "title": "Interface INativeVector<T> | PLATEAU SDK for Unity",
    "keywords": "Interface INativeVector<T> Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public interface INativeVector<out T> Type Parameters Name Description T Properties Length Declaration int Length { get; } Property Value Type Description Int32 Methods At(Int32) Declaration T At(int index) Parameters Type Name Description Int32 index Returns Type Description T"
  },
  "api/PLATEAU.Native.LogCallbacks.html": {
    "href": "api/PLATEAU.Native.LogCallbacks.html",
    "title": "Class LogCallbacks | PLATEAU SDK for Unity",
    "keywords": "Class LogCallbacks DLL側のログをC#側でコールバックで受け取ることができますが、 その Error, Warn, Info の3つのコールバックをまとめたクラスです。 詳しくは DllLogger をご覧ください。 Inheritance Object LogCallbacks Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public class LogCallbacks Constructors LogCallbacks(LogCallbacks.LogCallbackFuncType, LogCallbacks.LogCallbackFuncType, LogCallbacks.LogCallbackFuncType) Declaration public LogCallbacks(LogCallbacks.LogCallbackFuncType logError, LogCallbacks.LogCallbackFuncType logWarn, LogCallbacks.LogCallbackFuncType logInfo) Parameters Type Name Description LogCallbacks.LogCallbackFuncType logError LogCallbacks.LogCallbackFuncType logWarn LogCallbacks.LogCallbackFuncType logInfo Fields StdOut DLLのログをC#の標準出力に転送するよう設定されたコールバックメソッドです。 Declaration public static readonly LogCallbacks StdOut Field Value Type Description LogCallbacks Properties LogError Declaration public LogCallbacks.LogCallbackFuncType LogError { get; set; } Property Value Type Description LogCallbacks.LogCallbackFuncType LogErrorFuncPtr Declaration public IntPtr LogErrorFuncPtr { get; } Property Value Type Description IntPtr LogInfo Declaration public LogCallbacks.LogCallbackFuncType LogInfo { get; set; } Property Value Type Description LogCallbacks.LogCallbackFuncType LogInfoFuncPtr Declaration public IntPtr LogInfoFuncPtr { get; } Property Value Type Description IntPtr LogWarn Declaration public LogCallbacks.LogCallbackFuncType LogWarn { get; set; } Property Value Type Description LogCallbacks.LogCallbackFuncType LogWarnFuncPtr Declaration public IntPtr LogWarnFuncPtr { get; } Property Value Type Description IntPtr"
  },
  "api/PLATEAU.Native.LogCallbacks.LogCallbackFuncType.html": {
    "href": "api/PLATEAU.Native.LogCallbacks.LogCallbackFuncType.html",
    "title": "Delegate LogCallbacks.LogCallbackFuncType | PLATEAU SDK for Unity",
    "keywords": "Delegate LogCallbacks.LogCallbackFuncType Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public delegate void LogCallbackFuncType(IntPtr textPtr); Parameters Type Name Description IntPtr textPtr"
  },
  "api/PLATEAU.Native.NativeVectorBase-1.html": {
    "href": "api/PLATEAU.Native.NativeVectorBase-1.html",
    "title": "Class NativeVectorBase<T> | PLATEAU SDK for Unity",
    "keywords": "Class NativeVectorBase<T> C++側の vector を扱う基底クラスです。 自動で Dispose したいときは NativeVectorDisposableBase<T> を利用してください。 Inheritance Object NativeVectorBase<T> NativeVectorDatasetMetadata Implements INativeVector <T> IEnumerable <T> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public abstract class NativeVectorBase<T> : INativeVector<T> Type Parameters Name Description T Constructors NativeVectorBase(IntPtr) Declaration protected NativeVectorBase(IntPtr handle) Parameters Type Name Description IntPtr handle Properties Handle Declaration protected IntPtr Handle { get; } Property Value Type Description IntPtr Length Declaration public abstract int Length { get; } Property Value Type Description Int32 Methods At(Int32) Declaration public abstract T At(int index) Parameters Type Name Description Int32 index Returns Type Description T GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> Implements INativeVector<T> IEnumerable<>"
  },
  "api/PLATEAU.Native.NativeVectorDatasetMetadata.html": {
    "href": "api/PLATEAU.Native.NativeVectorDatasetMetadata.html",
    "title": "Class NativeVectorDatasetMetadata | PLATEAU SDK for Unity",
    "keywords": "Class NativeVectorDatasetMetadata Inheritance Object NativeVectorBase < DatasetMetadata > NativeVectorDatasetMetadata Implements INativeVector < DatasetMetadata > IEnumerable < DatasetMetadata > Inherited Members NativeVectorBase<DatasetMetadata>.Handle NativeVectorBase<DatasetMetadata>.GetEnumerator() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public class NativeVectorDatasetMetadata : NativeVectorBase<DatasetMetadata>, INativeVector<DatasetMetadata> Constructors NativeVectorDatasetMetadata(IntPtr) Declaration public NativeVectorDatasetMetadata(IntPtr handle) Parameters Type Name Description IntPtr handle Properties Length Declaration public override int Length { get; } Property Value Type Description Int32 Overrides PLATEAU.Native.NativeVectorBase<DatasetMetadata>.Length Methods At(Int32) Declaration public override DatasetMetadata At(int index) Parameters Type Name Description Int32 index Returns Type Description DatasetMetadata Overrides PLATEAU.Native.NativeVectorBase<DatasetMetadata>.At(System.Int32) Create() Declaration public static NativeVectorDatasetMetadata Create() Returns Type Description NativeVectorDatasetMetadata Dispose() 取扱注意: 通常は NativeVectorDatasetMetadataGroup の廃棄時に廃棄されるので呼ぶ必要はありません。 NativeVectorDatasetMetadataGroup を介さないインスタンスのみ廃棄してください。 Declaration public void Dispose() Implements INativeVector<T> IEnumerable<>"
  },
  "api/PLATEAU.Native.NativeVectorDatasetMetadataGroup.html": {
    "href": "api/PLATEAU.Native.NativeVectorDatasetMetadataGroup.html",
    "title": "Class NativeVectorDatasetMetadataGroup | PLATEAU SDK for Unity",
    "keywords": "Class NativeVectorDatasetMetadataGroup Inheritance Object PInvokeDisposable NativeVectorDisposableBase < DatasetMetadataGroup > NativeVectorDatasetMetadataGroup Implements INativeVector < DatasetMetadataGroup > IEnumerable < DatasetMetadataGroup > Inherited Members NativeVectorDisposableBase<DatasetMetadataGroup>.GetEnumerator() PInvokeDisposable.Handle PInvokeDisposable.Dispose() PInvokeDisposable.ThrowIfDisposed() Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public class NativeVectorDatasetMetadataGroup : NativeVectorDisposableBase<DatasetMetadataGroup>, INativeVector<DatasetMetadataGroup> Properties Length Declaration public override int Length { get; } Property Value Type Description Int32 Overrides PLATEAU.Native.NativeVectorDisposableBase<DatasetMetadataGroup>.Length Methods At(Int32) Declaration public override DatasetMetadataGroup At(int index) Parameters Type Name Description Int32 index Returns Type Description DatasetMetadataGroup Overrides PLATEAU.Native.NativeVectorDisposableBase<DatasetMetadataGroup>.At(System.Int32) Create() Declaration public static NativeVectorDatasetMetadataGroup Create() Returns Type Description NativeVectorDatasetMetadataGroup DisposeNative() Declaration protected override void DisposeNative() Overrides PInvokeDisposable.DisposeNative() Implements INativeVector<T> IEnumerable<>"
  },
  "api/PLATEAU.Native.NativeVectorDisposableBase-1.html": {
    "href": "api/PLATEAU.Native.NativeVectorDisposableBase-1.html",
    "title": "Class NativeVectorDisposableBase<T> | PLATEAU SDK for Unity",
    "keywords": "Class NativeVectorDisposableBase<T> NativeVectorBase<T> の自動で NativeDispose する版です。 Inheritance Object PInvokeDisposable NativeVectorDisposableBase<T> NativeVectorDatasetMetadataGroup NativeVectorGmlFile NativeVectorMeshCode Implements INativeVector <T> IEnumerable <T> Inherited Members PInvokeDisposable.Handle PInvokeDisposable.DisposeNative() PInvokeDisposable.Dispose() PInvokeDisposable.ThrowIfDisposed() Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public abstract class NativeVectorDisposableBase<T> : PInvokeDisposable, INativeVector<T> Type Parameters Name Description T Constructors NativeVectorDisposableBase(IntPtr) Declaration protected NativeVectorDisposableBase(IntPtr handle) Parameters Type Name Description IntPtr handle Properties Length Declaration public abstract int Length { get; } Property Value Type Description Int32 Methods At(Int32) Declaration public abstract T At(int index) Parameters Type Name Description Int32 index Returns Type Description T GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> Implements INativeVector<T> IEnumerable<>"
  },
  "api/PLATEAU.Native.NativeVectorGmlFile.html": {
    "href": "api/PLATEAU.Native.NativeVectorGmlFile.html",
    "title": "Class NativeVectorGmlFile | PLATEAU SDK for Unity",
    "keywords": "Class NativeVectorGmlFile Inheritance Object PInvokeDisposable NativeVectorDisposableBase < GmlFile > NativeVectorGmlFile Implements INativeVector < GmlFile > IEnumerable < GmlFile > Inherited Members NativeVectorDisposableBase<GmlFile>.GetEnumerator() PInvokeDisposable.Handle PInvokeDisposable.Dispose() PInvokeDisposable.ThrowIfDisposed() Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public class NativeVectorGmlFile : NativeVectorDisposableBase<GmlFile>, INativeVector<GmlFile> Properties Length Declaration public override int Length { get; } Property Value Type Description Int32 Overrides PLATEAU.Native.NativeVectorDisposableBase<GmlFile>.Length Methods AddCopyOf(NativeVectorGmlFile) Declaration public void AddCopyOf(NativeVectorGmlFile other) Parameters Type Name Description NativeVectorGmlFile other At(Int32) Declaration public override GmlFile At(int index) Parameters Type Name Description Int32 index Returns Type Description GmlFile Overrides PLATEAU.Native.NativeVectorDisposableBase<GmlFile>.At(System.Int32) Create() Declaration public static NativeVectorGmlFile Create() Returns Type Description NativeVectorGmlFile DisposeNative() Declaration protected override void DisposeNative() Overrides PInvokeDisposable.DisposeNative() Implements INativeVector<T> IEnumerable<>"
  },
  "api/PLATEAU.Native.NativeVectorMeshCode.html": {
    "href": "api/PLATEAU.Native.NativeVectorMeshCode.html",
    "title": "Class NativeVectorMeshCode | PLATEAU SDK for Unity",
    "keywords": "Class NativeVectorMeshCode Inheritance Object PInvokeDisposable NativeVectorDisposableBase < MeshCode > NativeVectorMeshCode Implements INativeVector < MeshCode > IEnumerable < MeshCode > Inherited Members NativeVectorDisposableBase<MeshCode>.GetEnumerator() PInvokeDisposable.Handle PInvokeDisposable.Dispose() PInvokeDisposable.ThrowIfDisposed() Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public class NativeVectorMeshCode : NativeVectorDisposableBase<MeshCode>, INativeVector<MeshCode> Properties Length Declaration public override int Length { get; } Property Value Type Description Int32 Overrides PLATEAU.Native.NativeVectorDisposableBase<MeshCode>.Length Methods Add(MeshCode) Declaration public void Add(MeshCode meshCode) Parameters Type Name Description MeshCode meshCode At(Int32) Declaration public override MeshCode At(int index) Parameters Type Name Description Int32 index Returns Type Description MeshCode Overrides PLATEAU.Native.NativeVectorDisposableBase<MeshCode>.At(System.Int32) Create() Declaration public static NativeVectorMeshCode Create() Returns Type Description NativeVectorMeshCode DisposeNative() Declaration protected override void DisposeNative() Overrides PInvokeDisposable.DisposeNative() Implements INativeVector<T> IEnumerable<>"
  },
  "api/PLATEAU.Native.PInvokeDisposable.html": {
    "href": "api/PLATEAU.Native.PInvokeDisposable.html",
    "title": "Class PInvokeDisposable | PLATEAU SDK for Unity",
    "keywords": "Class PInvokeDisposable 廃棄時に Native側で delete する必要があるものの基底クラスです。 Native側で delete する処理として、 DisposeNative() がサブクラスで実装されていることを前提とします。 廃棄タイミングは GC処理時 または using(var a){} ブロックを抜ける時 または Dispose() を呼んだときです。 Inheritance Object PInvokeDisposable NativeVectorDisposableBase<T> Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public abstract class PInvokeDisposable : IDisposable Constructors PInvokeDisposable(IntPtr) Declaration protected PInvokeDisposable(IntPtr handle) Parameters Type Name Description IntPtr handle Properties Handle Declaration public IntPtr Handle { get; } Property Value Type Description IntPtr Methods Dispose() Declaration public void Dispose() DisposeNative() Declaration protected abstract void DisposeNative() Finalize() Declaration protected void Finalize() ThrowIfDisposed() Declaration protected void ThrowIfDisposed()"
  },
  "api/PLATEAU.Native.PlateauVector2f.html": {
    "href": "api/PLATEAU.Native.PlateauVector2f.html",
    "title": "Struct PlateauVector2f | PLATEAU SDK for Unity",
    "keywords": "Struct PlateauVector2f Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public struct PlateauVector2f Constructors PlateauVector2f(Single, Single) Declaration public PlateauVector2f(float x, float y) Parameters Type Name Description Single x Single y Fields X Declaration public float X Field Value Type Description Single Y Declaration public float Y Field Value Type Description Single Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString()"
  },
  "api/PLATEAU.Native.PlateauVector3d.html": {
    "href": "api/PLATEAU.Native.PlateauVector3d.html",
    "title": "Struct PlateauVector3d | PLATEAU SDK for Unity",
    "keywords": "Struct PlateauVector3d Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public struct PlateauVector3d Constructors PlateauVector3d(Double, Double, Double) Declaration public PlateauVector3d(double x, double y, double z) Parameters Type Name Description Double x Double y Double z Fields X Declaration public double X Field Value Type Description Double Y Declaration public double Y Field Value Type Description Double Z Declaration public double Z Field Value Type Description Double Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators Addition(PlateauVector3d, PlateauVector3d) Declaration public static PlateauVector3d operator +(PlateauVector3d op1, PlateauVector3d op2) Parameters Type Name Description PlateauVector3d op1 PlateauVector3d op2 Returns Type Description PlateauVector3d Division(PlateauVector3d, Double) Declaration public static PlateauVector3d operator /(PlateauVector3d vec, double scalar) Parameters Type Name Description PlateauVector3d vec Double scalar Returns Type Description PlateauVector3d Multiply(PlateauVector3d, Double) Declaration public static PlateauVector3d operator *(PlateauVector3d vec, double scalar) Parameters Type Name Description PlateauVector3d vec Double scalar Returns Type Description PlateauVector3d Subtraction(PlateauVector3d, PlateauVector3d) Declaration public static PlateauVector3d operator -(PlateauVector3d op1, PlateauVector3d op2) Parameters Type Name Description PlateauVector3d op1 PlateauVector3d op2 Returns Type Description PlateauVector3d"
  },
  "api/PLATEAU.Native.PlateauVector3f.html": {
    "href": "api/PLATEAU.Native.PlateauVector3f.html",
    "title": "Struct PlateauVector3f | PLATEAU SDK for Unity",
    "keywords": "Struct PlateauVector3f Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public struct PlateauVector3f Constructors PlateauVector3f(Single, Single, Single) Declaration public PlateauVector3f(float x, float y, float z) Parameters Type Name Description Single x Single y Single z Fields X Declaration public float X Field Value Type Description Single Y Declaration public float Y Field Value Type Description Single Z Declaration public float Z Field Value Type Description Single Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators Addition(PlateauVector3f, PlateauVector3f) Declaration public static PlateauVector3f operator +(PlateauVector3f op1, PlateauVector3f op2) Parameters Type Name Description PlateauVector3f op1 PlateauVector3f op2 Returns Type Description PlateauVector3f Division(PlateauVector3f, Single) Declaration public static PlateauVector3f operator /(PlateauVector3f vec, float scalar) Parameters Type Name Description PlateauVector3f vec Single scalar Returns Type Description PlateauVector3f Multiply(PlateauVector3f, Single) Declaration public static PlateauVector3f operator *(PlateauVector3f vec, float scalar) Parameters Type Name Description PlateauVector3f vec Single scalar Returns Type Description PlateauVector3f Subtraction(PlateauVector3f, PlateauVector3f) Declaration public static PlateauVector3f operator -(PlateauVector3f op1, PlateauVector3f op2) Parameters Type Name Description PlateauVector3f op1 PlateauVector3f op2 Returns Type Description PlateauVector3f"
  },
  "api/PLATEAU.Network.Client.html": {
    "href": "api/PLATEAU.Network.Client.html",
    "title": "Class Client | PLATEAU SDK for Unity",
    "keywords": "Class Client Inheritance Object Client Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Network Assembly : cs.temp.dll.dll Syntax public class Client Properties Handle Declaration public IntPtr Handle { get; } Property Value Type Description IntPtr Url Declaration public string Url { get; set; } Property Value Type Description String Methods Create(String, String) Declaration public static Client Create(string serverUrl, string apiToken) Parameters Type Name Description String serverUrl String apiToken Returns Type Description Client CreateForMockServer() Declaration public static Client CreateForMockServer() Returns Type Description Client Dispose() Declaration public void Dispose() Download(String, String) Declaration public string Download(string destDirPath, string url) Parameters Type Name Description String destDirPath String url Returns Type Description String GetDatasetMetadataGroup() Declaration public NativeVectorDatasetMetadataGroup GetDatasetMetadataGroup() Returns Type Description NativeVectorDatasetMetadataGroup"
  },
  "api/PLATEAU.Network.html": {
    "href": "api/PLATEAU.Network.html",
    "title": "Namespace PLATEAU.Network | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.Network Classes Client NetworkConfig"
  },
  "api/PLATEAU.Network.NetworkConfig.html": {
    "href": "api/PLATEAU.Network.NetworkConfig.html",
    "title": "Class NetworkConfig | PLATEAU SDK for Unity",
    "keywords": "Class NetworkConfig Inheritance Object NetworkConfig Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Network Assembly : cs.temp.dll.dll Syntax public class NetworkConfig Properties MockServerUrl Declaration public static string MockServerUrl { get; } Property Value Type Description String"
  },
  "api/PLATEAU.PLATEAUCityObjectGroupEditor.html": {
    "href": "api/PLATEAU.PLATEAUCityObjectGroupEditor.html",
    "title": "Class PLATEAUCityObjectGroupEditor | PLATEAU SDK for Unity",
    "keywords": "Class PLATEAUCityObjectGroupEditor Inheritance Object PLATEAUCityObjectGroupEditor Namespace : PLATEAU Assembly : cs.temp.dll.dll Syntax public class PLATEAUCityObjectGroupEditor : UnityEditor.Editor Methods OnEnable() Declaration public void OnEnable() OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/PLATEAU.PolygonMesh.CityObjectIndex.html": {
    "href": "api/PLATEAU.PolygonMesh.CityObjectIndex.html",
    "title": "Struct CityObjectIndex | PLATEAU SDK for Unity",
    "keywords": "Struct CityObjectIndex Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.PolygonMesh Assembly : cs.temp.dll.dll Syntax public struct CityObjectIndex Fields AtomicIndex Declaration public int AtomicIndex Field Value Type Description Int32 PrimaryIndex Declaration public int PrimaryIndex Field Value Type Description Int32 Methods FromUV(PlateauVector2f) Declaration public static CityObjectIndex FromUV(PlateauVector2f uv) Parameters Type Name Description PlateauVector2f uv Returns Type Description CityObjectIndex"
  },
  "api/PLATEAU.PolygonMesh.CityObjectList.html": {
    "href": "api/PLATEAU.PolygonMesh.CityObjectList.html",
    "title": "Class CityObjectList | PLATEAU SDK for Unity",
    "keywords": "Class CityObjectList Inheritance Object CityObjectList Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.PolygonMesh Assembly : cs.temp.dll.dll Syntax public class CityObjectList Properties Handle Declaration public IntPtr Handle { get; } Property Value Type Description IntPtr Methods GetAllKeys() Declaration public CityObjectIndex[] GetAllKeys() Returns Type Description CityObjectIndex [] GetAtomicID(CityObjectIndex) Declaration public string GetAtomicID(CityObjectIndex index) Parameters Type Name Description CityObjectIndex index Returns Type Description String GetCityObjectIndex(String) gml:idに対応する CityObjectIndex を取得します。 存在しない場合は(-1, -1)を返します。 Declaration public CityObjectIndex GetCityObjectIndex(string gmlID) Parameters Type Name Description String gmlID Returns Type Description CityObjectIndex GetPrimaryID(Int32) Declaration public string GetPrimaryID(int index) Parameters Type Name Description Int32 index Returns Type Description String"
  },
  "api/PLATEAU.PolygonMesh.html": {
    "href": "api/PLATEAU.PolygonMesh.html",
    "title": "Namespace PLATEAU.PolygonMesh | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.PolygonMesh Classes CityObjectList Mesh メッシュ情報です。 Unity や Unreal Engine でメッシュを生成するために必要な情報が含まれるよう意図されています。 具体的には 頂点リスト、Indicesリスト、UV、サブメッシュ（含テクスチャ）があります。 詳しくは Model クラスのコメントをご覧ください。 MeshExtractor から Model を抽出します。 Model DLL側で実装された Model を、C# 側の Model としてデータを受け取るためのクラスです。 ( Node , Mesh , SubMesh も同様です。) Model は、GMLファイルパーサーから読み取った3Dメッシュ情報を各ゲームエンジンに渡すための中間データ構造として設計されています。 そのデータにはメッシュ、テクスチャパス、ゲームオブジェクトの階層構造が含まれており、 DLLの利用者である Unity や Unreal Engine がメッシュやゲームオブジェクトを生成するために必要な情報が入るよう意図されています。 Model はそのデータ構造の階層のトップに位置します。 Model クラスのデータを元に、実際にメッシュやゲームオブジェクトを生成するのは PLATEAU Unity SDK の責務となります。 中間データ構造の階層 : Model -> 所有(0個以上) -> Node(階層構造) -> 所有(0or1個) -> Mesh -> 所有(1個以上) -> SubMesh Model が所有する Node の階層関係は、ゲームエンジン側でのゲームオブジェクトの階層関係に対応します。 Node が所有する Mesh は、そのゲームオブジェクトが保持する3Dメッシュに対応します。 Mesh が所有する SubMesh は、そのメッシュのサブメッシュ（テクスチャパスを含む）に対応します。 DLLから得た Model を delete するのは C# 側の責務なので、 IDisposable を実装して不要時に delete しています。 delete 後は、配下のノードやメッシュにもアクセスできなくなります。 Node Model 以下の階層構造を構成するノードです。 Node は 0個以上の 子Node を持つため階層構造になります。 詳しくは Model クラスのコメントをご覧ください。 Name はゲームエンジン側ではゲームオブジェクトの名前として解釈されることが想定されます。 Mesh はそのゲームオブジェクトの持つメッシュとして解釈されることが想定されます。 SubMesh SubMesh は、 Mesh の一部 (Indices リストの中のとある範囲)がとあるテクスチャであることを表現します。 詳しくは Model クラスのコメントをご覧ください。 Structs CityObjectIndex MeshExtractOptions GMLファイルから3Dメッシュを取り出すための設定です。 Enums MeshGranularity メッシュの結合単位"
  },
  "api/PLATEAU.PolygonMesh.Mesh.html": {
    "href": "api/PLATEAU.PolygonMesh.Mesh.html",
    "title": "Class Mesh | PLATEAU SDK for Unity",
    "keywords": "Class Mesh メッシュ情報です。 Unity や Unreal Engine でメッシュを生成するために必要な情報が含まれるよう意図されています。 具体的には 頂点リスト、Indicesリスト、UV、サブメッシュ（含テクスチャ）があります。 詳しくは Model クラスのコメントをご覧ください。 Inheritance Object Mesh Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.PolygonMesh Assembly : cs.temp.dll.dll Syntax public class Mesh Properties CityObjectList Declaration public CityObjectList CityObjectList { get; } Property Value Type Description CityObjectList Handle Declaration public IntPtr Handle { get; } Property Value Type Description IntPtr IndicesCount Declaration public int IndicesCount { get; } Property Value Type Description Int32 SubMeshCount Declaration public int SubMeshCount { get; } Property Value Type Description Int32 VerticesCount Declaration public int VerticesCount { get; } Property Value Type Description Int32 Methods AddSubMesh(String, Int32, Int32) Declaration public void AddSubMesh(string texturePath, int subMeshStartIndex, int subMeshEndIndex) Parameters Type Name Description String texturePath Int32 subMeshStartIndex Int32 subMeshEndIndex Create(PlateauVector3d[], UInt32[], PlateauVector2f[], SubMesh[]) Declaration public static Mesh Create(PlateauVector3d[] vertices, uint[] indices, PlateauVector2f[] uv1, SubMesh[] subMeshes) Parameters Type Name Description PlateauVector3d [] vertices UInt32 [] indices PlateauVector2f [] uv1 SubMesh [] subMeshes Returns Type Description Mesh Create(String) Declaration public static Mesh Create(string meshID) Parameters Type Name Description String meshID Returns Type Description Mesh DebugString(StringBuilderWithIndent) Declaration public void DebugString(StringBuilderWithIndent sb) Parameters Type Name Description StringBuilderWithIndent sb Dispose() 取扱注意: 通常は Node が廃棄されるときに C++側で Mesh も廃棄されるので、このメソッドを呼ぶ必要はありません。 Node に属さず、C#側で明示的に Create した Mesh のみ Dispose() してください。 それ以外のタイミングで呼ぶとメモリ違反でUnityが落ちます。 Declaration public void Dispose() GetIndiceAt(Int32) Declaration public int GetIndiceAt(int index) Parameters Type Name Description Int32 index Returns Type Description Int32 GetSubMeshAt(Int32) Declaration public SubMesh GetSubMeshAt(int index) Parameters Type Name Description Int32 index Returns Type Description SubMesh GetUv1() Declaration public PlateauVector2f[] GetUv1() Returns Type Description PlateauVector2f [] GetUv4() Declaration public PlateauVector2f[] GetUv4() Returns Type Description PlateauVector2f [] GetVertexAt(Int32) Declaration public PlateauVector3d GetVertexAt(int index) Parameters Type Name Description Int32 index Returns Type Description PlateauVector3d MarkInvalid() Declaration public void MarkInvalid() MergeMesh(Mesh, Boolean) Declaration public void MergeMesh(Mesh otherMesh, bool includeTexture) Parameters Type Name Description Mesh otherMesh Boolean includeTexture"
  },
  "api/PLATEAU.PolygonMesh.MeshExtractOptions.html": {
    "href": "api/PLATEAU.PolygonMesh.MeshExtractOptions.html",
    "title": "Struct MeshExtractOptions | PLATEAU SDK for Unity",
    "keywords": "Struct MeshExtractOptions GMLファイルから3Dメッシュを取り出すための設定です。 Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.PolygonMesh Assembly : cs.temp.dll.dll Syntax public struct MeshExtractOptions Constructors MeshExtractOptions(PlateauVector3d, CoordinateSystem, MeshGranularity, UInt32, UInt32, Boolean, Int32, Single, Int32, Boolean, Boolean, Boolean, UInt32, Extent) Declaration public MeshExtractOptions(PlateauVector3d referencePoint, CoordinateSystem meshAxes, MeshGranularity meshGranularity, uint minLOD, uint maxLOD, bool exportAppearance, int gridCountOfSide, float unitScale, int coordinateZoneID, bool excludeCityObjectOutsideExtent, bool excludePolygonsOutsideExtent, bool enableTexturePacking, uint texturePackingResolution, Extent extent) Parameters Type Name Description PlateauVector3d referencePoint CoordinateSystem meshAxes MeshGranularity meshGranularity UInt32 minLOD UInt32 maxLOD Boolean exportAppearance Int32 gridCountOfSide Single unitScale Int32 coordinateZoneID Boolean excludeCityObjectOutsideExtent Boolean excludePolygonsOutsideExtent Boolean enableTexturePacking UInt32 texturePackingResolution Extent extent Fields CoordinateZoneID 国土交通省が規定する、日本の平面直角座標系の基準点の番号です。 詳しくは次の国土地理院のサイトをご覧ください。 https://www.gsi.go.jp/sokuchikijun/jpc.html Declaration public int CoordinateZoneID Field Value Type Description Int32 EnableTexturePacking テクスチャ結合（複数のテクスチャ画像を結合する機能）を有効にするかどうかを bool で指定します。 Declaration public bool EnableTexturePacking Field Value Type Description Boolean ExcludeCityObjectOutsideExtent 範囲外の3Dモデルを出力から除外するための、2つの方法のうち1つを有効にするかどうかを bool で指定します。 その方法とは、都市オブジェクトの最初の頂点の位置が範囲外のとき、そのオブジェクトはすべて範囲外とみなして出力から除外します。 これはビル1棟程度の大きさのオブジェクトでは有効ですが、 10km×10kmの地形のような巨大なオブジェクトでは、実際には範囲内なのに最初の頂点が遠いために除外されるということがおきます。 したがって、この値は建物では true, 地形では false となるべきです。 Declaration public bool ExcludeCityObjectOutsideExtent Field Value Type Description Boolean ExcludePolygonsOutsideExtent 範囲外の3Dモデルを出力から除外するための、2つの方法のうち1つを有効にするかどうかを bool で指定します。 その方法とは、メッシュ操作によって、範囲外に存在するポリゴンを除外します。 この方法であれば 10km×10km の地形など巨大なオブジェクトにも対応できます。 Declaration public bool ExcludePolygonsOutsideExtent Field Value Type Description Boolean ExportAppearance テクスチャを含めるかどうかです。 Declaration public bool ExportAppearance Field Value Type Description Boolean Extent 対象範囲を緯度・経度・高さで指定します。 Declaration public Extent Extent Field Value Type Description Extent MeshAxes 座標軸の向きです。 Declaration public CoordinateSystem MeshAxes Field Value Type Description CoordinateSystem MeshGranularity メッシュ結合の粒度です。 Declaration public MeshGranularity MeshGranularity Field Value Type Description MeshGranularity ReferencePoint 直交座標系における座標で、3Dモデルの原点をどこに設定するかです。 Declaration public PlateauVector3d ReferencePoint Field Value Type Description PlateauVector3d TexturePackingResolution テクスチャ結合時の結合先のテクスチャ画像の解像度（縦：texture_packing_resolution x 横:texture_packing_resolution） Declaration public uint TexturePackingResolution Field Value Type Description UInt32 Properties GridCountOfSide Declaration public int GridCountOfSide { get; set; } Property Value Type Description Int32 UnitScale Declaration public float UnitScale { get; set; } Property Value Type Description Single Methods SetLODRange(UInt32, UInt32) Declaration public void SetLODRange(uint minLODArg, uint maxLODArg) Parameters Type Name Description UInt32 minLODArg UInt32 maxLODArg"
  },
  "api/PLATEAU.PolygonMesh.MeshExtractor.html": {
    "href": "api/PLATEAU.PolygonMesh.MeshExtractor.html",
    "title": "Class MeshExtractor | PLATEAU SDK for Unity",
    "keywords": "Class MeshExtractor から Model を抽出します。 Inheritance Object MeshExtractor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.PolygonMesh Assembly : cs.temp.dll.dll Syntax public static class MeshExtractor Methods Extract(ref Model, CityModel, MeshExtractOptions) から Model を抽出します。 結果は outModel に格納されます。 通常、 outModel には new したばかりの Model を渡してください。 Declaration public static void Extract(ref Model outModel, CityModel cityModel, MeshExtractOptions options) Parameters Type Name Description Model outModel CityModel cityModel MeshExtractOptions options"
  },
  "api/PLATEAU.PolygonMesh.MeshGranularity.html": {
    "href": "api/PLATEAU.PolygonMesh.MeshGranularity.html",
    "title": "Enum MeshGranularity | PLATEAU SDK for Unity",
    "keywords": "Enum MeshGranularity メッシュの結合単位 Namespace : PLATEAU.PolygonMesh Assembly : cs.temp.dll.dll Syntax public enum MeshGranularity Fields Name Description PerAtomicFeatureObject 最小地物単位(LOD2, LOD3の各部品) PerCityModelArea 都市モデル地域単位(GMLファイル内のすべてを結合) PerPrimaryFeatureObject 主要地物単位(建築物、道路等)"
  },
  "api/PLATEAU.PolygonMesh.Model.html": {
    "href": "api/PLATEAU.PolygonMesh.Model.html",
    "title": "Class Model | PLATEAU SDK for Unity",
    "keywords": "Class Model DLL側で実装された Model を、C# 側の Model としてデータを受け取るためのクラスです。 ( Node , Mesh , SubMesh も同様です。) Model は、GMLファイルパーサーから読み取った3Dメッシュ情報を各ゲームエンジンに渡すための中間データ構造として設計されています。 そのデータにはメッシュ、テクスチャパス、ゲームオブジェクトの階層構造が含まれており、 DLLの利用者である Unity や Unreal Engine がメッシュやゲームオブジェクトを生成するために必要な情報が入るよう意図されています。 Model はそのデータ構造の階層のトップに位置します。 Model クラスのデータを元に、実際にメッシュやゲームオブジェクトを生成するのは PLATEAU Unity SDK の責務となります。 中間データ構造の階層 : Model -> 所有(0個以上) -> Node(階層構造) -> 所有(0or1個) -> Mesh -> 所有(1個以上) -> SubMesh Model が所有する Node の階層関係は、ゲームエンジン側でのゲームオブジェクトの階層関係に対応します。 Node が所有する Mesh は、そのゲームオブジェクトが保持する3Dメッシュに対応します。 Mesh が所有する SubMesh は、そのメッシュのサブメッシュ（テクスチャパスを含む）に対応します。 DLLから得た Model を delete するのは C# 側の責務なので、 IDisposable を実装して不要時に delete しています。 delete 後は、配下のノードやメッシュにもアクセスできなくなります。 Inheritance Object Model Namespace : PLATEAU.PolygonMesh Assembly : cs.temp.dll.dll Syntax public class Model : PInvokeDisposable Properties RootNodesCount Model の持つ ルート Node の数を返します。 Declaration public int RootNodesCount { get; } Property Value Type Description Int32 Methods AddNodeByCppMove(Node) ルートにノードを加えます。 取扱注意: C++の std::move によって Node が移動するので、 実行後は元の node は利用不可になります。 Declaration public void AddNodeByCppMove(Node node) Parameters Type Name Description Node node Create() Declaration public static Model Create() Returns Type Description Model DebugString() Model 以下の階層構造を文字列で表現します。 Declaration public string DebugString() Returns Type Description String DisposeNative() Declaration protected override void DisposeNative() Finalize() Declaration protected void Finalize() GetRootNodeAt(Int32) index 番目の Node を返します。 Declaration public Node GetRootNodeAt(int index) Parameters Type Name Description Int32 index Returns Type Description Node"
  },
  "api/PLATEAU.PolygonMesh.Node.html": {
    "href": "api/PLATEAU.PolygonMesh.Node.html",
    "title": "Class Node | PLATEAU SDK for Unity",
    "keywords": "Class Node Model 以下の階層構造を構成するノードです。 Node は 0個以上の 子Node を持つため階層構造になります。 詳しくは Model クラスのコメントをご覧ください。 Name はゲームエンジン側ではゲームオブジェクトの名前として解釈されることが想定されます。 Mesh はそのゲームオブジェクトの持つメッシュとして解釈されることが想定されます。 Inheritance Object Node Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.PolygonMesh Assembly : cs.temp.dll.dll Syntax public class Node Constructors Node(IntPtr) Declaration public Node(IntPtr handle) Parameters Type Name Description IntPtr handle Properties ChildCount 子ノードの数を返します。 Declaration public int ChildCount { get; } Property Value Type Description Int32 Handle Declaration public IntPtr Handle { get; } Property Value Type Description IntPtr Mesh ノードが保有する Mesh を返します。 なければ null を返します。 Declaration public Mesh Mesh { get; } Property Value Type Description Mesh Name ノードの名称を返します。 ゲームエンジン側ではゲームオブジェクトの名称となります。 Declaration public string Name { get; } Property Value Type Description String Methods AddChildNodeByCppMove(Node) 子ノードを追加します。 取扱注意: C++の move によって Node を移動するので、 実行後は元の Node は利用不可になります。 Declaration public void AddChildNodeByCppMove(Node node) Parameters Type Name Description Node node Create(String) Declaration public static Node Create(string id) Parameters Type Name Description String id Returns Type Description Node DebugString(StringBuilderWithIndent) Declaration public void DebugString(StringBuilderWithIndent sb) Parameters Type Name Description StringBuilderWithIndent sb Dispose() 取扱注意: 通常、 Model が廃棄されたときに Node も破棄されるので Dispose() を呼ぶ必要はありません。 Model に属さず、C#側から Create(String) したもののみ Dispose() してください。 Declaration public void Dispose() GetChildAt(Int32) index 番目の子ノードを返します。 Declaration public Node GetChildAt(int index) Parameters Type Name Description Int32 index Returns Type Description Node MarkInvalid() Declaration public void MarkInvalid() SetMeshByCppMove(Mesh) Mesh を Node にセットします。 取扱注意: C++の move によって Mesh を移動するので、 実行後は元の Mesh は利用不可になります。 Declaration public void SetMeshByCppMove(Mesh mesh) Parameters Type Name Description Mesh mesh"
  },
  "api/PLATEAU.PolygonMesh.SubMesh.html": {
    "href": "api/PLATEAU.PolygonMesh.SubMesh.html",
    "title": "Class SubMesh | PLATEAU SDK for Unity",
    "keywords": "Class SubMesh SubMesh は、 Mesh の一部 (Indices リストの中のとある範囲)がとあるテクスチャであることを表現します。 詳しくは Model クラスのコメントをご覧ください。 Inheritance Object SubMesh Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.PolygonMesh Assembly : cs.temp.dll.dll Syntax public class SubMesh Constructors SubMesh(IntPtr) Declaration public SubMesh(IntPtr handle) Parameters Type Name Description IntPtr handle Properties EndIndex Declaration public int EndIndex { get; } Property Value Type Description Int32 Handle Declaration public IntPtr Handle { get; } Property Value Type Description IntPtr Material Declaration public Material Material { get; } Property Value Type Description Material StartIndex Declaration public int StartIndex { get; } Property Value Type Description Int32 TexturePath Declaration public string TexturePath { get; } Property Value Type Description String Methods Create(Int32, Int32, String) Declaration public static SubMesh Create(int startIndex, int endIndex, string texturePath) Parameters Type Name Description Int32 startIndex Int32 endIndex String texturePath Returns Type Description SubMesh DebugPrint(StringBuilderWithIndent) Declaration public void DebugPrint(StringBuilderWithIndent sb) Parameters Type Name Description StringBuilderWithIndent sb Dispose() 取扱注意: 通常は Mesh が廃棄されるときに C++側で SubMesh も廃棄されるので、 このメソッドを呼ぶ必要はありません。 Mesh に属さず、C#側で明示的に Create した SubMesh のみ Dispose() してください。 それ以外のタイミングで呼ぶとメモリ違反でUnityが落ちます。 Declaration public void Dispose()"
  },
  "api/PLATEAU.Util.Async.html": {
    "href": "api/PLATEAU.Util.Async.html",
    "title": "Namespace PLATEAU.Util.Async | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.Util.Async Classes TaskExtension TextureLoader URLから画像をロードしてテクスチャとして返します。"
  },
  "api/PLATEAU.Util.Async.TaskExtension.html": {
    "href": "api/PLATEAU.Util.Async.TaskExtension.html",
    "title": "Class TaskExtension | PLATEAU SDK for Unity",
    "keywords": "Class TaskExtension Inheritance Object TaskExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Util.Async Assembly : cs.temp.dll.dll Syntax public static class TaskExtension Methods ContinueWithErrorCatch(Task) 投げっぱなしのタスクの例外をエラーログで確認できるようにする拡張メソッドです。 Declaration public static Task ContinueWithErrorCatch(this Task task) Parameters Type Name Description Task task Returns Type Description Task"
  },
  "api/PLATEAU.Util.Async.TextureLoader.html": {
    "href": "api/PLATEAU.Util.Async.TextureLoader.html",
    "title": "Class TextureLoader | PLATEAU SDK for Unity",
    "keywords": "Class TextureLoader URLから画像をロードしてテクスチャとして返します。 Inheritance Object TextureLoader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Util.Async Assembly : cs.temp.dll.dll Syntax public static class TextureLoader Methods LoadAsync(String, Int32) 非同期で url から画像をダウンロードしてテクスチャとして返します。 コルーチンを使うので、メインスレッドで行われる必要があります。 失敗した場合は null を返します。 Declaration public static async Task<Texture2D> LoadAsync(string url, int timeOutSec) Parameters Type Name Description String url Int32 timeOutSec Returns Type Description Task < Texture2D >"
  },
  "api/PLATEAU.Util.DebugUtil.html": {
    "href": "api/PLATEAU.Util.DebugUtil.html",
    "title": "Class DebugUtil | PLATEAU SDK for Unity",
    "keywords": "Class DebugUtil Inheritance Object DebugUtil Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Util Assembly : cs.temp.dll.dll Syntax public static class DebugUtil Methods EnumerableToString<T>(IEnumerable<T>) 複数オブジェクトの ToString をまとめて行い、結合した string を返します。 Declaration public static string EnumerableToString<T>(IEnumerable<T> enumerable) Parameters Type Name Description IEnumerable <T> enumerable Returns Type Description String Type Parameters Name Description T"
  },
  "api/PLATEAU.Util.DisplayedProgress.html": {
    "href": "api/PLATEAU.Util.DisplayedProgress.html",
    "title": "Class DisplayedProgress | PLATEAU SDK for Unity",
    "keywords": "Class DisplayedProgress Inheritance Object DisplayedProgress Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Util Assembly : cs.temp.dll.dll Syntax public class DisplayedProgress Constructors DisplayedProgress(String, Single, String) Declaration public DisplayedProgress(string name, float percentage, string message) Parameters Type Name Description String name Single percentage String message Fields Message Declaration public string Message Field Value Type Description String Name Declaration public readonly string Name Field Value Type Description String Percentage Declaration public float Percentage Field Value Type Description Single Properties PercentageStr Declaration public string PercentageStr { get; } Property Value Type Description String"
  },
  "api/PLATEAU.Util.EnumUtil.html": {
    "href": "api/PLATEAU.Util.EnumUtil.html",
    "title": "Class EnumUtil | PLATEAU SDK for Unity",
    "keywords": "Class EnumUtil Inheritance Object EnumUtil Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Util Assembly : cs.temp.dll.dll Syntax public static class EnumUtil Methods EachFlags<TEnum>(TEnum) フラグ式のEnumを受け取り、そのフラグが立っている各Enumタイプに分解します。 Declaration public static IEnumerable<TEnum> EachFlags<TEnum>(TEnum input) where TEnum : Enum Parameters Type Name Description TEnum input Returns Type Description IEnumerable <TEnum> Type Parameters Name Description TEnum"
  },
  "api/PLATEAU.Util.html": {
    "href": "api/PLATEAU.Util.html",
    "title": "Namespace PLATEAU.Util | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.Util Classes DebugUtil DisplayedProgress EnumUtil PathUtil PLATEAU のファイルパスに関するユーティリティです。 RenderUtil StringBuilderWithIndent インデント機能付きの StringBuilder です。 Interfaces IProgressDisplay"
  },
  "api/PLATEAU.Util.IProgressDisplay.html": {
    "href": "api/PLATEAU.Util.IProgressDisplay.html",
    "title": "Interface IProgressDisplay | PLATEAU SDK for Unity",
    "keywords": "Interface IProgressDisplay Namespace : PLATEAU.Util Assembly : cs.temp.dll.dll Syntax public interface IProgressDisplay Methods SetProgress(String, Single, String) 進捗情報をセットします。 progressName をキーとし、キーがすでにあれば進捗を更新、 なければ追加します。 別スレッドから呼ばれることがあります。 Declaration void SetProgress(string progressName, float percentage, string message) Parameters Type Name Description String progressName Single percentage String message"
  },
  "api/PLATEAU.Util.PathUtil.html": {
    "href": "api/PLATEAU.Util.PathUtil.html",
    "title": "Class PathUtil | PLATEAU SDK for Unity",
    "keywords": "Class PathUtil PLATEAU のファイルパスに関するユーティリティです。 Inheritance Object PathUtil Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Util Assembly : cs.temp.dll.dll Syntax public static class PathUtil Fields PLATEAUSrcFetchDir Declaration public static readonly string PLATEAUSrcFetchDir Field Value Type Description String UdxFolderName Declaration public const string UdxFolderName = \"udx\" Field Value Type Description String Methods FullPathToAssetsPath(String) フルパスをAssetsフォルダからのパスに変換します。 パスがAssetsフォルダ内を指すことが前提であり、そうでない場合は を投げます。 Declaration public static string FullPathToAssetsPath(string filePath) Parameters Type Name Description String filePath Returns Type Description String IsSubDirectory(String, String) Declaration public static bool IsSubDirectory(string subPath, string dir) Parameters Type Name Description String subPath String dir Returns Type Description Boolean IsValidInputFilePath(String, String, Boolean) 入力ファイル用のパスとして正しければtrue,不適切であればfalseを返します。 Declaration public static bool IsValidInputFilePath(string filePath, string expectedExtension, bool shouldFileInAssetsFolder) Parameters Type Name Description String filePath 入力ファイルのパスです。 String expectedExtension 入力ファイルとして想定される拡張子です。 Boolean shouldFileInAssetsFolder ファイルがUnityプロジェクトのAssetsフォルダ内にあるべきならtrue、他の場所でも良いならfalseを指定します。 Returns Type Description Boolean IsValidOutputFilePath(String, String) 出力用のファイルパスとして正しければtrue,不適切であればfalseを返します。 Declaration public static bool IsValidOutputFilePath(string filePath, string expectedExtension) Parameters Type Name Description String filePath String expectedExtension Returns Type Description Boolean"
  },
  "api/PLATEAU.Util.RenderUtil.html": {
    "href": "api/PLATEAU.Util.RenderUtil.html",
    "title": "Class RenderUtil | PLATEAU SDK for Unity",
    "keywords": "Class RenderUtil Inheritance Object RenderUtil Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Util Assembly : cs.temp.dll.dll Syntax public static class RenderUtil Properties DefaultMaterial Declaration public static Material DefaultMaterial { get; } Property Value Type Description Material PLATEAUX3DMaterial Material用シェーダー付きのOpaqueマテリアル Declaration public static Material PLATEAUX3DMaterial { get; } Property Value Type Description Material PLATEAUX3DMaterial_Transparent Material用シェーダー付きのTransparentマテリアル Declaration public static Material PLATEAUX3DMaterial_Transparent { get; } Property Value Type Description Material Methods GetPLATEAUX3DMaterialByCityGMLMaterial(Material) CityGML.MaterialとRenderPipelineによりShaderを判別しMaterialを返します Declaration public static Material GetPLATEAUX3DMaterialByCityGMLMaterial(Material rawMaterial) Parameters Type Name Description Material rawMaterial Returns Type Description Material"
  },
  "api/PLATEAU.Util.StringBuilderWithIndent.html": {
    "href": "api/PLATEAU.Util.StringBuilderWithIndent.html",
    "title": "Class StringBuilderWithIndent | PLATEAU SDK for Unity",
    "keywords": "Class StringBuilderWithIndent インデント機能付きの StringBuilder です。 Inheritance Object StringBuilderWithIndent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Util Assembly : cs.temp.dll.dll Syntax public class StringBuilderWithIndent Constructors StringBuilderWithIndent() Declaration public StringBuilderWithIndent() Methods AppendLine(String) Declaration public void AppendLine(string str) Parameters Type Name Description String str DecrementIndent() Declaration public void DecrementIndent() IncrementIndent() Declaration public void IncrementIndent() ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "index.html": {
    "href": "index.html",
    "title": "PLATEAU SDK for Unity | PLATEAU SDK for Unity",
    "keywords": "PLATEAU SDK for Unity このパッケージには、 PLATEAU の3D都市モデルデータを利用するためのAPI、サンプルが含まれます。PLATEAU SDK for Unityを利用することで、実世界を舞台にしたゲームの開発や、PLATEAUの豊富なデータを活用したシミュレーションを簡単に行うことができます。"
  },
  "manual/AccessCityObject.html": {
    "href": "manual/AccessCityObject.html",
    "title": "都市情報へのアクセス | PLATEAU SDK for Unity",
    "keywords": "都市情報へのアクセス C# APIやPLATEAU SDKの機能によって都市オブジェクトの情報を取得できます。 このページでその方法を説明します。 属性情報を確認する(PLATEAU SDKのエディタ機能) PLATEAU SDKウィンドウの「属性情報」タブを開いた状態で地物をクリックすると、 その地物IDと属性情報が表示されます。 シーンビュー上のピンク色の線は、選択中の主要地物の範囲を示します。 シーンビュー上の緑色の線は、選択中の最小地物の範囲を示します。 地物IDがシーンビュー中の文字で表示され、属性情報は属性情報ウィンドウのテキストボックスに表示されます。 主要地物と最小地物について 例えば、建物を主要地物単位でインポートした場合は、1つのゲームオブジェクトおよび1つのメッシュで1つの建物を表します。 その1つのメッシュを分解すると、「壁」「屋根」などのパーツになります。 この場合、建物全体が主要地物であり、壁、屋根などのパーツが最小地物に該当します。 ここで建物をクリックして属性情報を表示すると、主要地物（建物全体、1つのメッシュ）としての属性情報と、最小地物（壁や屋根など、メッシュの一部分）としての属性情報が両方表示されます。 建物を最小地物単位でインポートした場合、壁や屋根ごとにゲームオブジェクトおよびメッシュが分かれます。 この場合、最小地物ゲームオブジェクトの親ゲームオブジェクトから主要地物の情報を取得します。 建物を地域単位でインポートした場合、複数の主要地物が結合されます。 この場合、メッシュの一部分として主要地物および最小地物の情報を取得できます。 属性情報を確認する（ランタイム） ランタイムで、クリックした建物の情報を表示するサンプルを用意しています。 次の方法で確認できます。 下図のボタンをクリックして Attributes Sample をインポートします。 図は Package Manager の Import ボタンを押している様子です。 シーン AttributesSample を開きます。 Playボタンで再生します。 クリックした建物の情報が画面に表示されます。 ソースコード ClickToShowAttributes.cs の中に、この実装とコメントでの説明が記載されています。 都市モデルの情報を表示 PlateauSDKでインポートした都市オブジェクトには属性等の情報が含まれています。 情報にアクセスするには、都市オブジェクトであるGameObjectにアタッチされた PLATEAUCityObjectGroup コンポーネントを使用します。 PLATEAUCityObjectGroup コンポーネントには都市オブジェクトの持つ個別の情報がJson形式で表示されています。 このJsonの内容は、 PLATEAUCityObjectGroup.CityObjects から利用可能なデータ CityObjectList として取得できます。 CityObjectList.rootCityObjects リストには、 CityObject が格納されています。これは地域単位でのインポートの場合は複数になり、そうでないときは1つになります。 CityObject の属性を取得することで地物（建物など）の情報を取得できます。 CityObject.Children には、都市オブジェクトの階層の子に当たる CityObject が格納されます。 属性とは 都市オブジェクトの情報は「属性」として取得できます。 属性は例えば (String) 大字・町コード => 42, (String) 防火及び準防火地域 => 準防火地域 のように、キーと値のペアからなる辞書形式の情報です。 属性辞書 Attributes は CityObject.AttributesMap メソッドで取得できます。 Attributes.DebugString() をコールすると、属性情報をすべて文字列にして返します。 Attributes.TryGetValue(\"key\", out value) によってキーに対応する Attributes.Value を取得できます。 Attributes.Value の具体的な値は文字列型として取得できるか、または 子の属性（属性は入れ子になることもあります）として取得できるかのいずれかです。 属性が入れ子になっている例は次のとおりです。 (AttributeSet) 多摩水系多摩川、浅川、大栗川洪水浸水想定区域（想定最大規模） => [ { (String) 浸水ランク => 2 } { (Measure) 浸水深 => 0.990 } { (Measure) 継続時間 => 0.68 } { (String) 規模 => L2 } ]} 上の例において、(括弧)内の文字は属性の型を示します。 属性値は次の型があります。: AttributeSet, String, Double, Integer, Data, Uri, Measure AttributeSet以外の型はすべて内部的には文字列型であり、 Attributes.Value.StringValue で値を取得できます。 入れ子AttributeSetの値は StringValue ではなく Attributes.Value.AttributesMapValue で取得できます。 属性値の型は Attributes.Value.Type で取得でき、この値が AttributeSet である場合は Attributes.Value.AttributesMapValue で子の Attributes を取得できます。 Attributes.Value.Type がそれ以外 (String, Doubleなど) である場合は Attributes.Value.StringValue で文字列を取得できます。"
  },
  "manual/ExportCityModels.html": {
    "href": "manual/ExportCityModels.html",
    "title": "都市モデルのエクスポート | PLATEAU SDK for Unity",
    "keywords": "都市モデルのエクスポート Unityのシーンに配置された都市の3Dモデルを、objファイルや gltfファイルとしてエクスポートできます。 このページではエクスポートの手順を説明します。 前提 Unityのシーンに都市モデルがインポートされていることが前提です。 インポートの方法については 都市モデルのインポート をご覧ください。 エクスポート手順 エクスポート対象の指定 Unityのメニューバーから PLATEAU → PLATEAU SDK を選択します。 表示されるウィンドウの上部に3つのタブ「インポート、モデル調整、エクスポート」があります。 このうちエクスポートを選択します。 選択オブジェクト からエクスポート対象を選択します。 対象として選択できるのはインポート時に生成されたゲームオブジェクトのうち、 親子関係における最上位のものです。 親子関係の最上位には自動で PLATEAUInstancedCityModel コンポーネントが付与されています。 このコンポーネントを持つゲームオブジェクトが選択対象となります。 出力形式を選択します。 OBJ形式か、GLTF形式かを選択します。 ただし、OBJ形式はフォーマットの仕様上、後述の技術的な制約があります。 出力オプションの設定 オプションの設定項目について説明します。 GLTFフォーマット 出力形式がGLTFのときのみ表示される設定項目です。 フォーマットを次から選択します。 GLTF 3Dモデル、テクスチャ、binファイルを別々のファイルとするフォーマットです。 GLB 3Dモデルとその関連データをまとめて1つのファイルとするフォーマットです。 テクスチャ 出力にテクスチャを含めるかどうかを設定します。チェックが付いていれば含みます。 非アクティブオブジェクトを含める ヒエラルキー上で非アクティブになっているゲームオブジェクトを含めるかどうかを設定します。 チェックが外れているとき、非アクティブなものを出力から除外します。 ここでいう 非アクティブ とは、下図のチェックマークが自身または親において外れており、 ヒエラルキービュー上で文字色が薄くなっている状態を指します。 座標変換 座標の基準点を設定します。 Local (ローカル) のとき: ポリゴンの座標は PLATEAUInstancedCityModel の位置を原点とした座標で表されます。 Plane Cartesian (直交座標系) のとき: ポリゴンの座標は、国土交通省が定める直交座標系のうち、インポート時に選択した直交座標系を原点とするよう平行移動されます。 上図は 国土地理院のWebサイト「わかりやすい平面直角座標系」 より引用 (原点マークは別途追記) 2つの使い分けについて 原点付近に3Dモデルが来るようにしたいときは Local 原点から遠い位置に3Dモデルが配置されますが、複数の異なる都市をエクスポートするときに位置の整合性を取りたいときは Plane Cartesian が利用できます。 座標軸 エクスポートした objファイルを Unityにインポートしたい場合は、 後述の理由で WUN を指定してください。 座標軸設定の趣旨: x,y,z 軸がどの方向を向いているかはアプリケーションによって異なりますが、 この設定項目によって座標軸の違いに合わせて変換できます。 座標軸の名称はアルファベット3文字で表され、 (1文字目,2文字目,3文字目) が (x軸,y軸,z軸) の向きを表します。 例えば、Unityでは x軸が東(East), y軸が上(Up), z軸が北(North) を向くので、 頭文字をとって EUN が Unityの座標系となります。 ただし、Unity向けに objをエクスポートするときは、 後述の理由で EUN ではなく WUN が正しい指定となります。 W は 西(West) を表します。 Note OBJファイルの技術的制約について OBJファイルはそのフォーマットの仕様上、制約があります。 オブジェクトが分割されず、1つのオブジェクトとして出力されます。 その代わり、頂点グループとしてオブジェクト内で領域分けされます。 例えば、Blenderの場合、インポート時に 頂点グループ にチェックを入れると、図のように頂点グループが設定されます。 objファイルを Unity にインポートするとき、左右が反転します。これを防ぎたい場合は、座標系WUNで出力してください。 これは Unity の仕様によるものです。 Unityの座標系は EUN ですが、EUNで出力した objファイルをインポートすると左右反転したモデルになります。 そこで EUN を左右反転させた座標系である WUN で出力すると、Unityにインポートしたときに正しくなります。 このようになる理由は、Unityは objファイルを右手座標系であると解釈し、Unityの左手座標系に合わせるために x座標の正負を反転させるためです。 エクスポート 出力先のフォルダを指定します。 エクスポート ボタンを押してしばらく待ちます。 指定のフォルダに3Dモデルファイルが出力されます。 上図はエクスポートしたobjファイルを Blender で読み込んだものです。"
  },
  "manual/ImportCityModels.html": {
    "href": "manual/ImportCityModels.html",
    "title": "都市モデルのインポート | PLATEAU SDK for Unity",
    "keywords": "都市モデルのインポート このページでは、都市データをUnityプロジェクトにインポートする手順を説明します。 準備 PlateauSDK を導入したUnityプロジェクトを用意します。 SDKの導入方法は インストール を参照してください。 インポート手順 インポート元の選択 Unityのメニューバーから PLATEAU → PLATEAU SDK を選択します。 表示されるウィンドウの上部に3つのタブ「インポート、モデル調整、エクスポート」があります。 このうちインポートを選択します。 インポート先で ローカル または サーバー を選択します。 Note 今のところ、「サーバー」ではなく「ローカル」を推奨します。 すみませんが、現状ではサーバーで利用できるデータは少ないためです。 2023年度中にSDK向けのサーバーデータの範囲を拡充予定です。 ローカルからインポートする場合 導入したい都市データが自分のコンピュータにある場合はローカルを選択します。 3D都市モデルは G空間情報センターのPLATEAUポータルサイト からダウンロードできます。 CityGML形式のものをダウンロードしてください。 参照 ボタンを押します。都市データのフォルダの選択画面が表示されます。 都市データのフォルダの中には、 udx , codelists という名前のフォルダがあるはずです。 udx から 階層が1つ上 のフォルダを選択します。 サーバーからインポートする場合 サーバー では、PLATEAUのデータサーバーから直接 都市データをインポートできます。 接続先設定 を開くことができますが、設定しなくとも自動でデフォルトのURLに接続されます。 別のURLに接続したい場合のみ、URLを入力して「再接続」ボタンを押してください。 認証トークン は Bearer認証のトークンです。 データセットの選択 で 都道府県 を選択します。 するとその都道府県に対応する データセット が選択肢に出てくるので選びます。 基準座標系の選択 リストのうち、都市が属する場所として近いものを選択します。 適切なものを選ぶと座標の誤差が小さくなります。 ここで選択する座標系は国土交通省が定める平面直角座標系に準拠しています。 詳しくは 国土地理院のWebサイト「わかりやすい平面直角座標系」 をご覧ください。 インポート範囲の選択 範囲選択 ボタンを押します。 現在のUnityシーンに変更がある場合、変更を保存するかどうかを尋ねるダイアログが表示されます。 Save または Don't Save をクリックします。 シーンビューの表示が切り替わり、範囲選択画面になります。 範囲選択画面の操作方法： マウスホイールを上下に回してズームアウト、ズームインします。 マウスホイールを押し込んだままドラッグしてカメラ移動します。 オレンジ色の球体をドラッグして範囲を選択します。 シーンビュー左上の 決定 ボタンを押して範囲を確定します。すると元のシーンに戻ります。 画面のみかた： 青色の線は利用可能な地域を示します。 地域ごとに利用可能なGML種別と対応LODがアイコン形式で表示されます。 地図は国土地理院のサイトから自動でダウンロードされて表示されます。インターネットへの接続が必要です。 区域に表示される番号は、後述の indexmap.pdf に記載の番号と同じです。 Note 範囲選択画面では、通常はガイド線が格子状に並び、地図は隙間無く表示されます。 しかし、座標系の選択を誤ると、下図のようにガイド線の配置が歪み、地図に隙間ができます。 これは誤った座標系を選択したことによる座標計算の誤差が可視化されたものです。 球体の地球を平面の地図で表現する都合上、基準座標点から離れるほど座標計算の誤差は大きくなります。 範囲選択が完了すると、 範囲選択 ボタンの下に 範囲選択:セット済 という表示がなされ、 その下に 地物別設定 が表示されるようになります。 補足 : 地域の区分を確認したい時は、ローカルにダウンロードしたフォルダに付属している indexmap という名前のpdfファイルをご覧ください。 下図のように地図上に区分が記載されています。 地物別設定 地物の種類ごとにインポートに関する設定を行います。 設定項目について: インポートする チェックが付いている地物タイプのみインポートします。 Mesh Collider をセットする チェックが付いている場合、各モデルに Mesh Collider が追加されます。 テクスチャを含める テクスチャが存在する地物タイプで表示される設定項目です。 チェックが付いていて、かつテクスチャがある場合はそれを含めてインポートします。 都市データによってはテクスチャがない場合があり、 その場合はチェックを外した時と同様に真っ白な3Dモデルが出力されます。 LOD描画設定 複数のLODを利用可能な地物タイプで表示される設定項目です。 バーの左端と右端をドラッグして、インポートするLODの範囲を指定できます。 Note LODとは gmlファイルの中には、都市モデルの形状の細かさを指定したいという需要に対応するため、 複数の形状データが格納されている場合があります。 LOD0がもっとも大雑把な形状で、LOD1, LOD2 と数字が上がるほど細かい形状になります。 建築物の場合、LOD0 は平面、LOD1は平面に一定の高さを付けたもの、LOD2はより細かい形状です。 なお、ここでいう LOD とは PLATEAU の仕様上の LOD を指します。 Unity の機能としての LOD とは異なる概念です。 モデル結合 主要地物単位（建築物,道路等） モデルのメッシュは建物ごとに結合されて出力されます。 建物ごとに地物データを取得できるようにしたい場合はこちらを選択します。 最小地物単位（壁面,屋根面等） 屋根、壁単位など非常に細かくオブジェクトを分けたい場合はこちらを選択します。 地域単位 モデルのメッシュは結合されて出力されます。 オブジェクト数を削減して軽量化できますが、建物ごとの地物データは取得不可になります。 メッシュの結合はある程度の大きさの範囲ごとに行われます。 Note 地物の選択について 地物の中にはインポートに時間がかかるものもあるのでご注意ください。 例えば 土地起伏 はデータの範囲が 10km × 10km と非常に広く、 データ容量が重く処理に時間がかかるのでご注意ください。 Note 現実の景観と異なる地物について 地物の種類で「土地利用」と「災害リスク」については、 情報の範囲を示す目印として白い板の3Dモデルが表示されます。 この白い板はリアルな景観のみを求める際には不要になるので、 土地利用と災害リスクに関するデータが不要な場合は インポートしないか、インポート後オフにすることを推奨します。 上図は白い板として現れる災害リスク範囲の目印です。 Note 道路の高さについて LOD1 の道路は、PLATEAUの仕様上、高さのデータを含みません。 したがって、インポートするとすべて高さ 0 で表現されます。 LOD2 以上の道路は高さが反映されます。 基準座標系からのオフセット値の設定 3Dモデルの原点をどこに置くかを指定します。 デフォルト値として、範囲選択画面で選択した範囲の中心が自動入力されるので、 このままの値でインポート可能です。 3Dモデルの原点位置を調整したい場合のみ値を編集してください。 値の意味: 上のインポート設定で選択した「基準座標系」の原点から、 東西・南北・高さ方向にそれぞれ何メートルの地点を3Dモデルの原点とするかを表します。 基準座標系の原点は次の国土地理院のWebサイトで示されます: 国土地理院のサイト インポートの実行 モデルをインポート ボタンを押します。 ウィンドウを下にスクロールすると、インポート処理の進捗が表示されます。 処理が進むと、都市のオブジェクトが順次シーンに配置されていきます。 進捗表示がすべて「完了」になったらインポート終了です。 インポートのキャンセル インポート処理中に インポートをキャンセルする ボタンを押します。 キャンセル処理中は、ボタンが キャンセル中… の表記に変わります。 再度 モデルをインポート ボタンが表示されたらキャンセル完了です。 Note インポート元となる都市データは Assets/StreamingAssets/.PLATEAU にコピーされます。 .PLATEAU は隠しフォルダである点にご注意ください。Unityのインポート処理を削減する目的でこうなっています。 なお、インポート対象として選択したものに関連するもののみがコピーされます。 Note インポートされた都市モデルは、プレハブ化するとメッシュとテクスチャが missing になってしまいます。 データはシーンに埋め込まれているためです。 プレハブ化またはモデルとテクスチャを別ファイルに分けたい場合は、エクスポート機能を利用して別ファイルに書き出してください。 配置されたゲームオブジェクト階層のトップには、コンポーネント PLATEAUInstancedCityModel がアタッチされます。 このインスペクタから緯度、経度などの情報を確認できます。 エラーログの確認 インポートの結果、計算状況ウィンドウの内容がすべて「完了」となれば良いですが、 ロードできなかったgmlファイルに関しては「失敗」と表示されます。 そのような場合でも、一部のgmlファイルのロードが成功していれば、そのgmlに関しては正常にインポートされています。 失敗の場合は Unityのコンソールにエラーログが出力されます。"
  },
  "manual/Installation.html": {
    "href": "manual/Installation.html",
    "title": "インストール | PLATEAU SDK for Unity",
    "keywords": "インストール このページでは PLATEAU SDK for Unity のインストール方法を説明します。 対応Unityバージョンのインストール PLATEAU SDK for Unity は、Unityバージョン 2021.3 を想定しています。 そのバージョンがインストールされていない場合は、次の手順でインストールしてください。 Unity Hub をこちらからインストールします 。 Unity Hub とは、Unityのお好きなバージョンをインストールして起動することのできるソフトウェアです。 Unity Hubを起動し、左のサイドバーから インストール → 右上のボタンから エディターをインストール をクリックします。 Unity 2021.3 で始まるバージョンを選択し、 インストール を押します。 Unityプロジェクトの作成 Unity Hub の左サイドバーの プロジェクト を押し、右上の 新しいプロジェクト ボタンをクリックします。 新しいプロジェクトの設定画面で、次のように設定します。 画面上部の エディターバージョン を 2021.3 で始まる番号にします。 画面中部の テンプレート は 3D を選択します。 画面右下のプロジェクト名をお好みのものに設定します。 プロジェクトを作成 ボタンを押します。 PLATEAU Unity SDK の導入 PLATEAU SDK for Unity の導入方法は2通りあります。 1つは、配布の tgz ファイルから導入する方法 2つ目に、gitのURL指定で導入する方法です。 どちらか1つを行ってください。 tgzファイルから導入する方法 PLATEAU SDK for Unity のリリースページ から tgzファイルをダウンロードします。 Unityのメニューバーから Window → Package Manager を選択します。 Package Manager ウィンドウの左上の＋ボタンから Add pacakge from tarball... を選択します。 ウィンドウのパッケージ一覧に Plateau Unity SDK が表示されたら完了です。 gitのURL指定で導入する方法 導入したいバージョンを確認するため、 PLATEAU SDK for Unity のリリースページ にアクセスします。 リリースのリンクをクリックし、導入したいバージョンのタグ（画像の箇所）をメモします。 Unityのメニューバーから Window → Package Manager を選択します。 Package Manager ウィンドウの左上の＋ボタンから Add pacakge from git URL... を選択します。 入力欄に次を入力します。 GithubリポジトリのURLに、 #(先ほどメモしたタグ名) を付けたものを入力してください。例えば次のとおりです： https://github.com/Project-PLATEAU/PLATEAU-SDK-for-Unity.git#v1.0.0 なお、 #(タグ名) を省略するとデフォルトブランチになりますが、 デフォルトブランチは内容が予告なく変更されるので推奨しません。 タグ名を記載することを推奨します。 Add ボタンを押します。 ウィンドウのパッケージ一覧に Plateau Unity SDK が表示されたら完了です。"
  },
  "manual/ModelAdjust.html": {
    "href": "manual/ModelAdjust.html",
    "title": "モデル調整 | PLATEAU SDK for Unity",
    "keywords": "モデル調整 インポートした都市オブジェクトに対して、条件指定で一括でアクティブ化・非アクティブ化する機能について説明します。 モデル調整タブ Unityのメニューバーから PLATEAU → PLATEAU SDK を選択します。 ウィンドウ上部のタブのうち モデル調整 を選択します。 この画面で条件指定をしてフィルタリングできます。 ここでいうフィルタリングとは、条件に合致するゲームオブジェクトをアクティブにし、そうでないものを非アクティブにすることを指します。 「重複する地物を表示」にチェックを入れた場合、フィルタリング後に重複している地物について、 もっともLODが高いもののみを残してそれ以外を非表示にします。 表示したい地物の種類をチェックボックスで指定します。 チェックボックスは入れ子構造になっています。 第1階層のチェックボックスは、「建築物」「道路」などのパッケージ種別を指定します。 複数のLODがシーン中に存在する場合、パッケージ種別ごとにLOD範囲選択のスライダーを使ってLODを指定できます。 第2階層のチェックボックスは、「ドア」「屋根」など細かい都市オブジェクト分類での種別を指定します。 Note 都市インポート時のメッシュ結合単位の設定によっては、第2階層の分類チェックマークが動作しない場合があります。 例えば、インポート時に建物を「最小地物単位」に指定した場合、「窓」「屋根面」などでゲームオブジェクトが分かれているので、細かい分類のチェックマークが動作します。 しかし、建物を「主要地物単位」にした場合、建物ごとにゲームオブジェクトが結合されているので、細かい「窓」「屋根面」といった分類は動作しません。 分類指定のチェックマークは入れ子構造になっていますが、第1階層の「建築物」「道路」といった分類は結合単位によらず必ず動作し、 第2階層の「窓」「屋根面」といった細かい分類はインポート時に「最小値物単位」にした場合のみ動作します。"
  }
}