{
  "api/PLATEAU.Basemap.html": {
    "href": "api/PLATEAU.Basemap.html",
    "title": "Namespace PLATEAU.Basemap | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.Basemap Classes TileProjection 緯度経度と、地理院地図タイル番号を変換します。 VectorTileDownloader 地理院地図の地図タイルをダウンロードします。 Structs TileCoordinate 地理院地図のタイル座標です。 タイル座標については国土地理院のWebサイトを参照してください。 https://maps.gsi.go.jp/development/siyou.html#siyou-zm データ構造は C++側と合わせる必要があります。"
  },
  "api/PLATEAU.Basemap.TileCoordinate.html": {
    "href": "api/PLATEAU.Basemap.TileCoordinate.html",
    "title": "Struct TileCoordinate | PLATEAU SDK for Unity",
    "keywords": "Struct TileCoordinate 地理院地図のタイル座標です。 タイル座標については国土地理院のWebサイトを参照してください。 https://maps.gsi.go.jp/development/siyou.html#siyou-zm データ構造は C++側と合わせる必要があります。 Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.Basemap Assembly : cs.temp.dll.dll Syntax public readonly struct TileCoordinate Constructors TileCoordinate(Int32, Int32, Int32) Declaration public TileCoordinate(int column, int row, int zoomLevel) Parameters Type Name Description Int32 column Int32 row Int32 zoomLevel Fields Column Declaration public readonly int Column Field Value Type Description Int32 Row Declaration public readonly int Row Field Value Type Description Int32 ZoomLevel Declaration public readonly int ZoomLevel Field Value Type Description Int32 Methods ToString() Declaration public override readonly string ToString() Returns Type Description String Overrides ValueType.ToString()"
  },
  "api/PLATEAU.Basemap.TileProjection.html": {
    "href": "api/PLATEAU.Basemap.TileProjection.html",
    "title": "Class TileProjection | PLATEAU SDK for Unity",
    "keywords": "Class TileProjection 緯度経度と、地理院地図タイル番号を変換します。 Inheritance Object TileProjection Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Basemap Assembly : cs.temp.dll.dll Syntax public static class TileProjection Methods Project(GeoCoordinate, Int32) 緯度経度から地理院地図タイル番号に変換します。 Declaration public static TileCoordinate Project(GeoCoordinate geoCoord, int zoomLevel = 15) Parameters Type Name Description GeoCoordinate geoCoord Int32 zoomLevel Returns Type Description TileCoordinate Unproject(TileCoordinate) 地理院地図タイル番号から緯度経度範囲に変換します。 Declaration public static Extent Unproject(TileCoordinate tileCoord) Parameters Type Name Description TileCoordinate tileCoord Returns Type Description Extent"
  },
  "api/PLATEAU.Basemap.VectorTileDownloader.html": {
    "href": "api/PLATEAU.Basemap.VectorTileDownloader.html",
    "title": "Class VectorTileDownloader | PLATEAU SDK for Unity",
    "keywords": "Class VectorTileDownloader 地理院地図の地図タイルをダウンロードします。 Inheritance Object VectorTileDownloader Namespace : PLATEAU.Basemap Assembly : cs.temp.dll.dll Syntax public class VectorTileDownloader : PInvokeDisposable Properties TileCount Declaration public int TileCount { get; } Property Value Type Description Int32 Methods CalcDestPath(Int32) Declaration public string CalcDestPath(int index) Parameters Type Name Description Int32 index Returns Type Description String Create(String, Extent, Int32) Declaration public static VectorTileDownloader Create(string destinationPath, Extent extent, int zoomLevel) Parameters Type Name Description String destinationPath Extent extent Int32 zoomLevel Returns Type Description VectorTileDownloader DisposeNative() Declaration protected override void DisposeNative() Download(Int32) 地理院地図タイルをダウンロードして pngファイルに保存します。 Declaration public void Download(int index) Parameters Type Name Description Int32 index GetTileCoordinate(Int32) Declaration public TileCoordinate GetTileCoordinate(int index) Parameters Type Name Description Int32 index Returns Type Description TileCoordinate"
  },
  "api/PLATEAU.CityAdjust.ChangeActive.CityDuplicateProcessor.html": {
    "href": "api/PLATEAU.CityAdjust.ChangeActive.CityDuplicateProcessor.html",
    "title": "Class CityDuplicateProcessor | PLATEAU SDK for Unity",
    "keywords": "Class CityDuplicateProcessor 重複した地物があるか検索し、重複して表示されないようにします。 Inheritance Object CityDuplicateProcessor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityAdjust.ChangeActive Assembly : cs.temp.dll.dll Syntax public static class CityDuplicateProcessor Methods EnableOnlyLargestLODInDuplicate(PLATEAUInstancedCityModel) 重複した地物があるか検索します。 重複のうちLODが最大のものを有効化し、そうでないものを無効化します。 ただしすでに無効化されているものは無視します。 Declaration public static void EnableOnlyLargestLODInDuplicate(PLATEAUInstancedCityModel city) Parameters Type Name Description PLATEAUInstancedCityModel city"
  },
  "api/PLATEAU.CityAdjust.ChangeActive.html": {
    "href": "api/PLATEAU.CityAdjust.ChangeActive.html",
    "title": "Namespace PLATEAU.CityAdjust.ChangeActive | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.CityAdjust.ChangeActive Classes CityDuplicateProcessor 重複した地物があるか検索し、重複して表示されないようにします。"
  },
  "api/PLATEAU.CityExport.Exporters.CityExporterFbx.html": {
    "href": "api/PLATEAU.CityExport.Exporters.CityExporterFbx.html",
    "title": "Class CityExporterFbx | PLATEAU SDK for Unity",
    "keywords": "Class CityExporterFbx Inheritance Object CityExporterFbx Implements ICityExporter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityExport.Exporters Assembly : cs.temp.dll.dll Syntax public class CityExporterFbx : ICityExporter Properties FbxFileFormat Declaration public FbxFileFormat FbxFileFormat { get; set; } Property Value Type Description FbxFileFormat Methods Export(String, String, Model) Declaration public void Export(string destDir, string fileNameWithoutExtension, Model model) Parameters Type Name Description String destDir String fileNameWithoutExtension Model model Implements ICityExporter"
  },
  "api/PLATEAU.CityExport.Exporters.CityExporterGltf.html": {
    "href": "api/PLATEAU.CityExport.Exporters.CityExporterGltf.html",
    "title": "Class CityExporterGltf | PLATEAU SDK for Unity",
    "keywords": "Class CityExporterGltf をGLTF形式のファイルにします。 Inheritance Object CityExporterGltf Implements ICityExporter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityExport.Exporters Assembly : cs.temp.dll.dll Syntax public class CityExporterGltf : ICityExporter Properties GltfFileFormat Declaration public GltfFileFormat GltfFileFormat { get; set; } Property Value Type Description GltfFileFormat Methods Export(String, String, Model) Declaration public void Export(string destDir, string fileNameWithoutExtension, Model model) Parameters Type Name Description String destDir String fileNameWithoutExtension Model model Implements ICityExporter"
  },
  "api/PLATEAU.CityExport.Exporters.CityExporterObj.html": {
    "href": "api/PLATEAU.CityExport.Exporters.CityExporterObj.html",
    "title": "Class CityExporterObj | PLATEAU SDK for Unity",
    "keywords": "Class CityExporterObj をOBJ形式のファイルにします。 Inheritance Object CityExporterObj Implements ICityExporter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityExport.Exporters Assembly : cs.temp.dll.dll Syntax public class CityExporterObj : ICityExporter Methods Export(String, String, Model) Declaration public void Export(string destDir, string fileNameWithoutExtension, Model model) Parameters Type Name Description String destDir String fileNameWithoutExtension Model model Implements ICityExporter"
  },
  "api/PLATEAU.CityExport.Exporters.html": {
    "href": "api/PLATEAU.CityExport.Exporters.html",
    "title": "Namespace PLATEAU.CityExport.Exporters | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.CityExport.Exporters Classes CityExporterFbx CityExporterGltf をGLTF形式のファイルにします。 CityExporterObj をOBJ形式のファイルにします。 Interfaces ICityExporter (中間形式) をファイルにエクスポートするインターフェイスです。 対応ファイルフォーマットである FBX, GLTF, OBJ ごとにクラスを作ってこのインターフェイスを実装することで、 ファイルフォーマットごとのエクスポート方法の差異を吸収します。"
  },
  "api/PLATEAU.CityExport.Exporters.ICityExporter.html": {
    "href": "api/PLATEAU.CityExport.Exporters.ICityExporter.html",
    "title": "Interface ICityExporter | PLATEAU SDK for Unity",
    "keywords": "Interface ICityExporter (中間形式) をファイルにエクスポートするインターフェイスです。 対応ファイルフォーマットである FBX, GLTF, OBJ ごとにクラスを作ってこのインターフェイスを実装することで、 ファイルフォーマットごとのエクスポート方法の差異を吸収します。 Namespace : PLATEAU.CityExport.Exporters Assembly : cs.temp.dll.dll Syntax public interface ICityExporter Methods Export(String, String, Model) Model(中間形式)をファイルにエクスポートします。 Declaration void Export(string destDir, string fileNameWithoutExtension, Model model) Parameters Type Name Description String destDir 出力先のディレクトリのパスです。 String fileNameWithoutExtension 出力ファイル名から拡張子を除いたものです。 Model model モデル(中間形式)です。"
  },
  "api/PLATEAU.CityExport.html": {
    "href": "api/PLATEAU.CityExport.html",
    "title": "Namespace PLATEAU.CityExport | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.CityExport Classes MeshFileFormatExtension UnityModelExporter Unityのモデルを Model (中間形式) にしてから 3Dモデルファイルに出力します。 Structs MeshExportOptions Enums MeshExportOptions.MeshTransformType MeshFileFormat"
  },
  "api/PLATEAU.CityExport.MeshExportOptions.html": {
    "href": "api/PLATEAU.CityExport.MeshExportOptions.html",
    "title": "Struct MeshExportOptions | PLATEAU SDK for Unity",
    "keywords": "Struct MeshExportOptions Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.CityExport Assembly : cs.temp.dll.dll Syntax public struct MeshExportOptions Constructors MeshExportOptions(MeshExportOptions.MeshTransformType, Boolean, Boolean, MeshFileFormat, CoordinateSystem, ICityExporter) Declaration public MeshExportOptions(MeshExportOptions.MeshTransformType transformType, bool exportTextures, bool exportHiddenObjects, MeshFileFormat fileFormat, CoordinateSystem meshAxis, ICityExporter exporter) Parameters Type Name Description MeshExportOptions.MeshTransformType transformType Boolean exportTextures Boolean exportHiddenObjects MeshFileFormat fileFormat CoordinateSystem meshAxis ICityExporter exporter Properties Exporter Declaration public readonly ICityExporter Exporter { get; } Property Value Type Description ICityExporter ExportHiddenObjects Declaration public readonly bool ExportHiddenObjects { get; } Property Value Type Description Boolean ExportTextures Declaration public readonly bool ExportTextures { get; } Property Value Type Description Boolean FileFormat Declaration public readonly MeshFileFormat FileFormat { get; } Property Value Type Description MeshFileFormat MeshAxis Declaration public readonly CoordinateSystem MeshAxis { get; } Property Value Type Description CoordinateSystem TransformType Declaration public readonly MeshExportOptions.MeshTransformType TransformType { get; } Property Value Type Description MeshExportOptions.MeshTransformType"
  },
  "api/PLATEAU.CityExport.MeshExportOptions.MeshTransformType.html": {
    "href": "api/PLATEAU.CityExport.MeshExportOptions.MeshTransformType.html",
    "title": "Enum MeshExportOptions.MeshTransformType | PLATEAU SDK for Unity",
    "keywords": "Enum MeshExportOptions.MeshTransformType Namespace : PLATEAU.CityExport Assembly : cs.temp.dll.dll Syntax public enum MeshTransformType Fields Name Description Local PlaneCartesian"
  },
  "api/PLATEAU.CityExport.MeshFileFormat.html": {
    "href": "api/PLATEAU.CityExport.MeshFileFormat.html",
    "title": "Enum MeshFileFormat | PLATEAU SDK for Unity",
    "keywords": "Enum MeshFileFormat Namespace : PLATEAU.CityExport Assembly : cs.temp.dll.dll Syntax public enum MeshFileFormat Fields Name Description FBX GLTF OBJ"
  },
  "api/PLATEAU.CityExport.MeshFileFormatExtension.html": {
    "href": "api/PLATEAU.CityExport.MeshFileFormatExtension.html",
    "title": "Class MeshFileFormatExtension | PLATEAU SDK for Unity",
    "keywords": "Class MeshFileFormatExtension Inheritance Object MeshFileFormatExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityExport Assembly : cs.temp.dll.dll Syntax public static class MeshFileFormatExtension Methods ToExtensions(MeshFileFormat) Declaration public static string[] ToExtensions(this MeshFileFormat format) Parameters Type Name Description MeshFileFormat format Returns Type Description String []"
  },
  "api/PLATEAU.CityExport.ModelConvert.SubMeshConvert.html": {
    "href": "api/PLATEAU.CityExport.ModelConvert.SubMeshConvert.html",
    "title": "Namespace PLATEAU.CityExport.ModelConvert.SubMeshConvert | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.CityExport.ModelConvert.SubMeshConvert Classes UnityMeshToDllSubMeshWithEmptyMaterial UnityのMeshから、見た目情報が空であるSubMeshを生成します。 特に、エクスポートでテクスチャを含めない設定にしたときに利用されます。 UnityMeshToDllSubMeshWithGameMaterial Unityの から共通ライブラリの を作るにあたって、 具体的な見た目情報ではなく、UnityマテリアルのIDのみを に記録する変換モードです。 用途は結合分割機能で、あとでUnityマテリアルの番号からマテリアルを復元するために使う変換モードです。 ここでいうマテリアルIDとは、 GameMaterials のインデックスを指します。 UnityMeshToDllSubMeshWithTexture UnityのMeshから共通ライブラリのSubMeshを生成します。 テクスチャ情報を含みます。 特にエクスポート機能で利用されます。 Interfaces IUnityMeshToDllSubMeshConverter UnityのMeshから共通ライブラリのSubMeshを構築する機能を抽象化したものです。 なぜ抽象化する必要があるかというと、SubMeshの構築方法にはいくつか種類があるからです。 具体的には、 エクスポート時にテクスチャを含む設定であれば、テクスチャパスをSubMeshに含めることになります。 エクスポート時にテクスチャを含まない設定であれば、空のSubMeshを用意することになります。 結合分割時は、ゲームエンジンのマテリアルをIDに変換してSubMeshに含めることになります。 Delegates IUnityMeshToDllSubMeshConverter.ForEachUnitySubMeshToDllSubMesh"
  },
  "api/PLATEAU.CityExport.ModelConvert.SubMeshConvert.IUnityMeshToDllSubMeshConverter.ForEachUnitySubMeshToDllSubMesh.html": {
    "href": "api/PLATEAU.CityExport.ModelConvert.SubMeshConvert.IUnityMeshToDllSubMeshConverter.ForEachUnitySubMeshToDllSubMesh.html",
    "title": "Delegate IUnityMeshToDllSubMeshConverter.ForEachUnitySubMeshToDllSubMesh | PLATEAU SDK for Unity",
    "keywords": "Delegate IUnityMeshToDllSubMeshConverter.ForEachUnitySubMeshToDllSubMesh Namespace : PLATEAU.CityExport.ModelConvert.SubMeshConvert Assembly : cs.temp.dll.dll Syntax public delegate SubMesh ForEachUnitySubMeshToDllSubMesh(int startIndex, int endIndex, Material material); Parameters Type Name Description Int32 startIndex Int32 endIndex Material material Returns Type Description SubMesh"
  },
  "api/PLATEAU.CityExport.ModelConvert.SubMeshConvert.IUnityMeshToDllSubMeshConverter.html": {
    "href": "api/PLATEAU.CityExport.ModelConvert.SubMeshConvert.IUnityMeshToDllSubMeshConverter.html",
    "title": "Interface IUnityMeshToDllSubMeshConverter | PLATEAU SDK for Unity",
    "keywords": "Interface IUnityMeshToDllSubMeshConverter UnityのMeshから共通ライブラリのSubMeshを構築する機能を抽象化したものです。 なぜ抽象化する必要があるかというと、SubMeshの構築方法にはいくつか種類があるからです。 具体的には、 エクスポート時にテクスチャを含む設定であれば、テクスチャパスをSubMeshに含めることになります。 エクスポート時にテクスチャを含まない設定であれば、空のSubMeshを用意することになります。 結合分割時は、ゲームエンジンのマテリアルをIDに変換してSubMeshに含めることになります。 Namespace : PLATEAU.CityExport.ModelConvert.SubMeshConvert Assembly : cs.temp.dll.dll Syntax public interface IUnityMeshToDllSubMeshConverter Methods Convert(Mesh, Renderer) Declaration List<SubMesh> Convert(Mesh unityMesh, Renderer renderer) Parameters Type Name Description Mesh unityMesh Renderer renderer Returns Type Description List < SubMesh > ForEachUnitySubMesh(Mesh, Renderer, IUnityMeshToDllSubMeshConverter.ForEachUnitySubMeshToDllSubMesh) 変換に使う共通機能です。 Unityの各SubMeshに対して、 predicate でDllSubMeshを追加し、そのリストを返します。 Declaration static List<SubMesh> ForEachUnitySubMesh(Mesh unityMesh, Renderer renderer, IUnityMeshToDllSubMeshConverter.ForEachUnitySubMeshToDllSubMesh predicate) Parameters Type Name Description Mesh unityMesh Renderer renderer IUnityMeshToDllSubMeshConverter.ForEachUnitySubMeshToDllSubMesh predicate Returns Type Description List < SubMesh >"
  },
  "api/PLATEAU.CityExport.ModelConvert.SubMeshConvert.UnityMeshToDllSubMeshWithEmptyMaterial.html": {
    "href": "api/PLATEAU.CityExport.ModelConvert.SubMeshConvert.UnityMeshToDllSubMeshWithEmptyMaterial.html",
    "title": "Class UnityMeshToDllSubMeshWithEmptyMaterial | PLATEAU SDK for Unity",
    "keywords": "Class UnityMeshToDllSubMeshWithEmptyMaterial UnityのMeshから、見た目情報が空であるSubMeshを生成します。 特に、エクスポートでテクスチャを含めない設定にしたときに利用されます。 Inheritance Object UnityMeshToDllSubMeshWithEmptyMaterial Implements IUnityMeshToDllSubMeshConverter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityExport.ModelConvert.SubMeshConvert Assembly : cs.temp.dll.dll Syntax public class UnityMeshToDllSubMeshWithEmptyMaterial : IUnityMeshToDllSubMeshConverter Methods Convert(Mesh, Renderer) Declaration public List<SubMesh> Convert(Mesh unityMesh, Renderer renderer) Parameters Type Name Description Mesh unityMesh Renderer renderer Returns Type Description List < SubMesh > Implements IUnityMeshToDllSubMeshConverter"
  },
  "api/PLATEAU.CityExport.ModelConvert.SubMeshConvert.UnityMeshToDllSubMeshWithGameMaterial.html": {
    "href": "api/PLATEAU.CityExport.ModelConvert.SubMeshConvert.UnityMeshToDllSubMeshWithGameMaterial.html",
    "title": "Class UnityMeshToDllSubMeshWithGameMaterial | PLATEAU SDK for Unity",
    "keywords": "Class UnityMeshToDllSubMeshWithGameMaterial Unityの から共通ライブラリの を作るにあたって、 具体的な見た目情報ではなく、UnityマテリアルのIDのみを に記録する変換モードです。 用途は結合分割機能で、あとでUnityマテリアルの番号からマテリアルを復元するために使う変換モードです。 ここでいうマテリアルIDとは、 GameMaterials のインデックスを指します。 Inheritance Object UnityMeshToDllSubMeshWithGameMaterial Implements IUnityMeshToDllSubMeshConverter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityExport.ModelConvert.SubMeshConvert Assembly : cs.temp.dll.dll Syntax public class UnityMeshToDllSubMeshWithGameMaterial : IUnityMeshToDllSubMeshConverter Properties GameMaterials Declaration public List<Material> GameMaterials { get; } Property Value Type Description List < Material > Methods Convert(Mesh, Renderer) Declaration public List<SubMesh> Convert(Mesh unityMesh, Renderer renderer) Parameters Type Name Description Mesh unityMesh Renderer renderer Returns Type Description List < SubMesh > Implements IUnityMeshToDllSubMeshConverter"
  },
  "api/PLATEAU.CityExport.ModelConvert.SubMeshConvert.UnityMeshToDllSubMeshWithTexture.html": {
    "href": "api/PLATEAU.CityExport.ModelConvert.SubMeshConvert.UnityMeshToDllSubMeshWithTexture.html",
    "title": "Class UnityMeshToDllSubMeshWithTexture | PLATEAU SDK for Unity",
    "keywords": "Class UnityMeshToDllSubMeshWithTexture UnityのMeshから共通ライブラリのSubMeshを生成します。 テクスチャ情報を含みます。 特にエクスポート機能で利用されます。 Inheritance Object UnityMeshToDllSubMeshWithTexture Implements IUnityMeshToDllSubMeshConverter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityExport.ModelConvert.SubMeshConvert Assembly : cs.temp.dll.dll Syntax public class UnityMeshToDllSubMeshWithTexture : IUnityMeshToDllSubMeshConverter Methods Convert(Mesh, Renderer) Declaration public List<SubMesh> Convert(Mesh unityMesh, Renderer renderer) Parameters Type Name Description Mesh unityMesh Renderer renderer Returns Type Description List < SubMesh > Implements IUnityMeshToDllSubMeshConverter"
  },
  "api/PLATEAU.CityExport.UnityModelExporter.html": {
    "href": "api/PLATEAU.CityExport.UnityModelExporter.html",
    "title": "Class UnityModelExporter | PLATEAU SDK for Unity",
    "keywords": "Class UnityModelExporter Unityのモデルを Model (中間形式) にしてから 3Dモデルファイルに出力します。 Inheritance Object UnityModelExporter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityExport Assembly : cs.temp.dll.dll Syntax public static class UnityModelExporter Methods Export(String, PLATEAUInstancedCityModel, MeshExportOptions) Declaration public static void Export(string destDir, PLATEAUInstancedCityModel instancedCityModel, MeshExportOptions options) Parameters Type Name Description String destDir PLATEAUInstancedCityModel instancedCityModel MeshExportOptions options"
  },
  "api/PLATEAU.CityGML.Address.html": {
    "href": "api/PLATEAU.CityGML.Address.html",
    "title": "Class Address | PLATEAU SDK for Unity",
    "keywords": "Class Address 住所情報を保持します。 CityObject が Address を保持します。 Inheritance Object Address Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class Address Constructors Address(IntPtr) Declaration public Address(IntPtr handle) Parameters Type Name Description IntPtr handle Properties Country Declaration public string Country { get; } Property Value Type Description String Locality Declaration public string Locality { get; } Property Value Type Description String PostalCode Declaration public string PostalCode { get; } Property Value Type Description String ThoroughFareName Declaration public string ThoroughFareName { get; } Property Value Type Description String ThoroughFareNumber Declaration public string ThoroughFareNumber { get; } Property Value Type Description String"
  },
  "api/PLATEAU.CityGML.Appearance.html": {
    "href": "api/PLATEAU.CityGML.Appearance.html",
    "title": "Class Appearance | PLATEAU SDK for Unity",
    "keywords": "Class Appearance Texture , Material の基底クラスです。 Inheritance Object Object Appearance Material Texture Inherited Members Object.Handle Object.ID Object.NativeAttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class Appearance : Object Properties IsFront Declaration public bool IsFront { get; } Property Value Type Description Boolean Themes テーマ名を配列で返します。 Declaration public string[] Themes { get; } Property Value Type Description String [] Type Texture なら \"Texture\" という文字列を返します。 Declaration public string Type { get; } Property Value Type Description String"
  },
  "api/PLATEAU.CityGML.AppearanceTarget.html": {
    "href": "api/PLATEAU.CityGML.AppearanceTarget.html",
    "title": "Class AppearanceTarget | PLATEAU SDK for Unity",
    "keywords": "Class AppearanceTarget 見た目に関する情報のターゲットとなる CityGMLオブジェクトの基底クラスです。 テーマ名, TextureTargetDefinition , MaterialTargetDefinition を保持し、それらを紐付けます。 Inheritance Object Object AppearanceTarget Geometry Polygon Inherited Members Object.Handle Object.ID Object.NativeAttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class AppearanceTarget : Object Properties TextureTargetDefinitions 保持する TextureTargetDefinition を foreach や LINQ でイテレートするための機能です。 Declaration public IEnumerable<TextureTargetDefinition> TextureTargetDefinitions { get; } Property Value Type Description IEnumerable < TextureTargetDefinition > TextureTargetDefinitionsCount 保持する TextureTargetDefinitions の数を返します。 Declaration public int TextureTargetDefinitionsCount { get; } Property Value Type Description Int32 Methods GetMaterialTargetDefinitionByThemeName(String, Boolean) Declaration public MaterialTargetDefinition GetMaterialTargetDefinitionByThemeName(string themeName, bool front) Parameters Type Name Description String themeName Boolean front Returns Type Description MaterialTargetDefinition GetTextureTargetDefinition(Int32) インデックス指定で TextureTargetDefinition を取得します。 Declaration public TextureTargetDefinition GetTextureTargetDefinition(int index) Parameters Type Name Description Int32 index Returns Type Description TextureTargetDefinition GetTextureTargetDefinition(String, Boolean) テーマ名から TextureTargetDefinition を取得します。 与えられたテーマ名に該当するものがない場合は を投げます。 Declaration public TextureTargetDefinition GetTextureTargetDefinition(string themeName, bool front) Parameters Type Name Description String themeName Boolean front Returns Type Description TextureTargetDefinition MaterialThemeNames(Boolean) Declaration public string[] MaterialThemeNames(bool front) Parameters Type Name Description Boolean front Returns Type Description String [] MaterialThemesCountByFront(Boolean) Declaration public int MaterialThemesCountByFront(bool front) Parameters Type Name Description Boolean front Returns Type Description Int32 TextureThemeNames(Boolean) テクスチャのテーマ名(0個以上)を取得して配列で返します。 Declaration public string[] TextureThemeNames(bool front) Parameters Type Name Description Boolean front Returns Type Description String [] TextureThemesCountOfFront(Boolean) 保持するテクスチャのテーマのうち、 front が与えられたタイプであるものの数を返します。 Declaration public int TextureThemesCountOfFront(bool front) Parameters Type Name Description Boolean front Returns Type Description Int32"
  },
  "api/PLATEAU.CityGML.AppearanceTargetDefinition-1.html": {
    "href": "api/PLATEAU.CityGML.AppearanceTargetDefinition-1.html",
    "title": "Class AppearanceTargetDefinition<T> | PLATEAU SDK for Unity",
    "keywords": "Class AppearanceTargetDefinition<T> TextureTargetDefinition , MaterialTargetDefinition の基底クラスです。 TargetID , Appearance を保持します。 Appearance は TextureTargetDefinition ならば Texture 型、 MaterialTargetDefinition ならば Material 型です。 Inheritance Object Object AppearanceTargetDefinition<T> MaterialTargetDefinition TextureTargetDefinition Inherited Members Object.Handle Object.ID Object.NativeAttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class AppearanceTargetDefinition<T> : Object where T : Appearance Type Parameters Name Description T Properties Appearance Declaration public T Appearance { get; } Property Value Type Description T TargetID Declaration public string TargetID { get; } Property Value Type Description String"
  },
  "api/PLATEAU.CityGML.AttributeType.html": {
    "href": "api/PLATEAU.CityGML.AttributeType.html",
    "title": "Enum AttributeType | PLATEAU SDK for Unity",
    "keywords": "Enum AttributeType 属性の値の想定形式です。 形式が String, Double, Integer, Date, Uri, Measure である場合、内部的にはデータは string です。 AttributeSet である場合、内部的にはデータは NativeAttributesMap への参照です。 Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public enum AttributeType Fields Name Description AttributeSet Date Double Integer Measure String Uri"
  },
  "api/PLATEAU.CityGML.CityGml.html": {
    "href": "api/PLATEAU.CityGML.CityGml.html",
    "title": "Class CityGml | PLATEAU SDK for Unity",
    "keywords": "Class CityGml Inheritance Object CityGml Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public static class CityGml Methods Load(String, CitygmlParserParams, LogCallbacks, DllLogLevel) DLLの機能によって gmlファイルをパースし、CityModelを生成します。 Declaration public static CityModel Load(string gmlPath, CitygmlParserParams parserParams, LogCallbacks logCallbacks = null, DllLogLevel logLevel = null) Parameters Type Name Description String gmlPath gmlファイルのパスです。 CitygmlParserParams parserParams 変換の設定です。 LogCallbacks logCallbacks ログを受け取るコールバックです。省略または null の場合は C# の標準出力にログを転送します。 DllLogLevel logLevel ログの詳細度です。 Returns Type Description CityModel"
  },
  "api/PLATEAU.CityGML.CitygmlParserParams.html": {
    "href": "api/PLATEAU.CityGML.CitygmlParserParams.html",
    "title": "Struct CitygmlParserParams | PLATEAU SDK for Unity",
    "keywords": "Struct CitygmlParserParams GMLファイルのパース時の設定です。 Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public struct CitygmlParserParams Constructors CitygmlParserParams(Boolean, Boolean, Boolean, Boolean) Declaration public CitygmlParserParams(bool optimize, bool keepVertices, bool tessellate, bool ignoreGeometries) Parameters Type Name Description Boolean optimize Boolean keepVertices Boolean tessellate Boolean ignoreGeometries Properties IgnoreGeometries Declaration public bool IgnoreGeometries { get; set; } Property Value Type Description Boolean KeepVertices Declaration public bool KeepVertices { get; set; } Property Value Type Description Boolean Optimize Declaration public bool Optimize { get; set; } Property Value Type Description Boolean Tesselate を false に設定すると、 Polygon が頂点を保持する代わりに LinearRing を保持します。 Declaration public bool Tesselate { get; set; } Property Value Type Description Boolean"
  },
  "api/PLATEAU.CityGML.CityModel.html": {
    "href": "api/PLATEAU.CityGML.CityModel.html",
    "title": "Class CityModel | PLATEAU SDK for Unity",
    "keywords": "Class CityModel GMLファイルをパースして得られる街のモデルです。 0個以上の CityObject を保持します。 Inheritance Object CityModel Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public sealed class CityModel : IDisposable Properties Handle セーフハンドルを取得します。 Declaration public IntPtr Handle { get; } Property Value Type Description IntPtr RootCityObjects CityModel のトップレベルにある CityObject の一覧を返します。 Declaration public ReadOnlyCollection<CityObject> RootCityObjects { get; } Property Value Type Description ReadOnlyCollection < CityObject > Methods Dispose() Declaration public void Dispose() Finalize() Declaration protected void Finalize() GetCenterPoint(Int32) cityModel の中心点を返します。 また GMLファイルから cityModel の Envelope を読み取れない場合は、 中心点が分からないので原点座標を返します。 Declaration public PlateauVector3d GetCenterPoint(int coordinateZoneID) Parameters Type Name Description Int32 coordinateZoneID Returns Type Description PlateauVector3d GetCityObjectById(String) idから CityObject を返します。 該当idのものがない場合は を投げます。 Declaration public CityObject GetCityObjectById(string id) Parameters Type Name Description String id Returns Type Description CityObject GetCityObjectsByType(CityObjectType) CityModel の type タイプの全ての CityObject を返します。 Declaration public CityObject[] GetCityObjectsByType(CityObjectType type) Parameters Type Name Description CityObjectType type 取得したい都市オブジェクトのタイプ Returns Type Description CityObject [] type タイプの全ての CityObject"
  },
  "api/PLATEAU.CityGML.CityObject.html": {
    "href": "api/PLATEAU.CityGML.CityObject.html",
    "title": "Class CityObject | PLATEAU SDK for Unity",
    "keywords": "Class CityObject CityGMLにおける都市オブジェクトです。 CityModel または 親 CityObject が CityObject を保持します。 この CityObject は CityObjectType , Address , 子 CityObject , Geometry を保持します。 Inheritance Object Object FeatureObject CityObject Inherited Members FeatureObject.Envelope FeatureObject.SetEnvelope(Double, Double, Double, Double, Double, Double) Object.Handle Object.ID Object.NativeAttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class CityObject : FeatureObject Properties Address Declaration public Address Address { get; } Property Value Type Description Address ChildCityObjectCount Declaration public int ChildCityObjectCount { get; } Property Value Type Description Int32 ChildCityObjects 子 CityObject をforeachやLinqで回したい時に利用できます。 Declaration public IEnumerable<CityObject> ChildCityObjects { get; } Property Value Type Description IEnumerable < CityObject > CityObjectDescendantsDFS 子孫の CityObject をすべて再帰的にイテレートします。自分自身を含みます。 イテレートの順番は DFS（深さ優先探索）です。 Declaration public IEnumerable<CityObject> CityObjectDescendantsDFS { get; } Property Value Type Description IEnumerable < CityObject > Geometries 各 Geometry を foreach で回したい時に利用できます。 Declaration public IEnumerable<Geometry> Geometries { get; } Property Value Type Description IEnumerable < Geometry > GeometryCount ジオメトリの数を返します。 Declaration public int GeometryCount { get; } Property Value Type Description Int32 ImplicitGeometryCount Declaration public int ImplicitGeometryCount { get; } Property Value Type Description Int32 Type Declaration public CityObjectType Type { get; } Property Value Type Description CityObjectType Methods GetChildCityObject(Int32) Declaration public CityObject GetChildCityObject(int index) Parameters Type Name Description Int32 index Returns Type Description CityObject GetGeometry(Int32) Declaration public Geometry GetGeometry(int index) Parameters Type Name Description Int32 index Returns Type Description Geometry"
  },
  "api/PLATEAU.CityGML.CityObjectType.html": {
    "href": "api/PLATEAU.CityGML.CityObjectType.html",
    "title": "Enum CityObjectType | PLATEAU SDK for Unity",
    "keywords": "Enum CityObjectType Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public enum CityObjectType : ulong Fields Name Description COT_All COT_BreaklineRelief COT_Bridge COT_BridgeConstructionElement COT_BridgeInstallation COT_BridgePart COT_Building COT_BuildingFurniture COT_BuildingInstallation COT_BuildingPart COT_CeilingSurface COT_CityFurniture COT_CityObjectGroup COT_ClosureSurface COT_Door COT_FloorSurface COT_GenericCityObject COT_GroundSurface COT_IntBuildingInstallation COT_InteriorWallSurface COT_LandUse COT_MassPointRelief COT_OuterCeilingSurface COT_OuterFloorSurface COT_PlantCover COT_Railway COT_RasterRelief COT_ReliefComponent COT_ReliefFeature COT_Road COT_RoofSurface COT_Room COT_SolitaryVegetationObject COT_Square COT_TINRelief COT_Track COT_TransportationObject COT_Tunnel COT_Unknown COT_WallSurface COT_WaterBody COT_WaterSurface COT_Window"
  },
  "api/PLATEAU.CityGML.FeatureObject.html": {
    "href": "api/PLATEAU.CityGML.FeatureObject.html",
    "title": "Class FeatureObject | PLATEAU SDK for Unity",
    "keywords": "Class FeatureObject CityGMLにおける全ての地物オブジェクトのベースクラスです。 Envelope (オブジェクトの存在範囲を2点の座標で示したもの)を持ちます。 Inheritance Object Object FeatureObject CityObject Inherited Members Object.Handle Object.ID Object.NativeAttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class FeatureObject : Object Properties Envelope 建築物の範囲を double[6] で返します。 Declaration public double[] Envelope { get; } Property Value Type Description Double [] 戻り値 double[6] の配列の中身は座標 { lower_x, lower_y, lower_z, upper_x, upper_y, upper_z } です。 Methods SetEnvelope(Double, Double, Double, Double, Double, Double) 建物の範囲を設定します。 Declaration public void SetEnvelope(double lowerX, double lowerY, double lowerZ, double upperX, double upperY, double upperZ) Parameters Type Name Description Double lowerX Double lowerY Double lowerZ Double upperX Double upperY Double upperZ"
  },
  "api/PLATEAU.CityGML.Geometry.html": {
    "href": "api/PLATEAU.CityGML.Geometry.html",
    "title": "Class Geometry | PLATEAU SDK for Unity",
    "keywords": "Class Geometry 建築物の形状と見た目の情報を保持します。 CityObject が Geometry を保持します。 Geometry は Polygon , 子 Geometry を保持します。 Inheritance Object Object AppearanceTarget Geometry Inherited Members AppearanceTarget.TextureTargetDefinitionsCount AppearanceTarget.GetTextureTargetDefinition(Int32) AppearanceTarget.TextureTargetDefinitions AppearanceTarget.GetTextureTargetDefinition(String, Boolean) AppearanceTarget.TextureThemesCountOfFront(Boolean) AppearanceTarget.TextureThemeNames(Boolean) AppearanceTarget.MaterialThemesCountByFront(Boolean) AppearanceTarget.MaterialThemeNames(Boolean) AppearanceTarget.GetMaterialTargetDefinitionByThemeName(String, Boolean) Object.Handle Object.ID Object.NativeAttributesMap Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class Geometry : AppearanceTarget Constructors Geometry(IntPtr) Declaration public Geometry(IntPtr handle) Parameters Type Name Description IntPtr handle Properties ChildGeometryCount 子の Geometry の数を返します。 Declaration public int ChildGeometryCount { get; } Property Value Type Description Int32 GeometryDescendantsDFS 子孫の Geometry を再帰ですべてイテレートします。自分自身を含みます。 イテレートの順番は DFS(深さ優先探索)です。 Declaration public IEnumerable<Geometry> GeometryDescendantsDFS { get; } Property Value Type Description IEnumerable < Geometry > LineStringCount LineString の数を返します。 TODO LineString の取得は未実装です。 GMLファイルが LineString を含むケースが今のところ見当たらないため Declaration public int LineStringCount { get; } Property Value Type Description Int32 LOD LOD (Level Of Detail) を取得します。 LOD は 0 がもっとも簡略化された形状であり、数字が上がるほど形状が詳細であることを意味します。 Declaration public int LOD { get; } Property Value Type Description Int32 PolygonCount Polygon の数を返します。 Declaration public int PolygonCount { get; } Property Value Type Description Int32 Polygons Polygon をforeachやLinqで回したい時に利用できます。 Declaration public IEnumerable<Polygon> Polygons { get; } Property Value Type Description IEnumerable < Polygon > SRSName SRSName を取得します。 SRSNameは典型的には次のようなURL形式の文字列になるはずです。 例: \" http://www.opengis.net/def/crs/EPSG/0/6697&quot ; Declaration public string SRSName { get; } Property Value Type Description String Type Declaration public GeometryType Type { get; } Property Value Type Description GeometryType Methods GetChildGeometry(Int32) インデックス指定で子の Geometry を1つ返します。 Declaration public Geometry GetChildGeometry(int index) Parameters Type Name Description Int32 index Returns Type Description Geometry GetPolygon(Int32) インデックス指定で Polygon を1つ返します。 Declaration public Polygon GetPolygon(int index) Parameters Type Name Description Int32 index Returns Type Description Polygon ToString() デバッグ用に自身に関する情報を文字列で返します。 Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/PLATEAU.CityGML.GeometryType.html": {
    "href": "api/PLATEAU.CityGML.GeometryType.html",
    "title": "Enum GeometryType | PLATEAU SDK for Unity",
    "keywords": "Enum GeometryType Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public enum GeometryType : ulong Fields Name Description GT_Ceiling GT_Closure GT_Floor GT_Ground GT_InteriorWall GT_OuterCeiling GT_OuterFloor GT_Roof GT_Tin GT_Unknown GT_Wall"
  },
  "api/PLATEAU.CityGML.html": {
    "href": "api/PLATEAU.CityGML.html",
    "title": "Namespace PLATEAU.CityGML | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.CityGML Classes Address 住所情報を保持します。 CityObject が Address を保持します。 Appearance Texture , Material の基底クラスです。 AppearanceTarget 見た目に関する情報のターゲットとなる CityGMLオブジェクトの基底クラスです。 テーマ名, TextureTargetDefinition , MaterialTargetDefinition を保持し、それらを紐付けます。 AppearanceTargetDefinition<T> TextureTargetDefinition , MaterialTargetDefinition の基底クラスです。 TargetID , Appearance を保持します。 Appearance は TextureTargetDefinition ならば Texture 型、 MaterialTargetDefinition ならば Material 型です。 CityGml CityModel GMLファイルをパースして得られる街のモデルです。 0個以上の CityObject を保持します。 CityObject CityGMLにおける都市オブジェクトです。 CityModel または 親 CityObject が CityObject を保持します。 この CityObject は CityObjectType , Address , 子 CityObject , Geometry を保持します。 FeatureObject CityGMLにおける全ての地物オブジェクトのベースクラスです。 Envelope (オブジェクトの存在範囲を2点の座標で示したもの)を持ちます。 Geometry 建築物の形状と見た目の情報を保持します。 CityObject が Geometry を保持します。 Geometry は Polygon , 子 Geometry を保持します。 LinearRing 多角形による形状表現です。 頂点座標のリストを保持します。 Polygon が LinearRing を保持します。（ただし条件付きで一部のみです。） Material マテリアル情報です。 MaterialTargetDefinition 未実装です。 マテリアルを含むGMLの例が見当たらないため NativeAttributesMap 属性の辞書です。 を実装します。 string をキーとし、 NativeAttributeValue が値になります。 this[key] で NativeAttributeValue が返ります。 NativeAttributeValue Plateau のオブジェクトが持つ属性 (key と value のペア) のうち、 value の部分です。 value は、内部的には string または 子の属性セットへの参照 のどちらかのデータを保持します。 value の値がどのような形式であるかを AttributeType 形式で保持し、 Type で取得できます。 Type が String, Double, Integer, Data, Uri, Measure の場合、内部的にはデータは単に string であり、 AsString で取得できます。 AsDouble , AsInt プロパティもありますが、それは単に AsString を数値にパースするものです。 Type が AttributeSet である場合、 この属性の子に属性セットがあることを意味します。 この場合は AsString は意味を成さず、代わりに AsAttrSet で子の属性セットを取得できます。 Object CityGMLにおける全てのオブジェクトのベースクラスです。 ユニークIDと0個以上の属性ペアを持ち、属性ペアはすべて NativeAttributesMap に格納されています。 Polygon 建築物の形状におけるポリゴンです。 Vertices , Indices を保持します。 ただし、GMLファイルのパース時に を false に設定した時に限り、 Vertices, Indices の代わりに ExteriorRing , InteriorRings を保持することがあります。 Vertex と Ring を両方保持する場合もあれば、片方だけの場合もあります。 Polygon は Geometry によって保持されます。 Texture テクスチャ情報です。 Url と TextureWrapMode を保持します。 TextureTargetDefinition によって保持されます。 TextureCoordinates テクスチャのマッピングに関する情報です。 テクスチャ座標と LinearRing の頂点を紐付けます。 TextureTargetDefinition テクスチャとテクスチャマッピングを紐付けます。 Appearance でテクスチャ情報を取得できます。 GetCoordinate(Int32) (i) で i番目のテクスチャマッピング ( TextureCoordinates ) を取得できます。 AppearanceTarget によって保持されます。 Structs CitygmlParserParams GMLファイルのパース時の設定です。 Enums AttributeType 属性の値の想定形式です。 形式が String, Double, Integer, Date, Uri, Measure である場合、内部的にはデータは string です。 AttributeSet である場合、内部的にはデータは NativeAttributesMap への参照です。 CityObjectType GeometryType TextureWrapMode"
  },
  "api/PLATEAU.CityGML.LinearRing.html": {
    "href": "api/PLATEAU.CityGML.LinearRing.html",
    "title": "Class LinearRing | PLATEAU SDK for Unity",
    "keywords": "Class LinearRing 多角形による形状表現です。 頂点座標のリストを保持します。 Polygon が LinearRing を保持します。（ただし条件付きで一部のみです。） Inheritance Object Object LinearRing Inherited Members Object.Handle Object.ID Object.NativeAttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class LinearRing : Object Properties VertexCount 頂点数を取得します。 注意: GMLファイルのパース時の設定が tessellate = false のときに限り 意味のある値を返します。 tessellate = true でパースした場合、この値は 0 になります。 Declaration public int VertexCount { get; } Property Value Type Description Int32 Methods GetVertex(Int32) index 番目の頂点座標を取得します。 Declaration public PlateauVector3d GetVertex(int index) Parameters Type Name Description Int32 index Returns Type Description PlateauVector3d"
  },
  "api/PLATEAU.CityGML.Material.html": {
    "href": "api/PLATEAU.CityGML.Material.html",
    "title": "Class Material | PLATEAU SDK for Unity",
    "keywords": "Class Material マテリアル情報です。 Inheritance Object Object Appearance Material Implements IEquatable < Material > Inherited Members Appearance.Type Appearance.IsFront Appearance.Themes Object.Handle Object.ID Object.NativeAttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class Material : Appearance Properties AmbientIntensity Declaration public float AmbientIntensity { get; } Property Value Type Description Single Diffuse マテリアル情報を返します。 Declaration public PlateauVector3f Diffuse { get; } Property Value Type Description PlateauVector3f Emissive Declaration public PlateauVector3f Emissive { get; } Property Value Type Description PlateauVector3f IsSmooth Declaration public bool IsSmooth { get; } Property Value Type Description Boolean Shininess Declaration public float Shininess { get; } Property Value Type Description Single Specular Declaration public PlateauVector3f Specular { get; } Property Value Type Description PlateauVector3f Transparency Declaration public float Transparency { get; } Property Value Type Description Single Methods Equals(Material) Declaration public bool Equals(Material other) Parameters Type Name Description Material other Returns Type Description Boolean GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() Implements IEquatable<>"
  },
  "api/PLATEAU.CityGML.MaterialTargetDefinition.html": {
    "href": "api/PLATEAU.CityGML.MaterialTargetDefinition.html",
    "title": "Class MaterialTargetDefinition | PLATEAU SDK for Unity",
    "keywords": "Class MaterialTargetDefinition 未実装です。 マテリアルを含むGMLの例が見当たらないため Inheritance Object Object AppearanceTargetDefinition < Material > MaterialTargetDefinition Inherited Members AppearanceTargetDefinition<Material>.Appearance AppearanceTargetDefinition<Material>.TargetID Object.Handle Object.ID Object.NativeAttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class MaterialTargetDefinition : AppearanceTargetDefinition<Material>"
  },
  "api/PLATEAU.CityGML.NativeAttributesMap.html": {
    "href": "api/PLATEAU.CityGML.NativeAttributesMap.html",
    "title": "Class NativeAttributesMap | PLATEAU SDK for Unity",
    "keywords": "Class NativeAttributesMap 属性の辞書です。 を実装します。 string をキーとし、 NativeAttributeValue が値になります。 this[key] で NativeAttributeValue が返ります。 Inheritance Object NativeAttributesMap Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class NativeAttributesMap : IReadOnlyDictionary<string, NativeAttributeValue> Properties Count 属性の数を返します。 Declaration public int Count { get; } Property Value Type Description Int32 Item[String] 属性のキーから値を返します。 key が存在しない場合は を投げます。 Declaration public NativeAttributeValue this[string key] { get; } Parameters Type Name Description String key Property Value Type Description NativeAttributeValue Keys 属性のキーをすべて返します。 結果はキャッシュされるので2回目以降は速いです。 Declaration public IEnumerable<string> Keys { get; } Property Value Type Description IEnumerable < String > Values (key, value) のペアのうち value ( NativeAttributeValue ) をすべて返します。 Declaration public IEnumerable<NativeAttributeValue> Values { get; } Property Value Type Description IEnumerable < NativeAttributeValue > Methods ContainsKey(String) 属性に key が含まれていれば true, key がなければ false を返します。 Declaration public bool ContainsKey(string key) Parameters Type Name Description String key Returns Type Description Boolean GetEnumerator() Declaration public IEnumerator<AttrPair> GetEnumerator() Returns Type Description IEnumerator < AttrPair > GetValueOrNull(String) key に対応する値 NativeAttributeValue を返します。 なければ null を返します。 Declaration public NativeAttributeValue GetValueOrNull(string key) Parameters Type Name Description String key Returns Type Description NativeAttributeValue ToString() 属性の中身を、見やすくフォーマットした文字列にして返します。 子の属性も再帰的に含みます。 Declaration public override string ToString() Returns Type Description String TryGetValue(String, out NativeAttributeValue) 属性辞書の中に key が存在すればその値を value に代入して true を返します。 key が存在しなければ value に null を代入して false を返します。 Declaration public bool TryGetValue(string key, out NativeAttributeValue value) Parameters Type Name Description String key NativeAttributeValue value Returns Type Description Boolean"
  },
  "api/PLATEAU.CityGML.NativeAttributeValue.html": {
    "href": "api/PLATEAU.CityGML.NativeAttributeValue.html",
    "title": "Class NativeAttributeValue | PLATEAU SDK for Unity",
    "keywords": "Class NativeAttributeValue Plateau のオブジェクトが持つ属性 (key と value のペア) のうち、 value の部分です。 value は、内部的には string または 子の属性セットへの参照 のどちらかのデータを保持します。 value の値がどのような形式であるかを AttributeType 形式で保持し、 Type で取得できます。 Type が String, Double, Integer, Data, Uri, Measure の場合、内部的にはデータは単に string であり、 AsString で取得できます。 AsDouble , AsInt プロパティもありますが、それは単に AsString を数値にパースするものです。 Type が AttributeSet である場合、 この属性の子に属性セットがあることを意味します。 この場合は AsString は意味を成さず、代わりに AsAttrSet で子の属性セットを取得できます。 Inheritance Object NativeAttributeValue Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class NativeAttributeValue Constructors NativeAttributeValue(IntPtr) Declaration public NativeAttributeValue(IntPtr handle) Parameters Type Name Description IntPtr handle Properties AsAttrSet Type が AttributeSet であることを前提に、 子の NativeAttributesMap を返します。 Type がその他である場合は意味を成しません。 Declaration public NativeAttributesMap AsAttrSet { get; } Property Value Type Description NativeAttributesMap AsBool 属性値を bool にパースして返します。 Declaration public bool AsBool { get; } Property Value Type Description Boolean AsDouble 属性値を double にパースして返します。 Declaration public double AsDouble { get; } Property Value Type Description Double AsInt 属性値を int にパースして返します。 Declaration public int AsInt { get; } Property Value Type Description Int32 AsString 属性値を string 形式で取得します。 Type が String, Double, Integer, Data, Uri, Measure の場合に有効です。 Type が AttributeSet の場合は意味を成しません。 Declaration public string AsString { get; } Property Value Type Description String Type 属性の値の想定形式です。 AttributeType 型で返します。 Declaration public AttributeType Type { get; } Property Value Type Description AttributeType"
  },
  "api/PLATEAU.CityGML.Object.html": {
    "href": "api/PLATEAU.CityGML.Object.html",
    "title": "Class Object | PLATEAU SDK for Unity",
    "keywords": "Class Object CityGMLにおける全てのオブジェクトのベースクラスです。 ユニークIDと0個以上の属性ペアを持ち、属性ペアはすべて NativeAttributesMap に格納されています。 Inheritance Object Object Appearance AppearanceTarget AppearanceTargetDefinition<T> FeatureObject LinearRing TextureCoordinates Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class Object Properties Handle セーフハンドルを取得します。 Declaration public IntPtr Handle { get; } Property Value Type Description IntPtr ID オブジェクトのユニークIDを取得します。 Declaration public string ID { get; protected set; } Property Value Type Description String NativeAttributesMap 属性の辞書を取得します。 Declaration public virtual NativeAttributesMap NativeAttributesMap { get; } Property Value Type Description NativeAttributesMap NativeAttributesMap 型で返します。"
  },
  "api/PLATEAU.CityGML.Polygon.html": {
    "href": "api/PLATEAU.CityGML.Polygon.html",
    "title": "Class Polygon | PLATEAU SDK for Unity",
    "keywords": "Class Polygon 建築物の形状におけるポリゴンです。 Vertices , Indices を保持します。 ただし、GMLファイルのパース時に を false に設定した時に限り、 Vertices, Indices の代わりに ExteriorRing , InteriorRings を保持することがあります。 Vertex と Ring を両方保持する場合もあれば、片方だけの場合もあります。 Polygon は Geometry によって保持されます。 Inheritance Object Object AppearanceTarget Polygon Inherited Members AppearanceTarget.TextureTargetDefinitionsCount AppearanceTarget.GetTextureTargetDefinition(Int32) AppearanceTarget.TextureTargetDefinitions AppearanceTarget.GetTextureTargetDefinition(String, Boolean) AppearanceTarget.TextureThemesCountOfFront(Boolean) AppearanceTarget.TextureThemeNames(Boolean) AppearanceTarget.MaterialThemesCountByFront(Boolean) AppearanceTarget.MaterialThemeNames(Boolean) AppearanceTarget.GetMaterialTargetDefinitionByThemeName(String, Boolean) Object.Handle Object.ID Object.NativeAttributesMap Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class Polygon : AppearanceTarget Properties DoHaveRings 多角形の形状情報としての LinearRing (Exterior または Interior)を持っているか Declaration public bool DoHaveRings { get; } Property Value Type Description Boolean DoHaveVertices ポリゴンとしての頂点を持っているか Declaration public bool DoHaveVertices { get; } Property Value Type Description Boolean ExteriorRing 建物の外周の形状です。 GMLファイルのパース時の設定で が true の場合、この情報は保持されません。 false の場合、 ExteriorRing , InteriorRings が保持される場合があります。 Declaration public LinearRing ExteriorRing { get; } Property Value Type Description LinearRing Indices Declaration public IEnumerable<int> Indices { get; } Property Value Type Description IEnumerable < Int32 > IndicesCount Declaration public int IndicesCount { get; } Property Value Type Description Int32 InteriorRingCount 建物の形状の多角形表現のうち、内側にある多角形の数です。 Declaration public int InteriorRingCount { get; } Property Value Type Description Int32 InteriorRings InteriorRing を foreach や Linq で回したい時に利用できます。 Declaration public IEnumerable<LinearRing> InteriorRings { get; } Property Value Type Description IEnumerable < LinearRing > VertexCount 頂点数を返します。 Declaration public int VertexCount { get; } Property Value Type Description Int32 Methods GetVertex(Int32) 頂点番号を受け取り、その頂点の座標を返します。 Declaration public PlateauVector3d GetVertex(int index) Parameters Type Name Description Int32 index Returns Type Description PlateauVector3d ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/PLATEAU.CityGML.Texture.html": {
    "href": "api/PLATEAU.CityGML.Texture.html",
    "title": "Class Texture | PLATEAU SDK for Unity",
    "keywords": "Class Texture テクスチャ情報です。 Url と TextureWrapMode を保持します。 TextureTargetDefinition によって保持されます。 Inheritance Object Object Appearance Texture Inherited Members Appearance.Type Appearance.IsFront Appearance.Themes Object.Handle Object.ID Object.NativeAttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class Texture : Appearance Properties Url テクスチャのURLを返します。 Declaration public string Url { get; } Property Value Type Description String WrapMode Declaration public TextureWrapMode WrapMode { get; } Property Value Type Description TextureWrapMode"
  },
  "api/PLATEAU.CityGML.TextureCoordinates.html": {
    "href": "api/PLATEAU.CityGML.TextureCoordinates.html",
    "title": "Class TextureCoordinates | PLATEAU SDK for Unity",
    "keywords": "Class TextureCoordinates テクスチャのマッピングに関する情報です。 テクスチャ座標と LinearRing の頂点を紐付けます。 Inheritance Object Object TextureCoordinates Inherited Members Object.Handle Object.ID Object.NativeAttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class TextureCoordinates : Object Properties TargetLinearRingId このテクスチャマッピングの対象となる LinearRing のIDを返します。 Declaration public string TargetLinearRingId { get; } Property Value Type Description String Vec2CoordsCount 保持するテクスチャ座標の数です。 LinearRing の頂点とテクスチャ座標が1対1で対応するので、 この値は LinearRing の頂点数と同じになります。 Declaration public int Vec2CoordsCount { get; } Property Value Type Description Int32 Methods GetVec2Coord(Int32) LinearRing の index 番目の頂点に対応する テクスチャ座標を返します。 Declaration public PlateauVector2f GetVec2Coord(int index) Parameters Type Name Description Int32 index Returns Type Description PlateauVector2f IsRingTarget(LinearRing) 引数で与えられた LinearRing が このテクスチャマッピングの対象かどうか判定します。 Declaration public bool IsRingTarget(LinearRing ring) Parameters Type Name Description LinearRing ring Returns Type Description Boolean"
  },
  "api/PLATEAU.CityGML.TextureTargetDefinition.html": {
    "href": "api/PLATEAU.CityGML.TextureTargetDefinition.html",
    "title": "Class TextureTargetDefinition | PLATEAU SDK for Unity",
    "keywords": "Class TextureTargetDefinition テクスチャとテクスチャマッピングを紐付けます。 Appearance でテクスチャ情報を取得できます。 GetCoordinate(Int32) (i) で i番目のテクスチャマッピング ( TextureCoordinates ) を取得できます。 AppearanceTarget によって保持されます。 Inheritance Object Object AppearanceTargetDefinition < Texture > TextureTargetDefinition Inherited Members AppearanceTargetDefinition<Texture>.Appearance AppearanceTargetDefinition<Texture>.TargetID Object.Handle Object.ID Object.NativeAttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class TextureTargetDefinition : AppearanceTargetDefinition<Texture> Constructors TextureTargetDefinition(IntPtr) Declaration public TextureTargetDefinition(IntPtr handle) Parameters Type Name Description IntPtr handle Properties TexCoordinatesCount 保持するテクスチャマッピングの数です。 Declaration public int TexCoordinatesCount { get; } Property Value Type Description Int32 Methods GetCoordinate(Int32) index 番目のテクスチャマッピングを取得します。 Declaration public TextureCoordinates GetCoordinate(int index) Parameters Type Name Description Int32 index Returns Type Description TextureCoordinates"
  },
  "api/PLATEAU.CityGML.TextureWrapMode.html": {
    "href": "api/PLATEAU.CityGML.TextureWrapMode.html",
    "title": "Enum TextureWrapMode | PLATEAU SDK for Unity",
    "keywords": "Enum TextureWrapMode Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public enum TextureWrapMode Fields Name Description WM_Border WM_Clamp WM_Mirror WM_None WM_Wrap"
  },
  "api/PLATEAU.CityImport.AreaSelector.AreaSelectResult.html": {
    "href": "api/PLATEAU.CityImport.AreaSelector.AreaSelectResult.html",
    "title": "Class AreaSelectResult | PLATEAU SDK for Unity",
    "keywords": "Class AreaSelectResult 範囲選択画面の結果を格納するクラスです。 Inheritance Object AreaSelectResult Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityImport.AreaSelector Assembly : cs.temp.dll.dll Syntax public class AreaSelectResult Constructors AreaSelectResult(ConfigBeforeAreaSelect, MeshCodeList) Declaration public AreaSelectResult(ConfigBeforeAreaSelect confBeforeAreaSelect, MeshCodeList areaMeshCodes) Parameters Type Name Description ConfigBeforeAreaSelect confBeforeAreaSelect MeshCodeList areaMeshCodes Properties AreaMeshCodes Declaration public MeshCodeList AreaMeshCodes { get; } Property Value Type Description MeshCodeList ConfBeforeAreaSelect Declaration public ConfigBeforeAreaSelect ConfBeforeAreaSelect { get; } Property Value Type Description ConfigBeforeAreaSelect PackageToLodDict Declaration public PackageToLodDict PackageToLodDict { get; } Property Value Type Description PackageToLodDict"
  },
  "api/PLATEAU.CityImport.AreaSelector.Display.Gizmos.HandlesBase.html": {
    "href": "api/PLATEAU.CityImport.AreaSelector.Display.Gizmos.HandlesBase.html",
    "title": "Class HandlesBase | PLATEAU SDK for Unity",
    "keywords": "Class HandlesBase シーンビューにハンドルを表示する MonoBehaviour の基底クラスです。 Inheritance Object HandlesBase Namespace : PLATEAU.CityImport.AreaSelector.Display.Gizmos Assembly : cs.temp.dll.dll Syntax public abstract class HandlesBase : MonoBehaviour"
  },
  "api/PLATEAU.CityImport.AreaSelector.Display.Gizmos.html": {
    "href": "api/PLATEAU.CityImport.AreaSelector.Display.Gizmos.html",
    "title": "Namespace PLATEAU.CityImport.AreaSelector.Display.Gizmos | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.CityImport.AreaSelector.Display.Gizmos Classes HandlesBase シーンビューにハンドルを表示する MonoBehaviour の基底クラスです。"
  },
  "api/PLATEAU.CityImport.AreaSelector.Display.Gizmos.LODIcons.AreaLodController.html": {
    "href": "api/PLATEAU.CityImport.AreaSelector.Display.Gizmos.LODIcons.AreaLodController.html",
    "title": "Class AreaLodController | PLATEAU SDK for Unity",
    "keywords": "Class AreaLodController 範囲選択画面で、利用可能なLODをメッシュコードごとに検索して表示します。 構成: AreaLodController -> (所有) -> [ AreaLodSearcher , (多) AreaLodView ] Inheritance Object AreaLodController Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityImport.AreaSelector.Display.Gizmos.LODIcons Assembly : cs.temp.dll.dll Syntax public class AreaLodController Constructors AreaLodController(IDatasetSourceConfig, GeoReference, IEnumerable<MeshCode>) Declaration public AreaLodController(IDatasetSourceConfig datasetSourceConfig, GeoReference geoReference, IEnumerable<MeshCode> allMeshCodes) Parameters Type Name Description IDatasetSourceConfig datasetSourceConfig GeoReference geoReference IEnumerable < MeshCode > allMeshCodes Methods DrawSceneGUI(Camera) ビューに描画させます。 Declaration public void DrawSceneGUI(Camera camera) Parameters Type Name Description Camera camera SwitchLodIcon(Int32, Boolean) 表示するLODアイコンを切り替える Declaration public void SwitchLodIcon(int lod, bool isCheck) Parameters Type Name Description Int32 lod Boolean isCheck Update(Extent) LOD未検索のメッシュコードのうち、カメラにもっとも近いメッシュコードのLODを検索して、 範囲選択画面の地図に表示します。 ただし、すでに検索処理が動いている場合は何もしません。 Declaration public void Update(Extent cameraExtent) Parameters Type Name Description Extent cameraExtent"
  },
  "api/PLATEAU.CityImport.AreaSelector.Display.Gizmos.LODIcons.AreaLodSearcher.html": {
    "href": "api/PLATEAU.CityImport.AreaSelector.Display.Gizmos.LODIcons.AreaLodSearcher.html",
    "title": "Class AreaLodSearcher | PLATEAU SDK for Unity",
    "keywords": "Class AreaLodSearcher メッシュコード内で利用可能なLODを検索します。 AreaLodController によって保持されます。 Inheritance Object AreaLodSearcher Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityImport.AreaSelector.Display.Gizmos.LODIcons Assembly : cs.temp.dll.dll Syntax public class AreaLodSearcher Constructors AreaLodSearcher(IDatasetSourceConfig) Declaration public AreaLodSearcher(IDatasetSourceConfig datasetSourceConfig) Parameters Type Name Description IDatasetSourceConfig datasetSourceConfig Methods LoadLodsInMeshCode(String) 与えられたメッシュコードと、その上位に含まれるパッケージとLODを返します。 Declaration public PackageToLodDict LoadLodsInMeshCode(string meshCode) Parameters Type Name Description String meshCode Returns Type Description PackageToLodDict"
  },
  "api/PLATEAU.CityImport.AreaSelector.Display.Gizmos.LODIcons.AreaLodView.html": {
    "href": "api/PLATEAU.CityImport.AreaSelector.Display.Gizmos.LODIcons.AreaLodView.html",
    "title": "Class AreaLodView | PLATEAU SDK for Unity",
    "keywords": "Class AreaLodView 範囲選択画面で、メッシュコードごとに利用可能なLODを表示します。 AreaLodController によって保持されます。 Inheritance Object AreaLodView Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityImport.AreaSelector.Display.Gizmos.LODIcons Assembly : cs.temp.dll.dll Syntax public class AreaLodView Constructors AreaLodView(PackageToLodDict, Vector3, Vector3) Declaration public AreaLodView(PackageToLodDict packageToLodDict, Vector3 meshCodeUnityPositionUpperLeft, Vector3 meshCodeUnityPositionLowerRight) Parameters Type Name Description PackageToLodDict packageToLodDict Vector3 meshCodeUnityPositionUpperLeft Vector3 meshCodeUnityPositionLowerRight Methods CalculateLodViewParam(Camera, ICollection<Int32>) Declaration public void CalculateLodViewParam(Camera camera, ICollection<int> showLods) Parameters Type Name Description Camera camera ICollection < Int32 > showLods DrawHandles(Camera, HashSet<Int32>) Declaration public void DrawHandles(Camera camera, HashSet<int> showLods) Parameters Type Name Description Camera camera HashSet < Int32 > showLods HasIconOfPackage(PredefinedCityModelPackage) このパッケージの利用可能LODを地図上で表示するかどうかを返します。 Declaration public static bool HasIconOfPackage(PredefinedCityModelPackage package) Parameters Type Name Description PredefinedCityModelPackage package Returns Type Description Boolean Init() 地図上に利用可能LODを表示するためのアイコンをロードします。 Declaration public static void Init()"
  },
  "api/PLATEAU.CityImport.AreaSelector.Display.Gizmos.LODIcons.html": {
    "href": "api/PLATEAU.CityImport.AreaSelector.Display.Gizmos.LODIcons.html",
    "title": "Namespace PLATEAU.CityImport.AreaSelector.Display.Gizmos.LODIcons | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.CityImport.AreaSelector.Display.Gizmos.LODIcons Classes AreaLodController 範囲選択画面で、利用可能なLODをメッシュコードごとに検索して表示します。 構成: AreaLodController -> (所有) -> [ AreaLodSearcher , (多) AreaLodView ] AreaLodSearcher メッシュコード内で利用可能なLODを検索します。 AreaLodController によって保持されます。 AreaLodView 範囲選択画面で、メッシュコードごとに利用可能なLODを表示します。 AreaLodController によって保持されます。"
  },
  "api/PLATEAU.CityImport.AreaSelector.Display.Maps.GSIMapLoader.html": {
    "href": "api/PLATEAU.CityImport.AreaSelector.Display.Maps.GSIMapLoader.html",
    "title": "Class GSIMapLoader | PLATEAU SDK for Unity",
    "keywords": "Class GSIMapLoader 地理院地図タイルをダウンロードしてシーンに配置します。 Inheritance Object GSIMapLoader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityImport.AreaSelector.Display.Maps Assembly : cs.temp.dll.dll Syntax public static class GSIMapLoader Fields MapRootObjName Declaration public const string MapRootObjName = \"Basemap\" Field Value Type Description String Methods DownloadAndPlaceAsync(Extent, GeoReference, Int32, CancellationToken) 地理院地図タイルをダウンロードして、シーンに配置します。 メインスレッドで呼ぶ必要があります。 Declaration public static async Task<List<Material>> DownloadAndPlaceAsync(Extent extent, GeoReference geoReference, int zoomLevel, CancellationToken cancel) Parameters Type Name Description Extent extent GeoReference geoReference Int32 zoomLevel CancellationToken cancel Returns Type Description Task < List < Material >> 生成したマテリアルのリストを返します。このマテリアルはメソッドの利用者が利用終了時に廃棄してください。"
  },
  "api/PLATEAU.CityImport.AreaSelector.Display.Maps.GSIMapLoaderZoomSwitch.html": {
    "href": "api/PLATEAU.CityImport.AreaSelector.Display.Maps.GSIMapLoaderZoomSwitch.html",
    "title": "Class GSIMapLoaderZoomSwitch | PLATEAU SDK for Unity",
    "keywords": "Class GSIMapLoaderZoomSwitch GSIMapLoader に次の機能を追加したものです: ・カメラの位置によってズームレベル（地図の詳細度）を切り替えて表示します Inheritance Object GSIMapLoaderZoomSwitch Namespace : PLATEAU.CityImport.AreaSelector.Display.Maps Assembly : cs.temp.dll.dll Syntax public class GSIMapLoaderZoomSwitch : IDisposable Constructors GSIMapLoaderZoomSwitch(GeoReference, Extent) Declaration public GSIMapLoaderZoomSwitch(GeoReference geoReference, Extent entireExtent) Parameters Type Name Description GeoReference geoReference Extent entireExtent Methods CalcCameraExtent(Camera, GeoReference) Declaration public static Extent CalcCameraExtent(Camera cam, GeoReference geoRef) Parameters Type Name Description Camera cam GeoReference geoRef Returns Type Description Extent Dispose() Declaration public void Dispose() Update(Camera) Declaration public void Update(Camera cam) Parameters Type Name Description Camera cam"
  },
  "api/PLATEAU.CityImport.AreaSelector.Display.Maps.html": {
    "href": "api/PLATEAU.CityImport.AreaSelector.Display.Maps.html",
    "title": "Namespace PLATEAU.CityImport.AreaSelector.Display.Maps | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.CityImport.AreaSelector.Display.Maps Classes GSIMapLoader 地理院地図タイルをダウンロードしてシーンに配置します。 GSIMapLoaderZoomSwitch GSIMapLoader に次の機能を追加したものです: ・カメラの位置によってズームレベル（地図の詳細度）を切り替えて表示します"
  },
  "api/PLATEAU.CityImport.AreaSelector.html": {
    "href": "api/PLATEAU.CityImport.AreaSelector.html",
    "title": "Namespace PLATEAU.CityImport.AreaSelector | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.CityImport.AreaSelector Classes AreaSelectResult 範囲選択画面の結果を格納するクラスです。"
  },
  "api/PLATEAU.CityImport.Config.CityImportConfig.html": {
    "href": "api/PLATEAU.CityImport.Config.CityImportConfig.html",
    "title": "Class CityImportConfig | PLATEAU SDK for Unity",
    "keywords": "Class CityImportConfig 都市インポートの設定です。 インポート画面の設定GUIでユーザーはこの設定値を書き換えていくことになります。 パッケージごとのインポート設定については PackageImportConfigDict を参照してください。 設定GUIについてはCityAddGUIおよびCityLoadConfigGUIを参照してください。 Inheritance Object CityImportConfig Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityImport.Config Assembly : cs.temp.dll.dll Syntax public class CityImportConfig Properties AreaMeshCodes 範囲選択で選択された範囲です。 Declaration public MeshCodeList AreaMeshCodes { get; } Property Value Type Description MeshCodeList ConfBeforeAreaSelect Declaration public ConfigBeforeAreaSelect ConfBeforeAreaSelect { get; set; } Property Value Type Description ConfigBeforeAreaSelect PackageImportConfigDict 都市モデル読み込みの、パッケージ種ごとの設定です。 Declaration public PackageImportConfigDict PackageImportConfigDict { get; } Property Value Type Description PackageImportConfigDict ReferencePoint 基準点です。 ユーザーが選択した直交座標系の原点から、何メートルの地点を3Dモデルの原点とするかです。 Declaration public PlateauVector3d ReferencePoint { get; set; } Property Value Type Description PlateauVector3d Methods CreateDefault() デフォルト設定の CityImportConfig を作ります。 Declaration public static CityImportConfig CreateDefault() Returns Type Description CityImportConfig CreateWithAreaSelectResult(AreaSelectResult) 範囲選択画面の結果から設定値を作ります。 ユーザーがGUIでインポート設定する場合： ここで設定する値は、範囲選択後にインポート設定GUIで表示される初期値となります。 このあと、ユーザーのGUI操作によって設定値を書き換えていくことになります。 Declaration public static CityImportConfig CreateWithAreaSelectResult(AreaSelectResult result) Parameters Type Name Description AreaSelectResult result Returns Type Description CityImportConfig GetConfigForPackage(PredefinedCityModelPackage) Declaration public PackageImportConfig GetConfigForPackage(PredefinedCityModelPackage package) Parameters Type Name Description PredefinedCityModelPackage package Returns Type Description PackageImportConfig SearchMatchingGMLList(Nullable<CancellationToken>) 設定に合うGMLファイルを検索します。 多数のファイルから検索するので、実行時間が長くなりがちである点にご注意ください。 Declaration public List<GmlFile> SearchMatchingGMLList(CancellationToken? token) Parameters Type Name Description Nullable < CancellationToken > token Returns Type Description List < GmlFile > 検索にヒットしたGMLのリストです。"
  },
  "api/PLATEAU.CityImport.Config.ConfigBeforeAreaSelect.html": {
    "href": "api/PLATEAU.CityImport.Config.ConfigBeforeAreaSelect.html",
    "title": "Class ConfigBeforeAreaSelect | PLATEAU SDK for Unity",
    "keywords": "Class ConfigBeforeAreaSelect インポート設定のうち、範囲選択より前に行う部分です。 Inheritance Object ConfigBeforeAreaSelect Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityImport.Config Assembly : cs.temp.dll.dll Syntax public class ConfigBeforeAreaSelect Constructors ConfigBeforeAreaSelect() Declaration public ConfigBeforeAreaSelect() ConfigBeforeAreaSelect(IDatasetSourceConfig, Int32) ローカルかサーバーかは、 の型によって処理が分かれます。 Declaration public ConfigBeforeAreaSelect(IDatasetSourceConfig datasetSourceConfig, int coordinateZoneID) Parameters Type Name Description IDatasetSourceConfig datasetSourceConfig Int32 coordinateZoneID Properties CoordinateZoneID 平面直角座標系の番号です。 次のサイトで示される平面直角座標系の番号です。 https://www.gsi.go.jp/sokuchikijun/jpc.html Declaration public int CoordinateZoneID { get; set; } Property Value Type Description Int32 DatasetSourceConfig 都市モデル読み込み元に関する設定です。 Declaration public IDatasetSourceConfig DatasetSourceConfig { get; set; } Property Value Type Description IDatasetSourceConfig"
  },
  "api/PLATEAU.CityImport.Config.html": {
    "href": "api/PLATEAU.CityImport.Config.html",
    "title": "Namespace PLATEAU.CityImport.Config | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.CityImport.Config Classes CityImportConfig 都市インポートの設定です。 インポート画面の設定GUIでユーザーはこの設定値を書き換えていくことになります。 パッケージごとのインポート設定については PackageImportConfigDict を参照してください。 設定GUIについてはCityAddGUIおよびCityLoadConfigGUIを参照してください。 ConfigBeforeAreaSelect インポート設定のうち、範囲選択より前に行う部分です。 MeshCodeList メッシュコードのリストによって範囲を表現したクラスです。"
  },
  "api/PLATEAU.CityImport.Config.MeshCodeList.html": {
    "href": "api/PLATEAU.CityImport.Config.MeshCodeList.html",
    "title": "Class MeshCodeList | PLATEAU SDK for Unity",
    "keywords": "Class MeshCodeList メッシュコードのリストによって範囲を表現したクラスです。 Inheritance Object MeshCodeList Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityImport.Config Assembly : cs.temp.dll.dll Syntax public class MeshCodeList Properties Count メッシュコードの数を返します。 Declaration public int Count { get; } Property Value Type Description Int32 Data Declaration public List<MeshCode> Data { get; } Property Value Type Description List < MeshCode > Methods At(Int32) インデックス指定でメッシュコードを取得します。 Declaration public MeshCode At(int index) Parameters Type Name Description Int32 index Returns Type Description MeshCode CalcAvailablePackageLodInMeshCodes(IDatasetSourceConfig) データセットのうち範囲を取り出したとき、利用可能なパッケージとそのLODを求めます。 Declaration public PackageToLodDict CalcAvailablePackageLodInMeshCodes(IDatasetSourceConfig datasetSourceConfig) Parameters Type Name Description IDatasetSourceConfig datasetSourceConfig Returns Type Description PackageToLodDict CreateFromMeshCodesStr(IEnumerable<String>) メッシュコード番号の文字列としての配列から範囲を生成します。 Declaration public static MeshCodeList CreateFromMeshCodesStr(IEnumerable<string> meshCodesStr) Parameters Type Name Description IEnumerable < String > meshCodesStr Returns Type Description MeshCodeList ExtentCenter(Int32) 範囲の中心を返します。 これは基準点設定GUIに表示される初期値であり、ユーザーが「範囲の中心を入力」ボタンを押したときに設定される値でもあります。 Declaration public PlateauVector3d ExtentCenter(int coordinateZoneID) Parameters Type Name Description Int32 coordinateZoneID Returns Type Description PlateauVector3d"
  },
  "api/PLATEAU.CityImport.Config.PackageImportConfigs.html": {
    "href": "api/PLATEAU.CityImport.Config.PackageImportConfigs.html",
    "title": "Namespace PLATEAU.CityImport.Config.PackageImportConfigs | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.CityImport.Config.PackageImportConfigs Classes PackageImportConfig PLATEAUCityModelLoader の設定のうち、パッケージごとの設定です。 PackageImportConfigDict によって保持されます。 このクラスに対応するGUIクラスは PackageLoadConfigGUI です。 設定のうち、一括設定可能な部分は PackageImportConfigExtendable が担います。 実装上の注意： ・特定のパッケージ種で追加の設定項目がある場合はサブクラスで実装します。 ・この設定項目を追加・削除する場合、 ConvertToNativeOption(PlateauVector3d, Int32) も合わせて実装しないと反映されないことに注意してください。 PackageImportConfigDict 都市インポートの設定のうち、パッケージごとのインポート設定をまとめたクラスです。 参照: 具体的な設定については PackageImportConfig を参照してください。 GUIについては PackageLoadConfigGUIList を参照してください。 PackageImportConfigExtendable PackageImportConfig のうち、一括設定から設定を引き継ぐことが可能な部分の設定値クラスです。 PackageToLodDict パッケージとそこに含まれる最大LODの組です。 Structs LODRange Enums TexturePackingResolution テクスチャ結合後の解像度です。"
  },
  "api/PLATEAU.CityImport.Config.PackageImportConfigs.LODRange.html": {
    "href": "api/PLATEAU.CityImport.Config.PackageImportConfigs.LODRange.html",
    "title": "Struct LODRange | PLATEAU SDK for Unity",
    "keywords": "Struct LODRange Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.CityImport.Config.PackageImportConfigs Assembly : cs.temp.dll.dll Syntax public struct LODRange Constructors LODRange(Int32, Int32, Int32) Declaration public LODRange(int minLOD, int maxLOD, int availableMaxLOD) Parameters Type Name Description Int32 minLOD Int32 maxLOD Int32 availableMaxLOD Properties AvailableMaxLOD ユーザーが選択したデータのなかで存在するLODの最大値 Declaration public readonly int AvailableMaxLOD { get; } Property Value Type Description Int32 MaxLOD ユーザーが選択したLODの上限 Declaration public readonly int MaxLOD { get; } Property Value Type Description Int32 MinLOD ユーザーが選択したLOD範囲の下限 Declaration public readonly int MinLOD { get; } Property Value Type Description Int32"
  },
  "api/PLATEAU.CityImport.Config.PackageImportConfigs.PackageImportConfig.html": {
    "href": "api/PLATEAU.CityImport.Config.PackageImportConfigs.PackageImportConfig.html",
    "title": "Class PackageImportConfig | PLATEAU SDK for Unity",
    "keywords": "Class PackageImportConfig PLATEAUCityModelLoader の設定のうち、パッケージごとの設定です。 PackageImportConfigDict によって保持されます。 このクラスに対応するGUIクラスは PackageLoadConfigGUI です。 設定のうち、一括設定可能な部分は PackageImportConfigExtendable が担います。 実装上の注意： ・特定のパッケージ種で追加の設定項目がある場合はサブクラスで実装します。 ・この設定項目を追加・削除する場合、 ConvertToNativeOption(PlateauVector3d, Int32) も合わせて実装しないと反映されないことに注意してください。 Inheritance Object PackageImportConfig Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityImport.Config.PackageImportConfigs Assembly : cs.temp.dll.dll Syntax public class PackageImportConfig Constructors PackageImportConfig(PackageImportConfig) コピーコンストラクタ Declaration protected PackageImportConfig(PackageImportConfig src) Parameters Type Name Description PackageImportConfig src Fields MeshAxes Declaration public const CoordinateSystem MeshAxes = null Field Value Type Description CoordinateSystem UnitScale Declaration public const float UnitScale = 1F Field Value Type Description Single Properties ConfExtendable Declaration public PackageImportConfigExtendable ConfExtendable { get; } Property Value Type Description PackageImportConfigExtendable DoSetAttrInfo Declaration public bool DoSetAttrInfo { get; set; } Property Value Type Description Boolean DoSetMeshCollider Declaration public bool DoSetMeshCollider { get; set; } Property Value Type Description Boolean EnableTexturePacking Declaration public bool EnableTexturePacking { get; set; } Property Value Type Description Boolean FallbackMaterial Declaration public Material FallbackMaterial { get; set; } Property Value Type Description Material ImportPackage Declaration public bool ImportPackage { get; set; } Property Value Type Description Boolean IncludeTexture Declaration public bool IncludeTexture { get; set; } Property Value Type Description Boolean LODRange Declaration public LODRange LODRange { get; set; } Property Value Type Description LODRange MeshGranularity Declaration public MeshGranularity MeshGranularity { get; set; } Property Value Type Description MeshGranularity Package Declaration public PredefinedCityModelPackage Package { get; } Property Value Type Description PredefinedCityModelPackage TexturePackingResolution Declaration public TexturePackingResolution TexturePackingResolution { get; set; } Property Value Type Description TexturePackingResolution Methods ConvertToNativeOption(PlateauVector3d, Int32) インポート設定について、C++のstructに変換します。 Declaration public virtual MeshExtractOptions ConvertToNativeOption(PlateauVector3d referencePoint, int coordinateZoneID) Parameters Type Name Description PlateauVector3d referencePoint Int32 coordinateZoneID Returns Type Description MeshExtractOptions CreateConfigFor(PredefinedCityModelPackage, Int32) package に対応した PackageImportConfig またはそのサブクラスを返します。 具体的には、 土地以外の場合は PackageImportConfig を返します。 土地の場合は追加の設定項目があるので、 PackageImportConfig のサブクラスである PLATEAU.CityImport.Config.ReliefImportConfig を返します。 Declaration public static PackageImportConfig CreateConfigFor(PredefinedCityModelPackage package, int availableMaxLOD) Parameters Type Name Description PredefinedCityModelPackage package Int32 availableMaxLOD Returns Type Description PackageImportConfig"
  },
  "api/PLATEAU.CityImport.Config.PackageImportConfigs.PackageImportConfigDict.html": {
    "href": "api/PLATEAU.CityImport.Config.PackageImportConfigs.PackageImportConfigDict.html",
    "title": "Class PackageImportConfigDict | PLATEAU SDK for Unity",
    "keywords": "Class PackageImportConfigDict 都市インポートの設定のうち、パッケージごとのインポート設定をまとめたクラスです。 参照: 具体的な設定については PackageImportConfig を参照してください。 GUIについては PackageLoadConfigGUIList を参照してください。 Inheritance Object PackageImportConfigDict Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityImport.Config.PackageImportConfigs Assembly : cs.temp.dll.dll Syntax public class PackageImportConfigDict Constructors PackageImportConfigDict(PackageToLodDict) パッケージ種とLODの組から設定値を作ります。 Declaration public PackageImportConfigDict(PackageToLodDict dict) Parameters Type Name Description PackageToLodDict dict Properties ForEachPackagePair 値ペア (パッケージ種, そのパッケージに関する設定) を、パッケージごとの IEnumerable にして返します。 Declaration public IEnumerable<KeyValuePair<PredefinedCityModelPackage, PackageImportConfig>> ForEachPackagePair { get; } Property Value Type Description IEnumerable < KeyValuePair < PredefinedCityModelPackage , PackageImportConfig >> Methods GetConfigForPackage(PredefinedCityModelPackage) Declaration public PackageImportConfig GetConfigForPackage(PredefinedCityModelPackage package) Parameters Type Name Description PredefinedCityModelPackage package Returns Type Description PackageImportConfig PackagesToLoad() パッケージ種ごとの設定で、「ロードする」にチェックが入っているパッケージの配列を返します。 Declaration public PredefinedCityModelPackage[] PackagesToLoad() Returns Type Description PredefinedCityModelPackage []"
  },
  "api/PLATEAU.CityImport.Config.PackageImportConfigs.PackageImportConfigExtendable.html": {
    "href": "api/PLATEAU.CityImport.Config.PackageImportConfigs.PackageImportConfigExtendable.html",
    "title": "Class PackageImportConfigExtendable | PLATEAU SDK for Unity",
    "keywords": "Class PackageImportConfigExtendable PackageImportConfig のうち、一括設定から設定を引き継ぐことが可能な部分の設定値クラスです。 Inheritance Object PackageImportConfigExtendable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityImport.Config.PackageImportConfigs Assembly : cs.temp.dll.dll Syntax public class PackageImportConfigExtendable Constructors PackageImportConfigExtendable() Declaration public PackageImportConfigExtendable() PackageImportConfigExtendable(Boolean, MeshGranularity, Boolean, Boolean, Boolean, TexturePackingResolution) Declaration public PackageImportConfigExtendable(bool includeTexture, MeshGranularity meshGranularity, bool doSetMeshCollider, bool doSetAttrInfo, bool enableTexturePacking, TexturePackingResolution texturePackingResolution) Parameters Type Name Description Boolean includeTexture MeshGranularity meshGranularity Boolean doSetMeshCollider Boolean doSetAttrInfo Boolean enableTexturePacking TexturePackingResolution texturePackingResolution Properties DoSetAttrInfo Declaration public bool DoSetAttrInfo { get; set; } Property Value Type Description Boolean DoSetMeshCollider Declaration public bool DoSetMeshCollider { get; set; } Property Value Type Description Boolean EnableTexturePacking Declaration public bool EnableTexturePacking { get; set; } Property Value Type Description Boolean IncludeTexture Declaration public bool IncludeTexture { get; set; } Property Value Type Description Boolean MeshGranularity Declaration public MeshGranularity MeshGranularity { get; set; } Property Value Type Description MeshGranularity TexturePackingResolution Declaration public TexturePackingResolution TexturePackingResolution { get; set; } Property Value Type Description TexturePackingResolution Methods CopyFrom(PackageImportConfigExtendable) Declaration public void CopyFrom(PackageImportConfigExtendable other) Parameters Type Name Description PackageImportConfigExtendable other GetTexturePackingResolution() Declaration public uint GetTexturePackingResolution() Returns Type Description UInt32"
  },
  "api/PLATEAU.CityImport.Config.PackageImportConfigs.PackageToLodDict.html": {
    "href": "api/PLATEAU.CityImport.Config.PackageImportConfigs.PackageToLodDict.html",
    "title": "Class PackageToLodDict | PLATEAU SDK for Unity",
    "keywords": "Class PackageToLodDict パッケージとそこに含まれる最大LODの組です。 Inheritance Object PackageToLodDict Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityImport.Config.PackageImportConfigs Assembly : cs.temp.dll.dll Syntax public class PackageToLodDict Methods AddOrUpdate(PredefinedCityModelPackage, Int32) Declaration public void AddOrUpdate(PredefinedCityModelPackage package, int maxLod) Parameters Type Name Description PredefinedCityModelPackage package Int32 maxLod Contains(PredefinedCityModelPackage) Declaration public bool Contains(PredefinedCityModelPackage package) Parameters Type Name Description PredefinedCityModelPackage package Returns Type Description Boolean GetEnumerator() Declaration public IEnumerator<KeyValuePair<PredefinedCityModelPackage, int>> GetEnumerator() Returns Type Description IEnumerator < KeyValuePair < PredefinedCityModelPackage , Int32 >> GetLod(PredefinedCityModelPackage) 引数の package で利用可能な最大LODを返します。 ない場合は -1 を返します。 Declaration public int GetLod(PredefinedCityModelPackage package) Parameters Type Name Description PredefinedCityModelPackage package Returns Type Description Int32 MargeDict(PackageToLodDict) Declaration public void MargeDict(PackageToLodDict other) Parameters Type Name Description PackageToLodDict other MergePackage(PredefinedCityModelPackage, Int32) Declaration public void MergePackage(PredefinedCityModelPackage package, int otherLod) Parameters Type Name Description PredefinedCityModelPackage package Int32 otherLod"
  },
  "api/PLATEAU.CityImport.Config.PackageImportConfigs.TexturePackingResolution.html": {
    "href": "api/PLATEAU.CityImport.Config.PackageImportConfigs.TexturePackingResolution.html",
    "title": "Enum TexturePackingResolution | PLATEAU SDK for Unity",
    "keywords": "Enum TexturePackingResolution テクスチャ結合後の解像度です。 Namespace : PLATEAU.CityImport.Config.PackageImportConfigs Assembly : cs.temp.dll.dll Syntax public enum TexturePackingResolution Fields Name Description W2048H2048 W4096H4096 W8192H8192"
  },
  "api/PLATEAU.CityImport.Import.CityImporter.html": {
    "href": "api/PLATEAU.CityImport.Import.CityImporter.html",
    "title": "Class CityImporter | PLATEAU SDK for Unity",
    "keywords": "Class CityImporter GMLファイルに記載された都市モデルを Unity にインポートします。 Inheritance Object CityImporter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityImport.Import Assembly : cs.temp.dll.dll Syntax public static class CityImporter Methods ImportAsync(CityImportConfig, IProgressDisplay, Nullable<CancellationToken>) CityImporter クラスのメインメソッドです。 GMLファイルから都市モデルを読み、そのメッシュをUnity向けに変換してシーンに配置します。 メインスレッドで呼ぶ必要があります。 Declaration public static async Task ImportAsync(CityImportConfig config, IProgressDisplay progressDisplay, CancellationToken? token) Parameters Type Name Description CityImportConfig config IProgressDisplay progressDisplay Nullable < CancellationToken > token Returns Type Description Task"
  },
  "api/PLATEAU.CityImport.Import.Convert.GranularityConvertResult.html": {
    "href": "api/PLATEAU.CityImport.Import.Convert.GranularityConvertResult.html",
    "title": "Class GranularityConvertResult | PLATEAU SDK for Unity",
    "keywords": "Class GranularityConvertResult 粒度変換（分割結合）してシーンに配置した結果が格納されるクラスです。 Inheritance Object GranularityConvertResult Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityImport.Import.Convert Assembly : cs.temp.dll.dll Syntax public class GranularityConvertResult Properties GeneratedObjs 変換によってシーンに配置したゲームオブジェクトのリスト Declaration public List<GameObject> GeneratedObjs { get; } Property Value Type Description List < GameObject > GeneratedRootObjs 変換によってシーンに配置したゲームオブジェクトのうち、ヒエラルキーが最上位であるもののリスト Declaration public List<GameObject> GeneratedRootObjs { get; } Property Value Type Description List < GameObject > IsSucceed Declaration public bool IsSucceed { get; set; } Property Value Type Description Boolean Methods Add(GameObject, Boolean) 結果のゲームオブジェクトの一覧に追加します。 Declaration public void Add(GameObject obj, bool isRoot) Parameters Type Name Description GameObject obj Boolean isRoot Fail() Declaration public static GranularityConvertResult Fail() Returns Type Description GranularityConvertResult Merge(GranularityConvertResult) 複数の GranularityConvertResult を統合します。 Declaration public void Merge(GranularityConvertResult other) Parameters Type Name Description GranularityConvertResult other"
  },
  "api/PLATEAU.CityImport.Import.Convert.html": {
    "href": "api/PLATEAU.CityImport.Import.Convert.html",
    "title": "Namespace PLATEAU.CityImport.Import.Convert | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.CityImport.Import.Convert Classes GranularityConvertResult 粒度変換（分割結合）してシーンに配置した結果が格納されるクラスです。"
  },
  "api/PLATEAU.CityImport.Import.html": {
    "href": "api/PLATEAU.CityImport.Import.html",
    "title": "Namespace PLATEAU.CityImport.Import | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.CityImport.Import Classes CityImporter GMLファイルに記載された都市モデルを Unity にインポートします。"
  },
  "api/PLATEAU.CityInfo.CityObjectGizmoDrawer.html": {
    "href": "api/PLATEAU.CityInfo.CityObjectGizmoDrawer.html",
    "title": "Class CityObjectGizmoDrawer | PLATEAU SDK for Unity",
    "keywords": "Class CityObjectGizmoDrawer 属性情報パネル表示時にシーン上に選択中地物の情報を表示します Inheritance Object CityObjectGizmoDrawer Namespace : PLATEAU.CityInfo Assembly : cs.temp.dll.dll Syntax public class CityObjectGizmoDrawer : MonoBehaviour Methods ClearChildSelection() Declaration public void ClearChildSelection() ClearParentSelection() Declaration public void ClearParentSelection() ShowChildSelection(Transform, CityObjectIndex, String) Declaration public async Task ShowChildSelection(Transform trans, CityObjectIndex index, string id) Parameters Type Name Description Transform trans CityObjectIndex index String id Returns Type Description Task ShowParentSelection(Transform, CityObjectIndex, String) Declaration public async Task ShowParentSelection(Transform trans, CityObjectIndex index, string id) Parameters Type Name Description Transform trans CityObjectIndex index String id Returns Type Description Task"
  },
  "api/PLATEAU.CityInfo.CityObjectGroupInfoForToolkits.html": {
    "href": "api/PLATEAU.CityInfo.CityObjectGroupInfoForToolkits.html",
    "title": "Struct CityObjectGroupInfoForToolkits | PLATEAU SDK for Unity",
    "keywords": "Struct CityObjectGroupInfoForToolkits PLATEAUCityObjectGroup が保持する情報のうち、Toolkitsとの連携に必要な情報です。 Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.CityInfo Assembly : cs.temp.dll.dll Syntax public struct CityObjectGroupInfoForToolkits Constructors CityObjectGroupInfoForToolkits(Boolean, Boolean) Declaration public CityObjectGroupInfoForToolkits(bool isTextureCombined, bool isGranularityConverted) Parameters Type Name Description Boolean isTextureCombined Boolean isGranularityConverted Properties IsGranularityConverted Declaration public readonly bool IsGranularityConverted { get; } Property Value Type Description Boolean IsTextureCombined Declaration public readonly bool IsTextureCombined { get; } Property Value Type Description Boolean"
  },
  "api/PLATEAU.CityInfo.CityObjectList.Attributes.html": {
    "href": "api/PLATEAU.CityInfo.CityObjectList.Attributes.html",
    "title": "Class CityObjectList.Attributes | PLATEAU SDK for Unity",
    "keywords": "Class CityObjectList.Attributes シリアライズ可能なAttributeMapデータです。 Inheritance Object CityObjectList.Attributes Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityInfo Assembly : cs.temp.dll.dll Syntax public class Attributes Properties Count Declaration public int Count { get; } Property Value Type Description Int32 Item[String] Declaration public CityObjectList.Attributes.Value this[string key] { get; } Parameters Type Name Description String key Property Value Type Description CityObjectList.Attributes.Value Keys Declaration public IEnumerable<string> Keys { get; } Property Value Type Description IEnumerable < String > Values Declaration public IEnumerable<CityObjectList.Attributes.Value> Values { get; } Property Value Type Description IEnumerable < CityObjectList.Attributes.Value > Methods AddAttribute(String, AttributeType, Object) Declaration public void AddAttribute(string key, AttributeType type, object value) Parameters Type Name Description String key AttributeType type Object value AddAttribute(String, NativeAttributeValue) Declaration public void AddAttribute(string key, NativeAttributeValue value) Parameters Type Name Description String key NativeAttributeValue value AddAttributes(CityObjectList.Attributes) AttributesにAttributesを追加します。 すでに存在するキーは無視されます。 Declaration public void AddAttributes(CityObjectList.Attributes attrs) Parameters Type Name Description CityObjectList.Attributes attrs DebugString(Int32) Declaration public string DebugString(int indent) Parameters Type Name Description Int32 indent Returns Type Description String GetEnumerator() Declaration public IEnumerator<KeyValuePair<string, CityObjectList.Attributes.Value>> GetEnumerator() Returns Type Description IEnumerator < KeyValuePair < String , CityObjectList.Attributes.Value >> TryGetValue(String, out CityObjectList.Attributes.Value) Declaration public bool TryGetValue(string key, out CityObjectList.Attributes.Value val) Parameters Type Name Description String key CityObjectList.Attributes.Value val Returns Type Description Boolean"
  },
  "api/PLATEAU.CityInfo.CityObjectList.Attributes.Value.html": {
    "href": "api/PLATEAU.CityInfo.CityObjectList.Attributes.Value.html",
    "title": "Class CityObjectList.Attributes.Value | PLATEAU SDK for Unity",
    "keywords": "Class CityObjectList.Attributes.Value Inheritance Object CityObjectList.Attributes.Value Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityInfo Assembly : cs.temp.dll.dll Syntax public class Value Constructors Value(AttributeType, Object) Declaration public Value(AttributeType type, object value) Parameters Type Name Description AttributeType type Object value Value(NativeAttributeValue) Declaration public Value(NativeAttributeValue value) Parameters Type Name Description NativeAttributeValue value Fields AttributesMapValue Declaration public CityObjectList.Attributes AttributesMapValue Field Value Type Description CityObjectList.Attributes Properties DoubleValue Declaration public double DoubleValue { get; } Property Value Type Description Double IntValue Declaration public int IntValue { get; } Property Value Type Description Int32 StringValue Declaration public string StringValue { get; } Property Value Type Description String Type Declaration public AttributeType Type { get; } Property Value Type Description AttributeType Methods DebugString(Int32) Declaration public string DebugString(int indent) Parameters Type Name Description Int32 indent Returns Type Description String"
  },
  "api/PLATEAU.CityInfo.CityObjectList.CityObject.html": {
    "href": "api/PLATEAU.CityInfo.CityObjectList.CityObject.html",
    "title": "Class CityObjectList.CityObject | PLATEAU SDK for Unity",
    "keywords": "Class CityObjectList.CityObject Inheritance Object CityObjectList.CityObject Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityInfo Assembly : cs.temp.dll.dll Syntax public class CityObject Properties AttributesMap Declaration public CityObjectList.Attributes AttributesMap { get; } Property Value Type Description CityObjectList.Attributes Children Declaration public List<CityObjectList.CityObject> Children { get; } Property Value Type Description List < CityObjectList.CityObject > CityObjectIndex Declaration public int[] CityObjectIndex { get; set; } Property Value Type Description Int32 [] CityObjectType Declaration public CityObjectType CityObjectType { get; } Property Value Type Description CityObjectType GmlID Declaration public string GmlID { get; } Property Value Type Description String IndexInMesh Declaration public CityObjectIndex IndexInMesh { get; } Property Value Type Description CityObjectIndex type Declaration public CityObjectType type { get; } Property Value Type Description CityObjectType Methods DebugString() デバッグ用に自身の情報をstringで返します。 Declaration public virtual string DebugString() Returns Type Description String Init(String, Int32[], UInt64, CityObjectList.Attributes, List<CityObjectList.CityObject>) Declaration public CityObjectList.CityObject Init(string gmlIDArg, int[] cityObjectIndexArg, ulong cityObjectTypeArg, CityObjectList.Attributes attributesMapArg, List<CityObjectList.CityObject> childrenArg = null) Parameters Type Name Description String gmlIDArg Int32 [] cityObjectIndexArg UInt64 cityObjectTypeArg CityObjectList.Attributes attributesMapArg List < CityObjectList.CityObject > childrenArg Returns Type Description CityObjectList.CityObject"
  },
  "api/PLATEAU.CityInfo.CityObjectList.html": {
    "href": "api/PLATEAU.CityInfo.CityObjectList.html",
    "title": "Class CityObjectList | PLATEAU SDK for Unity",
    "keywords": "Class CityObjectList シリアライズ可能なCityObjectデータです。 Inheritance Object CityObjectList Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityInfo Assembly : cs.temp.dll.dll Syntax public class CityObjectList Fields outsideChildren Declaration public List<string> outsideChildren Field Value Type Description List < String > outsideParent Declaration public string outsideParent Field Value Type Description String rootCityObjects Declaration public readonly List<CityObjectList.CityObject> rootCityObjects Field Value Type Description List < CityObjectList.CityObject >"
  },
  "api/PLATEAU.CityInfo.CityObjectTypeHierarchy.html": {
    "href": "api/PLATEAU.CityInfo.CityObjectTypeHierarchy.html",
    "title": "Class CityObjectTypeHierarchy | PLATEAU SDK for Unity",
    "keywords": "Class CityObjectTypeHierarchy Inheritance Object CityObjectTypeHierarchy Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityInfo Assembly : cs.temp.dll.dll Syntax public static class CityObjectTypeHierarchy Properties RootNode 都市オブジェクトの分類を階層構造のノードで表現したものです。 ここでいう階層構造やノードとは、都市オブジェクトの分類についての上位概念・下位概念を示すものであり、実際の都市Modelデータとは異なることに注意してください。 Declaration public static CityObjectTypeHierarchy.Node RootNode { get; } Property Value Type Description CityObjectTypeHierarchy.Node Methods GetNodeByPackage(Package) Declaration public static CityObjectTypeHierarchy.Node GetNodeByPackage(Package p) Parameters Type Name Description Package p Returns Type Description CityObjectTypeHierarchy.Node GetNodeByType(COType) Declaration public static CityObjectTypeHierarchy.Node GetNodeByType(COType t) Parameters Type Name Description COType t Returns Type Description CityObjectTypeHierarchy.Node"
  },
  "api/PLATEAU.CityInfo.CityObjectTypeHierarchy.Node.html": {
    "href": "api/PLATEAU.CityInfo.CityObjectTypeHierarchy.Node.html",
    "title": "Class CityObjectTypeHierarchy.Node | PLATEAU SDK for Unity",
    "keywords": "Class CityObjectTypeHierarchy.Node Inheritance Object CityObjectTypeHierarchy.Node Namespace : PLATEAU.CityInfo Assembly : cs.temp.dll.dll Syntax public class Node : IComparable<CityObjectTypeHierarchy.Node> Constructors Node(String, PredefinedCityModelPackage, CityObjectType[], CityObjectTypeHierarchy.Node[]) Declaration public Node(string nodeName, PredefinedCityModelPackage package, CityObjectType[] types, CityObjectTypeHierarchy.Node[] children) Parameters Type Name Description String nodeName PredefinedCityModelPackage package CityObjectType [] types CityObjectTypeHierarchy.Node [] children Properties Children Declaration public ReadOnlyCollection<CityObjectTypeHierarchy.Node> Children { get; } Property Value Type Description ReadOnlyCollection < CityObjectTypeHierarchy.Node > NodeName Declaration public string NodeName { get; } Property Value Type Description String Package Declaration public PredefinedCityModelPackage Package { get; } Property Value Type Description PredefinedCityModelPackage Parent Declaration public CityObjectTypeHierarchy.Node Parent { get; } Property Value Type Description CityObjectTypeHierarchy.Node UpperPackage Nodeの親子関係を自身から上へ調べて、PackageがNoneでない初めて見つかったPackageを返します。 調べてもNoneだけならNoneを返します。 Declaration public Package UpperPackage { get; } Property Value Type Description Package Methods CompareTo(CityObjectTypeHierarchy.Node) 都市オブジェクトの種類をGUIで列挙するなどの場合に、列挙の順序を定義します。 CityObjectTypeHierarchy の深さ優先探索の順番とします。 Declaration public int CompareTo(CityObjectTypeHierarchy.Node other) Parameters Type Name Description CityObjectTypeHierarchy.Node other Returns Type Description Int32 GetDisplayName() 分類のディスプレイ名を返します。 Declaration public string GetDisplayName() Returns Type Description String"
  },
  "api/PLATEAU.CityInfo.GeoReferenceData.html": {
    "href": "api/PLATEAU.CityInfo.GeoReferenceData.html",
    "title": "Struct GeoReferenceData | PLATEAU SDK for Unity",
    "keywords": "Struct GeoReferenceData Unityでシリアライズ化して保存できるようにした のデータです。 Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.CityInfo Assembly : cs.temp.dll.dll Syntax public struct GeoReferenceData Constructors GeoReferenceData(Double, Double, Double, Single, CoordinateSystem, Int32) Declaration public GeoReferenceData(double referencePointX, double referencePointY, double referencePointZ, float unitScale, CoordinateSystem coordinateSystem, int zoneID) Parameters Type Name Description Double referencePointX Double referencePointY Double referencePointZ Single unitScale CoordinateSystem coordinateSystem Int32 zoneID Fields coordinateSystem Declaration public CoordinateSystem coordinateSystem Field Value Type Description CoordinateSystem referencePointX Declaration public double referencePointX Field Value Type Description Double referencePointY Declaration public double referencePointY Field Value Type Description Double referencePointZ Declaration public double referencePointZ Field Value Type Description Double unitScale Declaration public float unitScale Field Value Type Description Single zoneID Declaration public int zoneID Field Value Type Description Int32"
  },
  "api/PLATEAU.CityInfo.html": {
    "href": "api/PLATEAU.CityInfo.html",
    "title": "Namespace PLATEAU.CityInfo | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.CityInfo Classes CityObjectGizmoDrawer 属性情報パネル表示時にシーン上に選択中地物の情報を表示します CityObjectList シリアライズ可能なCityObjectデータです。 CityObjectList.Attributes シリアライズ可能なAttributeMapデータです。 CityObjectList.Attributes.Value CityObjectList.CityObject CityObjectTypeHierarchy CityObjectTypeHierarchy.Node PLATEAUCityGmlProxy GMLファイルから都市情報を読み込みます。 PLATEAUCityObjectGroup シリアライズ可能なCityObjectデータの管理用コンポーネントです PLATEAUInstancedCityModel GMLファイルからUnityにインポートした都市のルートGameObjectに付与されます。 Structs CityObjectGroupInfoForToolkits PLATEAUCityObjectGroup が保持する情報のうち、Toolkitsとの連携に必要な情報です。 GeoReferenceData Unityでシリアライズ化して保存できるようにした のデータです。"
  },
  "api/PLATEAU.CityInfo.PLATEAUCityGmlProxy.html": {
    "href": "api/PLATEAU.CityInfo.PLATEAUCityGmlProxy.html",
    "title": "Class PLATEAUCityGmlProxy | PLATEAU SDK for Unity",
    "keywords": "Class PLATEAUCityGmlProxy GMLファイルから都市情報を読み込みます。 Inheritance Object PLATEAUCityGmlProxy Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityInfo Assembly : cs.temp.dll.dll Syntax public class PLATEAUCityGmlProxy Methods LoadAsync(GameObject, String, String) GMLファイルをパースし、 を返します。 パースには時間がかかりますが、結果はキャッシュに入るので、2回目以降はパースはスキップされて速いです。 Declaration public static async Task<CityModel> LoadAsync(GameObject go, string rootDirName = null, string parentPathOfRootDir = null) Parameters Type Name Description GameObject go GMLファイルの名称が、与えられたゲームオブジェクトの名称であるものをパースします。 String rootDirName 都市データが入っているディレクトリのルートの名称を指定します。 省略または空文字の場合、 go .transform.parent.name になります。 String parentPathOfRootDir rootDirName の親ディレクトリのパスを指定します。 省略または空文字の場合、インポート時に自動でコピーされる場所になります。 すなわち、 Assets/StreamingAssets/.PLATEAU になります。 Returns Type Description Task < CityModel > パースした結果を返します。パース失敗時は null を返します。"
  },
  "api/PLATEAU.CityInfo.PLATEAUCityObjectGroup.html": {
    "href": "api/PLATEAU.CityInfo.PLATEAUCityObjectGroup.html",
    "title": "Class PLATEAUCityObjectGroup | PLATEAU SDK for Unity",
    "keywords": "Class PLATEAUCityObjectGroup シリアライズ可能なCityObjectデータの管理用コンポーネントです Inheritance Object PLATEAUCityObjectGroup Namespace : PLATEAU.CityInfo Assembly : cs.temp.dll.dll Syntax public class PLATEAUCityObjectGroup : MonoBehaviour Properties CityObjects Declaration public CityObjectList CityObjects { get; } Property Value Type Description CityObjectList Granularity Declaration public MeshGranularity Granularity { get; } Property Value Type Description MeshGranularity InfoForToolkits Declaration public CityObjectGroupInfoForToolkits InfoForToolkits { get; } Property Value Type Description CityObjectGroupInfoForToolkits PrimaryCityObjects Declaration public IEnumerable<CityObjectList.CityObject> PrimaryCityObjects { get; } Property Value Type Description IEnumerable < CityObjectList.CityObject > Methods GetAllCityObjects() コンポーネントが保持する CityObjectList から、 すべての を返します。 Declaration public IEnumerable<CityObjectList.CityObject> GetAllCityObjects() Returns Type Description IEnumerable < CityObjectList.CityObject > GetAtomicCityObject(RaycastHit) RaycastHitからAtomic CityObjectを取得します Declaration public CityObject GetAtomicCityObject(RaycastHit hit) Parameters Type Name Description RaycastHit hit Returns Type Description CityObject GetAtomicCityObjectAsync(RaycastHit) RaycastHitから非同期でAtomic CityObjectを取得します Declaration public async Task<CityObject> GetAtomicCityObjectAsync(RaycastHit hit) Parameters Type Name Description RaycastHit hit Returns Type Description Task < CityObject > GetCityObject(CityObjectIndex) CityObjectIndexからAtomic CityObjectを取得します Declaration public CityObject GetCityObject(CityObjectIndex index) Parameters Type Name Description CityObjectIndex index Returns Type Description CityObject GetCityObject(Vector2) 座標からAtomic CityObjectを取得します Declaration public CityObject GetCityObject(Vector2 uv) Parameters Type Name Description Vector2 uv Returns Type Description CityObject GetCityObjectAsync(CityObjectIndex) CityObjectIndexから非同期でCityObjectを取得します Declaration public async Task<CityObject> GetCityObjectAsync(CityObjectIndex index) Parameters Type Name Description CityObjectIndex index Returns Type Description Task < CityObject > GetPrimaryAndAtomicCityObjectsAsync(CityObjectIndex) CityObjectIndexから非同期でPrimary Atomic CityObjectを両方取得します Declaration public async Task<CityObject[]> GetPrimaryAndAtomicCityObjectsAsync(CityObjectIndex index) Parameters Type Name Description CityObjectIndex index Returns Type Description Task < CityObject []> GetPrimaryAndAtomicCityObjectsAsync(RaycastHit) RaycastHitから非同期でPrimary Atomic CityObjectを両方取得します Declaration public async Task<CityObject[]> GetPrimaryAndAtomicCityObjectsAsync(RaycastHit hit) Parameters Type Name Description RaycastHit hit Returns Type Description Task < CityObject []> GetPrimaryCityObject(RaycastHit) RaycastHitからPrimary CityObjectを取得します Declaration public CityObject GetPrimaryCityObject(RaycastHit hit) Parameters Type Name Description RaycastHit hit Returns Type Description CityObject GetPrimaryCityObjectAsync(RaycastHit) RaycastHitから非同期でPrimary CityObjectを取得します Declaration public async Task<CityObject> GetPrimaryCityObjectAsync(RaycastHit hit) Parameters Type Name Description RaycastHit hit Returns Type Description Task < CityObject > Init(CityObjectList, CityObjectGroupInfoForToolkits, MeshGranularity) Declaration public void Init(CityObjectList cityObjectSerializable, CityObjectGroupInfoForToolkits cogInfoForToolkits, MeshGranularity granularityArg) Parameters Type Name Description CityObjectList cityObjectSerializable CityObjectGroupInfoForToolkits cogInfoForToolkits MeshGranularity granularityArg"
  },
  "api/PLATEAU.CityInfo.PLATEAUInstancedCityModel.html": {
    "href": "api/PLATEAU.CityInfo.PLATEAUInstancedCityModel.html",
    "title": "Class PLATEAUInstancedCityModel | PLATEAU SDK for Unity",
    "keywords": "Class PLATEAUInstancedCityModel GMLファイルからUnityにインポートした都市のルートGameObjectに付与されます。 Inheritance Object PLATEAUInstancedCityModel Namespace : PLATEAU.CityInfo Assembly : cs.temp.dll.dll Syntax public class PLATEAUInstancedCityModel : MonoBehaviour Properties GeoReference 極座標と平面直角座標を変換するインスタンスです。 Declaration public GeoReference GeoReference { get; set; } Property Value Type Description GeoReference GmlTransforms ゲームオブジェクトの階層のうち、GMLファイルに対応する Transform の一覧を返します。 Declaration public Transform[] GmlTransforms { get; } Property Value Type Description Transform [] Latitude 緯度を取得します Declaration public double Latitude { get; } Property Value Type Description Double Longitude 経度を取得します Declaration public double Longitude { get; } Property Value Type Description Double Methods CopyFrom(PLATEAUInstancedCityModel) Declaration public void CopyFrom(PLATEAUInstancedCityModel src) Parameters Type Name Description PLATEAUInstancedCityModel src GetCityObjects(Transform, Int32) 引数として GMLに対応する Transform と LOD番号を受け取ります。 GMLのゲームオブジェクト階層を見て、そのLODで存在する CityObject に対応する Transform をリストで返します。 Declaration public static List<Transform> GetCityObjects(Transform gmlTransform, int lod) Parameters Type Name Description Transform gmlTransform Int32 lod Returns Type Description List < Transform > GetLods(Transform) GMLに対応する Transform を受け取り、そのゲームオブジェクト階層の子を見て 利用可能なLODの番号をリストで返します。 Declaration public static List<int> GetLods(Transform gmlTransform) Parameters Type Name Description Transform gmlTransform Returns Type Description List < Int32 > GetLodTransforms(Transform) GMLに対応する Transform を受け取り、そのゲームオブジェクト階層の子を見て 利用可能なLODに対応する Transform のリストを返します。 Declaration public static List<Transform> GetLodTransforms(Transform gmlTransform) Parameters Type Name Description Transform gmlTransform Returns Type Description List < Transform > LoadGmlAsync(Transform) GMLに対応する Transform からGMLを非同期ロードして を返します。 合致するGMLがなければ null を返します。 Declaration public async Task<CityModel> LoadGmlAsync(Transform gmlTransform) Parameters Type Name Description Transform gmlTransform Returns Type Description Task < CityModel > TryParseLodGameObjectName(String, out Int32) Declaration public static bool TryParseLodGameObjectName(string lodGameObjName, out int outLod) Parameters Type Name Description String lodGameObjName Int32 outLod Returns Type Description Boolean"
  },
  "api/PLATEAU.Dataset.CityModelPackageInfo.html": {
    "href": "api/PLATEAU.Dataset.CityModelPackageInfo.html",
    "title": "Class CityModelPackageInfo | PLATEAU SDK for Unity",
    "keywords": "Class CityModelPackageInfo 都市モデルインポート時のパッケージごとの設定です。 Inheritance Object CityModelPackageInfo Namespace : PLATEAU.Dataset Assembly : cs.temp.dll.dll Syntax public class CityModelPackageInfo : PInvokeDisposable Properties HasAppearance Declaration public bool HasAppearance { get; } Property Value Type Description Boolean MaxLOD Declaration public int MaxLOD { get; } Property Value Type Description Int32 MinLOD Declaration public int MinLOD { get; } Property Value Type Description Int32 Methods Create(Boolean, Int32, Int32) Declaration public static CityModelPackageInfo Create(bool hasAppearance, int minLOD, int maxLOD) Parameters Type Name Description Boolean hasAppearance Int32 minLOD Int32 maxLOD Returns Type Description CityModelPackageInfo DisposeNative() Declaration protected override void DisposeNative() GetPredefined(PredefinedCityModelPackage) 与えられたパッケージ種別に対して、仕様上存在する可能性のあるLODの範囲と、仕様上テクスチャが存在する可能性があるかをタプルで返します。 Declaration public static (bool hasAppearance, int minLOD, int maxLOD) GetPredefined(PredefinedCityModelPackage package) Parameters Type Name Description PredefinedCityModelPackage package Returns Type Description (T1, T2, T3) < Boolean , Int32 , Int32 >"
  },
  "api/PLATEAU.Dataset.DatasetAccessor.html": {
    "href": "api/PLATEAU.Dataset.DatasetAccessor.html",
    "title": "Class DatasetAccessor | PLATEAU SDK for Unity",
    "keywords": "Class DatasetAccessor GMLファイル群から利用可能なファイル、メッシュコード、LODを検索します。 C++の内部ではこれは基底クラスとなっており、継承によりローカル向けとサーバー向けの両方に対応しています。 このクラスのポインタ (Handle) の具体的な型がローカル向けとサーバー向けのどちらであるかは、 DatasetSource の初期化時に指定し、 Accessor でその型である DatasetAccessor を取得します。 Inheritance Object DatasetAccessor Namespace : PLATEAU.Dataset Assembly : cs.temp.dll.dll Syntax public class DatasetAccessor : PInvokeDisposable Constructors DatasetAccessor(IntPtr) handle は C++側の基底クラス (IDatasetAccessor) のポインタです。 Declaration public DatasetAccessor(IntPtr handle) Parameters Type Name Description IntPtr handle Properties MeshCodes Declaration public NativeVectorMeshCode MeshCodes { get; } Property Value Type Description NativeVectorMeshCode Packages ローカルの場合: 存在するパッケージ種をフラグ形式で返します。 サーバーの場合: したことのある に関して、 存在するパッケージ種をフラグ形式で返します。 を実行した後でないと None が返ります。 Declaration public PredefinedCityModelPackage Packages { get; } Property Value Type Description PredefinedCityModelPackage Methods CalculateCenterPoint(GeoReference) Declaration public PlateauVector3d CalculateCenterPoint(GeoReference geoReference) Parameters Type Name Description GeoReference geoReference Returns Type Description PlateauVector3d DisposeNative() Declaration protected override void DisposeNative() FeatureTypeToPackage(String) gmlのパスが \"udx/(featureType)/aaa.gml\" として、 (featureType) の部分を PredefinedCityModelPackage に変換します。 Declaration public static PredefinedCityModelPackage FeatureTypeToPackage(string featureType) Parameters Type Name Description String featureType Returns Type Description PredefinedCityModelPackage FilterByMeshCodes(IEnumerable<MeshCode>) Declaration public DatasetAccessor FilterByMeshCodes(IEnumerable<MeshCode> meshCodes) Parameters Type Name Description IEnumerable < MeshCode > meshCodes Returns Type Description DatasetAccessor GetAllGmlFiles() Declaration public NativeVectorGmlFile GetAllGmlFiles() Returns Type Description NativeVectorGmlFile GetGmlFiles(PredefinedCityModelPackage) 引数のパッケージに対応する GmlFile を取得して vector で返します。 引数のパッケージは、複数のビットを立てることで複数指定可能です。 Declaration public NativeVectorGmlFile GetGmlFiles(PredefinedCityModelPackage package) Parameters Type Name Description PredefinedCityModelPackage package Returns Type Description NativeVectorGmlFile"
  },
  "api/PLATEAU.Dataset.DatasetMetadata.html": {
    "href": "api/PLATEAU.Dataset.DatasetMetadata.html",
    "title": "Class DatasetMetadata | PLATEAU SDK for Unity",
    "keywords": "Class DatasetMetadata Inheritance Object DatasetMetadata Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Dataset Assembly : cs.temp.dll.dll Syntax public class DatasetMetadata Constructors DatasetMetadata(IntPtr) Declaration public DatasetMetadata(IntPtr ptr) Parameters Type Name Description IntPtr ptr Properties Description Declaration public string Description { get; } Property Value Type Description String FeatureTypes Declaration public string[] FeatureTypes { get; } Property Value Type Description String [] ID Declaration public string ID { get; } Property Value Type Description String PackageFlags Declaration public PredefinedCityModelPackage PackageFlags { get; } Property Value Type Description PredefinedCityModelPackage Title Declaration public string Title { get; } Property Value Type Description String Methods Create() Declaration public static DatasetMetadata Create() Returns Type Description DatasetMetadata Dispose() Declaration public void Dispose()"
  },
  "api/PLATEAU.Dataset.DatasetMetadataGroup.html": {
    "href": "api/PLATEAU.Dataset.DatasetMetadataGroup.html",
    "title": "Class DatasetMetadataGroup | PLATEAU SDK for Unity",
    "keywords": "Class DatasetMetadataGroup Inheritance Object DatasetMetadataGroup Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Dataset Assembly : cs.temp.dll.dll Syntax public class DatasetMetadataGroup Constructors DatasetMetadataGroup(IntPtr) Declaration public DatasetMetadataGroup(IntPtr ptr) Parameters Type Name Description IntPtr ptr Properties Datasets Declaration public NativeVectorDatasetMetadata Datasets { get; } Property Value Type Description NativeVectorDatasetMetadata ID Declaration public string ID { get; } Property Value Type Description String Title Declaration public string Title { get; } Property Value Type Description String Methods Create() Declaration public static DatasetMetadataGroup Create() Returns Type Description DatasetMetadataGroup Dispose() Declaration public void Dispose()"
  },
  "api/PLATEAU.Dataset.DatasetSource.html": {
    "href": "api/PLATEAU.Dataset.DatasetSource.html",
    "title": "Class DatasetSource | PLATEAU SDK for Unity",
    "keywords": "Class DatasetSource Inheritance Object DatasetSource Namespace : PLATEAU.Dataset Assembly : cs.temp.dll.dll Syntax public class DatasetSource : PInvokeDisposable Properties Accessor Declaration public DatasetAccessor Accessor { get; } Property Value Type Description DatasetAccessor Methods Create(IDatasetSourceConfig) DatasetSource を生成します。 ローカルかサーバーかは、引数の型によって判別します。 Declaration public static DatasetSource Create(IDatasetSourceConfig conf) Parameters Type Name Description IDatasetSourceConfig conf Returns Type Description DatasetSource CreateForMockServer(String) Declaration public static DatasetSource CreateForMockServer(string datasetID) Parameters Type Name Description String datasetID Returns Type Description DatasetSource DisposeNative() Declaration protected override void DisposeNative()"
  },
  "api/PLATEAU.Dataset.DatasetSourceConfigLocal.html": {
    "href": "api/PLATEAU.Dataset.DatasetSourceConfigLocal.html",
    "title": "Class DatasetSourceConfigLocal | PLATEAU SDK for Unity",
    "keywords": "Class DatasetSourceConfigLocal ローカルインポートで利用する DatasetSource の設定です。 Inheritance Object DatasetSourceConfigLocal Implements IDatasetSourceConfig Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Dataset Assembly : cs.temp.dll.dll Syntax public class DatasetSourceConfigLocal : IDatasetSourceConfig Constructors DatasetSourceConfigLocal(String) Declaration public DatasetSourceConfigLocal(string localSourcePath) Parameters Type Name Description String localSourcePath インポート元のパスです。 Properties LocalSourcePath Declaration public string LocalSourcePath { get; set; } Property Value Type Description String Implements IDatasetSourceConfig"
  },
  "api/PLATEAU.Dataset.DatasetSourceConfigRemote.html": {
    "href": "api/PLATEAU.Dataset.DatasetSourceConfigRemote.html",
    "title": "Class DatasetSourceConfigRemote | PLATEAU SDK for Unity",
    "keywords": "Class DatasetSourceConfigRemote サーバーインポートで利用する DatasetSource の設定です。 Inheritance Object DatasetSourceConfigRemote Implements IDatasetSourceConfig Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Dataset Assembly : cs.temp.dll.dll Syntax public class DatasetSourceConfigRemote : IDatasetSourceConfig Constructors DatasetSourceConfigRemote(String, String, String) Declaration public DatasetSourceConfigRemote(string serverDatasetID, string serverUrl, string serverToken) Parameters Type Name Description String serverDatasetID データセットのIDを渡します。 そのIDとは、APIサーバーにデータセットの一覧を問い合わせたときに得られるID文字列です。 String serverUrl サーバーのURLです。 String serverToken サーバー認証のトークンです。 Properties ServerDatasetID Declaration public string ServerDatasetID { get; set; } Property Value Type Description String ServerToken Declaration public string ServerToken { get; set; } Property Value Type Description String ServerUrl Declaration public string ServerUrl { get; set; } Property Value Type Description String Implements IDatasetSourceConfig"
  },
  "api/PLATEAU.Dataset.GmlFile.html": {
    "href": "api/PLATEAU.Dataset.GmlFile.html",
    "title": "Class GmlFile | PLATEAU SDK for Unity",
    "keywords": "Class GmlFile GMLファイルに関する情報を保持します。 寿命管理について: の Dispose時、中身の GmlFile も自動的に廃棄されます。 その自動廃棄が呼ばれないケースでのみ、手動で Dispose() を呼んでください。 Inheritance Object GmlFile Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Dataset Assembly : cs.temp.dll.dll Syntax public class GmlFile Constructors GmlFile(IntPtr) Declaration public GmlFile(IntPtr handle) Parameters Type Name Description IntPtr handle Properties FeatureType Declaration public string FeatureType { get; } Property Value Type Description String Handle Declaration public IntPtr Handle { get; } Property Value Type Description IntPtr MeshCode GMLファイルのメッシュコードを返します。 ただし、誤った形式のGMLファイル名である等の理由でメッシュコードを読み取れなかった場合は 戻り値の meshCode.IsValid が false になります。 Declaration public MeshCode MeshCode { get; } Property Value Type Description MeshCode Package Declaration public PredefinedCityModelPackage Package { get; } Property Value Type Description PredefinedCityModelPackage Path Declaration public string Path { get; set; } Property Value Type Description String Methods CityRootPath() 都市データのルートディレクトリ、すなわち \"udx\"フォルダの1つ上のパスを返します。 Declaration public string CityRootPath() Returns Type Description String Create(String) GMLファイルに関する情報を保持するためのインスタンスを生成します。 実際にGMLファイルを作るわけではありません。 Declaration public static GmlFile Create(string path) Parameters Type Name Description String path Returns Type Description GmlFile Dispose() Declaration public void Dispose() Fetch(String) GmlFileのパスがローカルPCを指す場合: GMLファイルとその関連ファイルをコピーします。 関連ファイルを探すために、GMLファイルの中身に対して文字列検索（テクスチャパスなどの記載を探す）が行われるため、 GMLファイルの容量が増えるほど処理時間が増えます。 GmlFileのパスが http で始まる場合: GMLファイルとその関連ファイルをダウンロードします。 Declaration public GmlFile Fetch(string destinationRootPath) Parameters Type Name Description String destinationRootPath コピー先のルートフォルダのパスです。 Returns Type Description GmlFile GetMaxLod() ローカルの場合、GMLファイルの全文を検索して対応LODの最大を求めます。 サーバーの場合、APIサーバーに問い合わせて対応LODの最大を求めます。 どちらにしても時間がかかる処理になります。 Declaration public int GetMaxLod() Returns Type Description Int32 SearchAllCodelistPathsInGml() Declaration public string[] SearchAllCodelistPathsInGml() Returns Type Description String [] SearchAllImagePathsInGml() Declaration public string[] SearchAllImagePathsInGml() Returns Type Description String []"
  },
  "api/PLATEAU.Dataset.html": {
    "href": "api/PLATEAU.Dataset.html",
    "title": "Namespace PLATEAU.Dataset | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.Dataset Classes CityModelPackageInfo 都市モデルインポート時のパッケージごとの設定です。 DatasetAccessor GMLファイル群から利用可能なファイル、メッシュコード、LODを検索します。 C++の内部ではこれは基底クラスとなっており、継承によりローカル向けとサーバー向けの両方に対応しています。 このクラスのポインタ (Handle) の具体的な型がローカル向けとサーバー向けのどちらであるかは、 DatasetSource の初期化時に指定し、 Accessor でその型である DatasetAccessor を取得します。 DatasetMetadata DatasetMetadataGroup DatasetSource DatasetSourceConfigLocal ローカルインポートで利用する DatasetSource の設定です。 DatasetSourceConfigRemote サーバーインポートで利用する DatasetSource の設定です。 GmlFile GMLファイルに関する情報を保持します。 寿命管理について: の Dispose時、中身の GmlFile も自動的に廃棄されます。 その自動廃棄が呼ばれないケースでのみ、手動で Dispose() を呼んでください。 PredefinedCityModelPackageExtension Structs MeshCode Interfaces IDatasetSourceConfig データセット設定のローカルとサーバーの違いを吸収するインターフェイスです。 Enums PredefinedCityModelPackage"
  },
  "api/PLATEAU.Dataset.IDatasetSourceConfig.html": {
    "href": "api/PLATEAU.Dataset.IDatasetSourceConfig.html",
    "title": "Interface IDatasetSourceConfig | PLATEAU SDK for Unity",
    "keywords": "Interface IDatasetSourceConfig データセット設定のローカルとサーバーの違いを吸収するインターフェイスです。 Namespace : PLATEAU.Dataset Assembly : cs.temp.dll.dll Syntax public interface IDatasetSourceConfig"
  },
  "api/PLATEAU.Dataset.MeshCode.html": {
    "href": "api/PLATEAU.Dataset.MeshCode.html",
    "title": "Struct MeshCode | PLATEAU SDK for Unity",
    "keywords": "Struct MeshCode Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.Dataset Assembly : cs.temp.dll.dll Syntax public struct MeshCode Fields Level Declaration public readonly int Level Field Value Type Description Int32 Properties Extent Declaration public readonly Extent Extent { get; } Property Value Type Description Extent IsValid Declaration public readonly bool IsValid { get; } Property Value Type Description Boolean Methods Level2() Declaration public string Level2() Returns Type Description String Level3() Declaration public string Level3() Returns Type Description String Parse(String) Declaration public static MeshCode Parse(string code) Parameters Type Name Description String code Returns Type Description MeshCode ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString()"
  },
  "api/PLATEAU.Dataset.PredefinedCityModelPackage.html": {
    "href": "api/PLATEAU.Dataset.PredefinedCityModelPackage.html",
    "title": "Enum PredefinedCityModelPackage | PLATEAU SDK for Unity",
    "keywords": "Enum PredefinedCityModelPackage Namespace : PLATEAU.Dataset Assembly : cs.temp.dll.dll Syntax public enum PredefinedCityModelPackage : uint Fields Name Description Area Bridge Building CityFurniture DisasterRisk Generic LandUse None OtherConstruction Railway Relief Road Square Track Tunnel UndergroundBuilding UndergroundFacility Unknown UrbanPlanningDecision Vegetation WaterBody Waterway"
  },
  "api/PLATEAU.Dataset.PredefinedCityModelPackageExtension.html": {
    "href": "api/PLATEAU.Dataset.PredefinedCityModelPackageExtension.html",
    "title": "Class PredefinedCityModelPackageExtension | PLATEAU SDK for Unity",
    "keywords": "Class PredefinedCityModelPackageExtension Inheritance Object PredefinedCityModelPackageExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Dataset Assembly : cs.temp.dll.dll Syntax public static class PredefinedCityModelPackageExtension Methods All() PredefinedCityModelPackage の各パッケージのビットを立てたものを返します。 Declaration public static PredefinedCityModelPackage All() Returns Type Description PredefinedCityModelPackage ToJapaneseName(PredefinedCityModelPackage) Package を日本語名にして返します。 Package として複数のフラグが立っている場合、それらの日本語名を \",\" で繋いで返します。 Declaration public static string ToJapaneseName(this PredefinedCityModelPackage package) Parameters Type Name Description PredefinedCityModelPackage package Returns Type Description String"
  },
  "api/PLATEAU.Editor.CityInfo.html": {
    "href": "api/PLATEAU.Editor.CityInfo.html",
    "title": "Namespace PLATEAU.Editor.CityInfo | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.Editor.CityInfo Classes PLATEAUCityObjectGroupEditor PLATEAUInstancedCityModelEditor"
  },
  "api/PLATEAU.Editor.CityInfo.PLATEAUCityObjectGroupEditor.html": {
    "href": "api/PLATEAU.Editor.CityInfo.PLATEAUCityObjectGroupEditor.html",
    "title": "Class PLATEAUCityObjectGroupEditor | PLATEAU SDK for Unity",
    "keywords": "Class PLATEAUCityObjectGroupEditor Inheritance Object PLATEAUCityObjectGroupEditor Namespace : PLATEAU.Editor.CityInfo Assembly : cs.temp.dll.dll Syntax public class PLATEAUCityObjectGroupEditor : UnityEditor.Editor Methods OnEnable() Declaration public void OnEnable() OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/PLATEAU.Editor.CityInfo.PLATEAUInstancedCityModelEditor.html": {
    "href": "api/PLATEAU.Editor.CityInfo.PLATEAUInstancedCityModelEditor.html",
    "title": "Class PLATEAUInstancedCityModelEditor | PLATEAU SDK for Unity",
    "keywords": "Class PLATEAUInstancedCityModelEditor Inheritance Object PLATEAUInstancedCityModelEditor Namespace : PLATEAU.Editor.CityInfo Assembly : cs.temp.dll.dll Syntax public class PLATEAUInstancedCityModelEditor : UnityEditor.Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/PLATEAU.Editor.EditorWindow.PlateauWindow.MainTabGUI.CityImportConfigGUI.html": {
    "href": "api/PLATEAU.Editor.EditorWindow.PlateauWindow.MainTabGUI.CityImportConfigGUI.html",
    "title": "Class CityImportConfigGUI | PLATEAU SDK for Unity",
    "keywords": "Class CityImportConfigGUI インポート画面の設定GUIです。 Inheritance Object CityImportConfigGUI Implements IEditorDrawable Namespace : PLATEAU.Editor.EditorWindow.PlateauWindow.MainTabGUI Assembly : cs.temp.dll.dll Syntax public class CityImportConfigGUI : IAreaSelectResultReceiver Methods CreateLocal(UnityEditor.EditorWindow) ローカルインポートの設定GUIを作ります。 Declaration public static CityImportConfigGUI CreateLocal(UnityEditor.EditorWindow parentWindow) Parameters Type Name Description UnityEditor.EditorWindow parentWindow Returns Type Description CityImportConfigGUI CreateRemote(UnityEditor.EditorWindow) サーバーインポートの設定GUIを作ります。 Declaration public static CityImportConfigGUI CreateRemote(UnityEditor.EditorWindow parentWindow) Parameters Type Name Description UnityEditor.EditorWindow parentWindow Returns Type Description CityImportConfigGUI Dispose() Declaration public void Dispose() Draw() Declaration public void Draw() ReceiveResult(AreaSelectResult) Declaration public void ReceiveResult(AreaSelectResult result) Parameters Type Name Description AreaSelectResult result Implements IEditorDrawable"
  },
  "api/PLATEAU.Editor.EditorWindow.PlateauWindow.MainTabGUI.html": {
    "href": "api/PLATEAU.Editor.EditorWindow.PlateauWindow.MainTabGUI.html",
    "title": "Namespace PLATEAU.Editor.EditorWindow.PlateauWindow.MainTabGUI | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.Editor.EditorWindow.PlateauWindow.MainTabGUI Classes CityImportConfigGUI インポート画面の設定GUIです。"
  },
  "api/PLATEAU.Editor.EditorWindow.PlateauWindow.MainTabGUI.ImportGUIParts.html": {
    "href": "api/PLATEAU.Editor.EditorWindow.PlateauWindow.MainTabGUI.ImportGUIParts.html",
    "title": "Namespace PLATEAU.Editor.EditorWindow.PlateauWindow.MainTabGUI.ImportGUIParts | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.Editor.EditorWindow.PlateauWindow.MainTabGUI.ImportGUIParts Classes ServerDatasetFetchGUI サーバーURLとトークンを指定するGUIを描画し、 そのURLに対して利用可能なデータセットを問い合わせます。 Interfaces IConfigGUIBeforeAreaSelect インポートの設定GUIにおいて、範囲選択前の設定GUIでローカルとサーバーの差異を吸収するインターフェイスです。 Enums ServerDatasetFetchGUI.LoadStatusEnum"
  },
  "api/PLATEAU.Editor.EditorWindow.PlateauWindow.MainTabGUI.ImportGUIParts.IConfigGUIBeforeAreaSelect.html": {
    "href": "api/PLATEAU.Editor.EditorWindow.PlateauWindow.MainTabGUI.ImportGUIParts.IConfigGUIBeforeAreaSelect.html",
    "title": "Interface IConfigGUIBeforeAreaSelect | PLATEAU SDK for Unity",
    "keywords": "Interface IConfigGUIBeforeAreaSelect インポートの設定GUIにおいて、範囲選択前の設定GUIでローカルとサーバーの差異を吸収するインターフェイスです。 Namespace : PLATEAU.Editor.EditorWindow.PlateauWindow.MainTabGUI.ImportGUIParts Assembly : cs.temp.dll.dll Syntax public interface IConfigGUIBeforeAreaSelect Methods Draw() Declaration ConfigBeforeAreaSelect Draw() Returns Type Description ConfigBeforeAreaSelect"
  },
  "api/PLATEAU.Editor.EditorWindow.PlateauWindow.MainTabGUI.ImportGUIParts.ServerDatasetFetchGUI.html": {
    "href": "api/PLATEAU.Editor.EditorWindow.PlateauWindow.MainTabGUI.ImportGUIParts.ServerDatasetFetchGUI.html",
    "title": "Class ServerDatasetFetchGUI | PLATEAU SDK for Unity",
    "keywords": "Class ServerDatasetFetchGUI サーバーURLとトークンを指定するGUIを描画し、 そのURLに対して利用可能なデータセットを問い合わせます。 Inheritance Object ServerDatasetFetchGUI Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Editor.EditorWindow.PlateauWindow.MainTabGUI.ImportGUIParts Assembly : cs.temp.dll.dll Syntax public class ServerDatasetFetchGUI Constructors ServerDatasetFetchGUI(UnityEditor.EditorWindow) Declaration public ServerDatasetFetchGUI(UnityEditor.EditorWindow parentWindow) Parameters Type Name Description UnityEditor.EditorWindow parentWindow Properties DatasetGroups Declaration public NativeVectorDatasetMetadataGroup DatasetGroups { get; } Property Value Type Description NativeVectorDatasetMetadataGroup LoadStatus Declaration public ServerDatasetFetchGUI.LoadStatusEnum LoadStatus { get; } Property Value Type Description ServerDatasetFetchGUI.LoadStatusEnum ServerToken Declaration public string ServerToken { get; } Property Value Type Description String ServerUrl Declaration public string ServerUrl { get; } Property Value Type Description String Methods Draw() Declaration public void Draw()"
  },
  "api/PLATEAU.Editor.EditorWindow.PlateauWindow.MainTabGUI.ImportGUIParts.ServerDatasetFetchGUI.LoadStatusEnum.html": {
    "href": "api/PLATEAU.Editor.EditorWindow.PlateauWindow.MainTabGUI.ImportGUIParts.ServerDatasetFetchGUI.LoadStatusEnum.html",
    "title": "Enum ServerDatasetFetchGUI.LoadStatusEnum | PLATEAU SDK for Unity",
    "keywords": "Enum ServerDatasetFetchGUI.LoadStatusEnum Namespace : PLATEAU.Editor.EditorWindow.PlateauWindow.MainTabGUI.ImportGUIParts Assembly : cs.temp.dll.dll Syntax public enum LoadStatusEnum Fields Name Description Failure Loading NotStarted Success"
  },
  "api/PLATEAU.Geometries.CoordinateSystem.html": {
    "href": "api/PLATEAU.Geometries.CoordinateSystem.html",
    "title": "Enum CoordinateSystem | PLATEAU SDK for Unity",
    "keywords": "Enum CoordinateSystem 各列挙子について、3つのアルファベットはXYZ軸がどの方角、方向になるかを表しています。 N,S,E,Wはそれぞれ北,南,東,西 U,Dはそれぞれ上,下 に対応します。 Namespace : PLATEAU.Geometries Assembly : cs.temp.dll.dll Syntax public enum CoordinateSystem Fields Name Description ENU PLATEAUでの座標系 ESU Unreal Engineでの座標系 EUN Unityでの座標系 WUN"
  },
  "api/PLATEAU.Geometries.CoordinateSystemExtension.html": {
    "href": "api/PLATEAU.Geometries.CoordinateSystemExtension.html",
    "title": "Class CoordinateSystemExtension | PLATEAU SDK for Unity",
    "keywords": "Class CoordinateSystemExtension Inheritance Object CoordinateSystemExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Geometries Assembly : cs.temp.dll.dll Syntax public static class CoordinateSystemExtension Methods ToNaturalLanguage(CoordinateSystem) Declaration public static string ToNaturalLanguage(this CoordinateSystem system) Parameters Type Name Description CoordinateSystem system Returns Type Description String"
  },
  "api/PLATEAU.Geometries.GeoReference.html": {
    "href": "api/PLATEAU.Geometries.GeoReference.html",
    "title": "Class GeoReference | PLATEAU SDK for Unity",
    "keywords": "Class GeoReference 極座標と平面直角座標を変換します。 また座標変換の基準を保持します。 Inheritance Object GeoReference Namespace : PLATEAU.Geometries Assembly : cs.temp.dll.dll Syntax public class GeoReference : PInvokeDisposable Properties CoordinateSystem Declaration public CoordinateSystem CoordinateSystem { get; } Property Value Type Description CoordinateSystem ReferencePoint Declaration public PlateauVector3d ReferencePoint { get; } Property Value Type Description PlateauVector3d UnitScale Declaration public float UnitScale { get; } Property Value Type Description Single ZoneID Declaration public int ZoneID { get; } Property Value Type Description Int32 ZoneIdExplanation Declaration public static string[] ZoneIdExplanation { get; } Property Value Type Description String [] Methods ConvertAxisFromENUTo(CoordinateSystem, PlateauVector3d) Declaration public static PlateauVector3d ConvertAxisFromENUTo(CoordinateSystem axis, PlateauVector3d vertex) Parameters Type Name Description CoordinateSystem axis PlateauVector3d vertex Returns Type Description PlateauVector3d ConvertAxisToENU(CoordinateSystem, PlateauVector3d) Declaration public static PlateauVector3d ConvertAxisToENU(CoordinateSystem axis, PlateauVector3d vertex) Parameters Type Name Description CoordinateSystem axis PlateauVector3d vertex Returns Type Description PlateauVector3d Create(PlateauVector3d, Single, CoordinateSystem, Int32) Declaration public static GeoReference Create(PlateauVector3d referencePoint, float unitScale, CoordinateSystem coordinateSystem, int zoneID) Parameters Type Name Description PlateauVector3d referencePoint 平面直角座標に変換したあと、この座標が原点となるように並行移動します。 Single unitScale 平面直角座標に変換したあと、拡大縮小します。 CoordinateSystem coordinateSystem 平面直角座標のX,Y,Z軸の向きを決めます。 Int32 zoneID 国土交通省告示第九号に基づく平面直角座標系の原点の番号です。 関東地方では 9 を選択すると歪みが少なくなりますが、 この値を間違えても、ぱっと見ですぐ分かるような歪みにはなりません。 詳しくはこちらを参照してください : https://www.gsi.go.jp/sokuchikijun/jpc.html Returns Type Description GeoReference DisposeNative() Declaration protected override void DisposeNative() Finalize() Declaration protected void Finalize() Project(GeoCoordinate) Declaration public PlateauVector3d Project(GeoCoordinate geoCoordinate) Parameters Type Name Description GeoCoordinate geoCoordinate Returns Type Description PlateauVector3d Unproject(PlateauVector3d) Declaration public GeoCoordinate Unproject(PlateauVector3d point) Parameters Type Name Description PlateauVector3d point Returns Type Description GeoCoordinate"
  },
  "api/PLATEAU.Geometries.html": {
    "href": "api/PLATEAU.Geometries.html",
    "title": "Namespace PLATEAU.Geometries | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.Geometries Classes CoordinateSystemExtension GeoReference 極座標と平面直角座標を変換します。 また座標変換の基準を保持します。 Enums CoordinateSystem 各列挙子について、3つのアルファベットはXYZ軸がどの方角、方向になるかを表しています。 N,S,E,Wはそれぞれ北,南,東,西 U,Dはそれぞれ上,下 に対応します。"
  },
  "api/PLATEAU.GranularityConvert.CityGranularityConverter.html": {
    "href": "api/PLATEAU.GranularityConvert.CityGranularityConverter.html",
    "title": "Class CityGranularityConverter | PLATEAU SDK for Unity",
    "keywords": "Class CityGranularityConverter オブジェクトの分割と結合を行います。 Inheritance Object CityGranularityConverter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.GranularityConvert Assembly : cs.temp.dll.dll Syntax public class CityGranularityConverter Methods ConvertAsync(GranularityConvertOptionUnity) Declaration public async Task<GranularityConvertResult> ConvertAsync(GranularityConvertOptionUnity conf) Parameters Type Name Description GranularityConvertOptionUnity conf Returns Type Description Task < GranularityConvertResult >"
  },
  "api/PLATEAU.GranularityConvert.GmlIdToSerializedCityObj.html": {
    "href": "api/PLATEAU.GranularityConvert.GmlIdToSerializedCityObj.html",
    "title": "Class GmlIdToSerializedCityObj | PLATEAU SDK for Unity",
    "keywords": "Class GmlIdToSerializedCityObj GML IDと、シリアライズ化された地物情報の辞書です。 用途：分割結合機能において、変換前の属性情報を覚えておいて変換後に適用するために利用します。 参照： CityGranularityConverter Inheritance Object GmlIdToSerializedCityObj Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.GranularityConvert Assembly : cs.temp.dll.dll Syntax public class GmlIdToSerializedCityObj Methods ComposeFrom(IEnumerable<GameObject>) 引数に含まれるGmlIDと属性情報をすべて取得して記憶したインスタンスを返します。 子の属性情報も再帰的に取得します。 Declaration public static GmlIdToSerializedCityObj ComposeFrom(IEnumerable<GameObject> srcGameObjs) Parameters Type Name Description IEnumerable < GameObject > srcGameObjs Returns Type Description GmlIdToSerializedCityObj TryGet(String, out CityObjectList.CityObject) Declaration public bool TryGet(string gmlID, out CityObjectList.CityObject outSerializedCityObj) Parameters Type Name Description String gmlID CityObjectList.CityObject outSerializedCityObj Returns Type Description Boolean"
  },
  "api/PLATEAU.GranularityConvert.GranularityConverter.html": {
    "href": "api/PLATEAU.GranularityConvert.GranularityConverter.html",
    "title": "Class GranularityConverter | PLATEAU SDK for Unity",
    "keywords": "Class GranularityConverter Inheritance Object GranularityConverter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.GranularityConvert Assembly : cs.temp.dll.dll Syntax public class GranularityConverter Methods Convert(Model, GranularityConvertOption) srcModelの粒度を変換したModelを新しく作って返します。 Declaration public Model Convert(Model srcModel, GranularityConvertOption option) Parameters Type Name Description Model srcModel GranularityConvertOption option Returns Type Description Model"
  },
  "api/PLATEAU.GranularityConvert.GranularityConvertOption.html": {
    "href": "api/PLATEAU.GranularityConvert.GranularityConvertOption.html",
    "title": "Struct GranularityConvertOption | PLATEAU SDK for Unity",
    "keywords": "Struct GranularityConvertOption Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.GranularityConvert Assembly : cs.temp.dll.dll Syntax public struct GranularityConvertOption Constructors GranularityConvertOption(MeshGranularity, Int32) Declaration public GranularityConvertOption(MeshGranularity granularity, int gridCount) Parameters Type Name Description MeshGranularity granularity Int32 gridCount Fields Granularity Declaration public MeshGranularity Granularity Field Value Type Description MeshGranularity GridCount Declaration public int GridCount Field Value Type Description Int32"
  },
  "api/PLATEAU.GranularityConvert.GranularityConvertOptionUnity.html": {
    "href": "api/PLATEAU.GranularityConvert.GranularityConvertOptionUnity.html",
    "title": "Class GranularityConvertOptionUnity | PLATEAU SDK for Unity",
    "keywords": "Class GranularityConvertOptionUnity 分割結合の設定値です。 DLL向けの設定とUnity向けの設定をまとめたものです。 Inheritance Object GranularityConvertOptionUnity Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.GranularityConvert Assembly : cs.temp.dll.dll Syntax public class GranularityConvertOptionUnity Constructors GranularityConvertOptionUnity(GranularityConvertOption, GameObject[], Boolean) Declaration public GranularityConvertOptionUnity(GranularityConvertOption nativeOption, GameObject[] srcGameObjs, bool doDestroySrcObjs) Parameters Type Name Description GranularityConvertOption nativeOption GameObject [] srcGameObjs Boolean doDestroySrcObjs Properties DoDestroySrcObjs Declaration public bool DoDestroySrcObjs { get; } Property Value Type Description Boolean NativeOption DLL向けの設定です。 Declaration public GranularityConvertOption NativeOption { get; } Property Value Type Description GranularityConvertOption SrcGameObjs Declaration public GameObject[] SrcGameObjs { get; } Property Value Type Description GameObject [] Methods IsValid() Declaration public bool IsValid() Returns Type Description Boolean"
  },
  "api/PLATEAU.GranularityConvert.html": {
    "href": "api/PLATEAU.GranularityConvert.html",
    "title": "Namespace PLATEAU.GranularityConvert | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.GranularityConvert Classes CityGranularityConverter オブジェクトの分割と結合を行います。 GmlIdToSerializedCityObj GML IDと、シリアライズ化された地物情報の辞書です。 用途：分割結合機能において、変換前の属性情報を覚えておいて変換後に適用するために利用します。 参照： CityGranularityConverter GranularityConverter GranularityConvertOptionUnity 分割結合の設定値です。 DLL向けの設定とUnity向けの設定をまとめたものです。 InstancedCityModelDict と、ゲームオブジェクト名の辞書です。 用途：分割結合機能において、変換前の都市情報を覚えておいて変換後に適用するために利用します。 参照： CityGranularityConverter SerializedCityObjectGetterFromDict TransformBFS Transformとその子を幅優先探索するクラスです。 探索で何をするかはラムダ式で渡します。 Structs GranularityConvertOption"
  },
  "api/PLATEAU.GranularityConvert.InstancedCityModelDict.html": {
    "href": "api/PLATEAU.GranularityConvert.InstancedCityModelDict.html",
    "title": "Class InstancedCityModelDict | PLATEAU SDK for Unity",
    "keywords": "Class InstancedCityModelDict と、ゲームオブジェクト名の辞書です。 用途：分割結合機能において、変換前の都市情報を覚えておいて変換後に適用するために利用します。 参照： CityGranularityConverter Inheritance Object InstancedCityModelDict Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.GranularityConvert Assembly : cs.temp.dll.dll Syntax public class InstancedCityModelDict Methods ComposeFrom(IEnumerable<GameObject>) srcGameObjs とその子に含まれる を 記憶したインスタンスを返します。 Declaration public static InstancedCityModelDict ComposeFrom(IEnumerable<GameObject> srcGameObjs) Parameters Type Name Description IEnumerable < GameObject > srcGameObjs Returns Type Description InstancedCityModelDict Restore(IEnumerable<GameObject>) 記憶した を復元します。 復元先は、 rootGameObjs とその子を探し、名前が一致した箇所で復元します。 Declaration public void Restore(IEnumerable<GameObject> rootGameObjs) Parameters Type Name Description IEnumerable < GameObject > rootGameObjs"
  },
  "api/PLATEAU.GranularityConvert.SerializedCityObjectGetterFromDict.html": {
    "href": "api/PLATEAU.GranularityConvert.SerializedCityObjectGetterFromDict.html",
    "title": "Class SerializedCityObjectGetterFromDict | PLATEAU SDK for Unity",
    "keywords": "Class SerializedCityObjectGetterFromDict Inheritance Object SerializedCityObjectGetterFromDict Namespace : PLATEAU.GranularityConvert Assembly : cs.temp.dll.dll Syntax public class SerializedCityObjectGetterFromDict : ISerializedCityObjectGetter Constructors SerializedCityObjectGetterFromDict(GmlIdToSerializedCityObj) Declaration public SerializedCityObjectGetterFromDict(GmlIdToSerializedCityObj dict) Parameters Type Name Description GmlIdToSerializedCityObj dict Methods Dispose() Declaration public void Dispose() GetByID(String, Nullable<CityObjectIndex>) Declaration public CityObjectList.CityObject GetByID(string gmlID, CityObjectIndex? _) Parameters Type Name Description String gmlID Nullable < CityObjectIndex > _ Returns Type Description CityObjectList.CityObject"
  },
  "api/PLATEAU.GranularityConvert.TransformBFS.html": {
    "href": "api/PLATEAU.GranularityConvert.TransformBFS.html",
    "title": "Class TransformBFS | PLATEAU SDK for Unity",
    "keywords": "Class TransformBFS Transformとその子を幅優先探索するクラスです。 探索で何をするかはラムダ式で渡します。 Inheritance Object TransformBFS Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.GranularityConvert Assembly : cs.temp.dll.dll Syntax public static class TransformBFS Methods Exec(IEnumerable<Transform>, Func<Transform, Boolean>) rootTransforms とその子を幅優先探索し、各Transformに対して ラムダ式 forEachTransform を実行します。 ラムダ式は、Transformを引数とし、探索を続けるかどうかをboolで返します。 ラムダ式がfalseを返した時点で探索処理を終了します。 Declaration public static void Exec(IEnumerable<Transform> rootTransforms, Func<Transform, bool> forEachTransform) Parameters Type Name Description IEnumerable < Transform > rootTransforms Func < Transform , Boolean > forEachTransform"
  },
  "api/PLATEAU.MeshWriter.FbxFileFormat.html": {
    "href": "api/PLATEAU.MeshWriter.FbxFileFormat.html",
    "title": "Enum FbxFileFormat | PLATEAU SDK for Unity",
    "keywords": "Enum FbxFileFormat Namespace : PLATEAU.MeshWriter Assembly : cs.temp.dll.dll Syntax public enum FbxFileFormat Fields Name Description Ascii Binary"
  },
  "api/PLATEAU.MeshWriter.FbxWriteOptions.html": {
    "href": "api/PLATEAU.MeshWriter.FbxWriteOptions.html",
    "title": "Struct FbxWriteOptions | PLATEAU SDK for Unity",
    "keywords": "Struct FbxWriteOptions Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.MeshWriter Assembly : cs.temp.dll.dll Syntax public struct FbxWriteOptions Constructors FbxWriteOptions(FbxFileFormat) Declaration public FbxWriteOptions(FbxFileFormat fileFormat) Parameters Type Name Description FbxFileFormat fileFormat Fields FileFormat Declaration public FbxFileFormat FileFormat Field Value Type Description FbxFileFormat"
  },
  "api/PLATEAU.MeshWriter.FbxWriter.html": {
    "href": "api/PLATEAU.MeshWriter.FbxWriter.html",
    "title": "Class FbxWriter | PLATEAU SDK for Unity",
    "keywords": "Class FbxWriter Inheritance Object FbxWriter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.MeshWriter Assembly : cs.temp.dll.dll Syntax public static class FbxWriter Methods Write(String, Model, FbxWriteOptions) Declaration public static bool Write(string fbxPath, Model model, FbxWriteOptions options) Parameters Type Name Description String fbxPath Model model FbxWriteOptions options Returns Type Description Boolean"
  },
  "api/PLATEAU.MeshWriter.GltfFileFormat.html": {
    "href": "api/PLATEAU.MeshWriter.GltfFileFormat.html",
    "title": "Enum GltfFileFormat | PLATEAU SDK for Unity",
    "keywords": "Enum GltfFileFormat Namespace : PLATEAU.MeshWriter Assembly : cs.temp.dll.dll Syntax public enum GltfFileFormat Fields Name Description GLB GLTF"
  },
  "api/PLATEAU.MeshWriter.GltfWriteOptions.html": {
    "href": "api/PLATEAU.MeshWriter.GltfWriteOptions.html",
    "title": "Struct GltfWriteOptions | PLATEAU SDK for Unity",
    "keywords": "Struct GltfWriteOptions Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.MeshWriter Assembly : cs.temp.dll.dll Syntax public struct GltfWriteOptions Constructors GltfWriteOptions(GltfFileFormat, String) Declaration public GltfWriteOptions(GltfFileFormat format, string path) Parameters Type Name Description GltfFileFormat format String path Fields GltfFileFormat Declaration public GltfFileFormat GltfFileFormat Field Value Type Description GltfFileFormat TextureDirectoryPath Declaration public string TextureDirectoryPath Field Value Type Description String"
  },
  "api/PLATEAU.MeshWriter.GltfWriter.html": {
    "href": "api/PLATEAU.MeshWriter.GltfWriter.html",
    "title": "Class GltfWriter | PLATEAU SDK for Unity",
    "keywords": "Class GltfWriter Inheritance Object GltfWriter Namespace : PLATEAU.MeshWriter Assembly : cs.temp.dll.dll Syntax public class GltfWriter : IDisposable Constructors GltfWriter() Declaration public GltfWriter() Methods Dispose() Declaration public void Dispose() Finalize() Declaration protected void Finalize() Write(String, Model, GltfWriteOptions) Declaration public bool Write(string destination, Model model, GltfWriteOptions options) Parameters Type Name Description String destination Model model GltfWriteOptions options Returns Type Description Boolean"
  },
  "api/PLATEAU.MeshWriter.html": {
    "href": "api/PLATEAU.MeshWriter.html",
    "title": "Namespace PLATEAU.MeshWriter | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.MeshWriter Classes FbxWriter GltfWriter ObjWriter Structs FbxWriteOptions GltfWriteOptions Enums FbxFileFormat GltfFileFormat"
  },
  "api/PLATEAU.MeshWriter.ObjWriter.html": {
    "href": "api/PLATEAU.MeshWriter.ObjWriter.html",
    "title": "Class ObjWriter | PLATEAU SDK for Unity",
    "keywords": "Class ObjWriter Inheritance Object ObjWriter Namespace : PLATEAU.MeshWriter Assembly : cs.temp.dll.dll Syntax public class ObjWriter : IDisposable Constructors ObjWriter() Declaration public ObjWriter() Methods Dispose() Declaration public void Dispose() Finalize() Declaration protected void Finalize() Write(String, Model) Declaration public bool Write(string destination, Model model) Parameters Type Name Description String destination Model model Returns Type Description Boolean"
  },
  "api/PLATEAU.Native.DllLogger.html": {
    "href": "api/PLATEAU.Native.DllLogger.html",
    "title": "Class DllLogger | PLATEAU SDK for Unity",
    "keywords": "Class DllLogger DLL側のログをC#側にコールバックで転送するクラスです。 C#側でログを表示するためのコールバックメソッドとログ詳細度を指定できます。 Inheritance Object DllLogger Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public class DllLogger : IDisposable Constructors DllLogger() Declaration public DllLogger() DllLogger(IntPtr) Declaration public DllLogger(IntPtr handle) Parameters Type Name Description IntPtr handle Methods Dispose() Declaration public void Dispose() Finalize() Declaration protected void Finalize() SetCallbacksToStdOut() DLLから受け取ったログメッセージを C#での標準出力に転送するよう設定します。 Declaration public void SetCallbacksToStdOut() SetLogCallbacks(LogCallbacks) DLL内でのログをコールバックによって受け取ることができるようにします。 Declaration public void SetLogCallbacks(LogCallbacks callbacks) Parameters Type Name Description LogCallbacks callbacks SetLogLevel(DllLogLevel) 指定したログレベル未満のログは無視するようにします。 Declaration public void SetLogLevel(DllLogLevel logLevel) Parameters Type Name Description DllLogLevel logLevel"
  },
  "api/PLATEAU.Native.DllLogLevel.html": {
    "href": "api/PLATEAU.Native.DllLogLevel.html",
    "title": "Enum DllLogLevel | PLATEAU SDK for Unity",
    "keywords": "Enum DllLogLevel Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public enum DllLogLevel Fields Name Description Debug Error Info Trace Warning"
  },
  "api/PLATEAU.Native.Extent.html": {
    "href": "api/PLATEAU.Native.Extent.html",
    "title": "Struct Extent | PLATEAU SDK for Unity",
    "keywords": "Struct Extent 最小点と最大点の2点で表現される範囲であり、 各点は緯度・経度・高さで表現されます。 すなわち、2つの GeoCoordinate からなる範囲表現です。 Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public struct Extent Constructors Extent(GeoCoordinate, GeoCoordinate) Declaration public Extent(GeoCoordinate min, GeoCoordinate max) Parameters Type Name Description GeoCoordinate min GeoCoordinate max Fields All Declaration public static readonly Extent All Field Value Type Description Extent Max Declaration public GeoCoordinate Max Field Value Type Description GeoCoordinate Min Declaration public GeoCoordinate Min Field Value Type Description GeoCoordinate Properties Center Declaration public readonly GeoCoordinate Center { get; } Property Value Type Description GeoCoordinate Methods Intersection(Extent, Extent, Boolean) 共通部分を返します。 なければ (-99, -99, -99), (-99, -99, -99)を返します。 高さを考慮しない場合は、ignoreHeightをtrueにします。 Declaration public static Extent Intersection(Extent op1, Extent op2, bool ignoreHeight = false) Parameters Type Name Description Extent op1 Extent op2 Boolean ignoreHeight Returns Type Description Extent Size() Declaration public GeoCoordinate Size() Returns Type Description GeoCoordinate ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString()"
  },
  "api/PLATEAU.Native.GeoCoordinate.html": {
    "href": "api/PLATEAU.Native.GeoCoordinate.html",
    "title": "Struct GeoCoordinate | PLATEAU SDK for Unity",
    "keywords": "Struct GeoCoordinate 緯度・経度・高さで表現される座標です。 Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public struct GeoCoordinate Constructors GeoCoordinate(Double, Double, Double) Declaration public GeoCoordinate(double lat, double lon, double height) Parameters Type Name Description Double lat Double lon Double height Fields Height Declaration public double Height Field Value Type Description Double Latitude Declaration public double Latitude Field Value Type Description Double Longitude Declaration public double Longitude Field Value Type Description Double Properties SqrMagnitudeLatLon 緯度、経度の値を2次元ベクトルとして見たときのベクトルの長さの2乗です。 高さは無視されます。 Declaration public readonly double SqrMagnitudeLatLon { get; } Property Value Type Description Double Methods Max(GeoCoordinate, GeoCoordinate) Declaration public static GeoCoordinate Max(GeoCoordinate op1, GeoCoordinate op2) Parameters Type Name Description GeoCoordinate op1 GeoCoordinate op2 Returns Type Description GeoCoordinate Min(GeoCoordinate, GeoCoordinate) Declaration public static GeoCoordinate Min(GeoCoordinate op1, GeoCoordinate op2) Parameters Type Name Description GeoCoordinate op1 GeoCoordinate op2 Returns Type Description GeoCoordinate ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators Addition(GeoCoordinate, GeoCoordinate) Declaration public static GeoCoordinate operator +(GeoCoordinate op1, GeoCoordinate op2) Parameters Type Name Description GeoCoordinate op1 GeoCoordinate op2 Returns Type Description GeoCoordinate Division(GeoCoordinate, Double) Declaration public static GeoCoordinate operator /(GeoCoordinate geo, double scalar) Parameters Type Name Description GeoCoordinate geo Double scalar Returns Type Description GeoCoordinate Multiply(GeoCoordinate, Double) Declaration public static GeoCoordinate operator *(GeoCoordinate geo, double scalar) Parameters Type Name Description GeoCoordinate geo Double scalar Returns Type Description GeoCoordinate Subtraction(GeoCoordinate, GeoCoordinate) Declaration public static GeoCoordinate operator -(GeoCoordinate op1, GeoCoordinate op2) Parameters Type Name Description GeoCoordinate op1 GeoCoordinate op2 Returns Type Description GeoCoordinate"
  },
  "api/PLATEAU.Native.html": {
    "href": "api/PLATEAU.Native.html",
    "title": "Namespace PLATEAU.Native | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.Native Classes DllLogger DLL側のログをC#側にコールバックで転送するクラスです。 C#側でログを表示するためのコールバックメソッドとログ詳細度を指定できます。 LogCallbacks DLL側のログをC#側でコールバックで受け取ることができますが、 その Error, Warn, Info の3つのコールバックをまとめたクラスです。 詳しくは DllLogger をご覧ください。 NativeVectorBase<T> C++側の vector を扱う基底クラスです。 自動で Dispose したいときは NativeVectorDisposableBase<T> を利用してください。 NativeVectorDatasetMetadata NativeVectorDatasetMetadataGroup NativeVectorDisposableBase<T> NativeVectorBase<T> の自動で NativeDispose する版です。 NativeVectorExtent NativeVectorGmlFile NativeVectorMeshCode PInvokeDisposable 廃棄時に Native側で delete する必要があるものの基底クラスです。 Native側で delete する処理として、 DisposeNative() がサブクラスで実装されていることを前提とします。 廃棄タイミングは GC処理時 または using(var a){} ブロックを抜ける時 または Dispose() を呼んだときです。 Structs Extent 最小点と最大点の2点で表現される範囲であり、 各点は緯度・経度・高さで表現されます。 すなわち、2つの GeoCoordinate からなる範囲表現です。 GeoCoordinate 緯度・経度・高さで表現される座標です。 PlateauVector2f PlateauVector3d PlateauVector3f Interfaces INativeVector<T> Enums DllLogLevel Delegates LogCallbacks.LogCallbackFuncType"
  },
  "api/PLATEAU.Native.INativeVector-1.html": {
    "href": "api/PLATEAU.Native.INativeVector-1.html",
    "title": "Interface INativeVector<T> | PLATEAU SDK for Unity",
    "keywords": "Interface INativeVector<T> Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public interface INativeVector<out T> Type Parameters Name Description T Properties Length Declaration int Length { get; } Property Value Type Description Int32 Methods At(Int32) Declaration T At(int index) Parameters Type Name Description Int32 index Returns Type Description T"
  },
  "api/PLATEAU.Native.LogCallbacks.html": {
    "href": "api/PLATEAU.Native.LogCallbacks.html",
    "title": "Class LogCallbacks | PLATEAU SDK for Unity",
    "keywords": "Class LogCallbacks DLL側のログをC#側でコールバックで受け取ることができますが、 その Error, Warn, Info の3つのコールバックをまとめたクラスです。 詳しくは DllLogger をご覧ください。 Inheritance Object LogCallbacks Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public class LogCallbacks Constructors LogCallbacks(LogCallbacks.LogCallbackFuncType, LogCallbacks.LogCallbackFuncType, LogCallbacks.LogCallbackFuncType) Declaration public LogCallbacks(LogCallbacks.LogCallbackFuncType logError, LogCallbacks.LogCallbackFuncType logWarn, LogCallbacks.LogCallbackFuncType logInfo) Parameters Type Name Description LogCallbacks.LogCallbackFuncType logError LogCallbacks.LogCallbackFuncType logWarn LogCallbacks.LogCallbackFuncType logInfo Fields StdOut DLLのログをC#の標準出力に転送するよう設定されたコールバックメソッドです。 Declaration public static readonly LogCallbacks StdOut Field Value Type Description LogCallbacks Properties LogError Declaration public LogCallbacks.LogCallbackFuncType LogError { get; set; } Property Value Type Description LogCallbacks.LogCallbackFuncType LogErrorFuncPtr Declaration public IntPtr LogErrorFuncPtr { get; } Property Value Type Description IntPtr LogInfo Declaration public LogCallbacks.LogCallbackFuncType LogInfo { get; set; } Property Value Type Description LogCallbacks.LogCallbackFuncType LogInfoFuncPtr Declaration public IntPtr LogInfoFuncPtr { get; } Property Value Type Description IntPtr LogWarn Declaration public LogCallbacks.LogCallbackFuncType LogWarn { get; set; } Property Value Type Description LogCallbacks.LogCallbackFuncType LogWarnFuncPtr Declaration public IntPtr LogWarnFuncPtr { get; } Property Value Type Description IntPtr"
  },
  "api/PLATEAU.Native.LogCallbacks.LogCallbackFuncType.html": {
    "href": "api/PLATEAU.Native.LogCallbacks.LogCallbackFuncType.html",
    "title": "Delegate LogCallbacks.LogCallbackFuncType | PLATEAU SDK for Unity",
    "keywords": "Delegate LogCallbacks.LogCallbackFuncType Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public delegate void LogCallbackFuncType(IntPtr textPtr); Parameters Type Name Description IntPtr textPtr"
  },
  "api/PLATEAU.Native.NativeVectorBase-1.html": {
    "href": "api/PLATEAU.Native.NativeVectorBase-1.html",
    "title": "Class NativeVectorBase<T> | PLATEAU SDK for Unity",
    "keywords": "Class NativeVectorBase<T> C++側の vector を扱う基底クラスです。 自動で Dispose したいときは NativeVectorDisposableBase<T> を利用してください。 Inheritance Object NativeVectorBase<T> NativeVectorDatasetMetadata Implements INativeVector <T> IEnumerable <T> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public abstract class NativeVectorBase<T> : INativeVector<T> Type Parameters Name Description T Constructors NativeVectorBase(IntPtr) Declaration protected NativeVectorBase(IntPtr handle) Parameters Type Name Description IntPtr handle Properties Handle Declaration protected IntPtr Handle { get; } Property Value Type Description IntPtr Length Declaration public abstract int Length { get; } Property Value Type Description Int32 Methods At(Int32) Declaration public abstract T At(int index) Parameters Type Name Description Int32 index Returns Type Description T GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> Implements INativeVector<T> IEnumerable<>"
  },
  "api/PLATEAU.Native.NativeVectorDatasetMetadata.html": {
    "href": "api/PLATEAU.Native.NativeVectorDatasetMetadata.html",
    "title": "Class NativeVectorDatasetMetadata | PLATEAU SDK for Unity",
    "keywords": "Class NativeVectorDatasetMetadata Inheritance Object NativeVectorBase < DatasetMetadata > NativeVectorDatasetMetadata Implements INativeVector < DatasetMetadata > IEnumerable < DatasetMetadata > Inherited Members NativeVectorBase<DatasetMetadata>.Handle NativeVectorBase<DatasetMetadata>.GetEnumerator() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public class NativeVectorDatasetMetadata : NativeVectorBase<DatasetMetadata>, INativeVector<DatasetMetadata> Constructors NativeVectorDatasetMetadata(IntPtr) Declaration public NativeVectorDatasetMetadata(IntPtr handle) Parameters Type Name Description IntPtr handle Properties Length Declaration public override int Length { get; } Property Value Type Description Int32 Overrides PLATEAU.Native.NativeVectorBase<DatasetMetadata>.Length Methods At(Int32) Declaration public override DatasetMetadata At(int index) Parameters Type Name Description Int32 index Returns Type Description DatasetMetadata Overrides PLATEAU.Native.NativeVectorBase<DatasetMetadata>.At(System.Int32) Create() Declaration public static NativeVectorDatasetMetadata Create() Returns Type Description NativeVectorDatasetMetadata Dispose() 取扱注意: 通常は NativeVectorDatasetMetadataGroup の廃棄時に廃棄されるので呼ぶ必要はありません。 NativeVectorDatasetMetadataGroup を介さないインスタンスのみ廃棄してください。 Declaration public void Dispose() Implements INativeVector<T> IEnumerable<>"
  },
  "api/PLATEAU.Native.NativeVectorDatasetMetadataGroup.html": {
    "href": "api/PLATEAU.Native.NativeVectorDatasetMetadataGroup.html",
    "title": "Class NativeVectorDatasetMetadataGroup | PLATEAU SDK for Unity",
    "keywords": "Class NativeVectorDatasetMetadataGroup Inheritance Object PInvokeDisposable NativeVectorDisposableBase < DatasetMetadataGroup > NativeVectorDatasetMetadataGroup Implements INativeVector < DatasetMetadataGroup > IEnumerable < DatasetMetadataGroup > Inherited Members NativeVectorDisposableBase<DatasetMetadataGroup>.GetEnumerator() PInvokeDisposable.Handle PInvokeDisposable.Dispose() PInvokeDisposable.ThrowIfDisposed() Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public class NativeVectorDatasetMetadataGroup : NativeVectorDisposableBase<DatasetMetadataGroup>, INativeVector<DatasetMetadataGroup> Properties Length Declaration public override int Length { get; } Property Value Type Description Int32 Overrides PLATEAU.Native.NativeVectorDisposableBase<DatasetMetadataGroup>.Length Methods At(Int32) Declaration public override DatasetMetadataGroup At(int index) Parameters Type Name Description Int32 index Returns Type Description DatasetMetadataGroup Overrides PLATEAU.Native.NativeVectorDisposableBase<DatasetMetadataGroup>.At(System.Int32) Create() Declaration public static NativeVectorDatasetMetadataGroup Create() Returns Type Description NativeVectorDatasetMetadataGroup DisposeNative() Declaration protected override void DisposeNative() Overrides PInvokeDisposable.DisposeNative() Implements INativeVector<T> IEnumerable<>"
  },
  "api/PLATEAU.Native.NativeVectorDisposableBase-1.html": {
    "href": "api/PLATEAU.Native.NativeVectorDisposableBase-1.html",
    "title": "Class NativeVectorDisposableBase<T> | PLATEAU SDK for Unity",
    "keywords": "Class NativeVectorDisposableBase<T> NativeVectorBase<T> の自動で NativeDispose する版です。 Inheritance Object PInvokeDisposable NativeVectorDisposableBase<T> NativeVectorDatasetMetadataGroup NativeVectorExtent NativeVectorGmlFile NativeVectorMeshCode Implements INativeVector <T> IEnumerable <T> Inherited Members PInvokeDisposable.Handle PInvokeDisposable.DisposeNative() PInvokeDisposable.Dispose() PInvokeDisposable.ThrowIfDisposed() Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public abstract class NativeVectorDisposableBase<T> : PInvokeDisposable, INativeVector<T> Type Parameters Name Description T Constructors NativeVectorDisposableBase(IntPtr) Declaration protected NativeVectorDisposableBase(IntPtr handle) Parameters Type Name Description IntPtr handle Properties Length Declaration public abstract int Length { get; } Property Value Type Description Int32 Methods At(Int32) Declaration public abstract T At(int index) Parameters Type Name Description Int32 index Returns Type Description T GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> Implements INativeVector<T> IEnumerable<>"
  },
  "api/PLATEAU.Native.NativeVectorExtent.html": {
    "href": "api/PLATEAU.Native.NativeVectorExtent.html",
    "title": "Class NativeVectorExtent | PLATEAU SDK for Unity",
    "keywords": "Class NativeVectorExtent Inheritance Object PInvokeDisposable NativeVectorDisposableBase < Extent > NativeVectorExtent Implements INativeVector < Extent > IEnumerable < Extent > Inherited Members NativeVectorDisposableBase<Extent>.GetEnumerator() PInvokeDisposable.Handle PInvokeDisposable.Dispose() PInvokeDisposable.ThrowIfDisposed() Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public class NativeVectorExtent : NativeVectorDisposableBase<Extent>, INativeVector<Extent> Properties Length Declaration public override int Length { get; } Property Value Type Description Int32 Overrides PLATEAU.Native.NativeVectorDisposableBase<PLATEAU.Native.Extent>.Length Methods Add(Extent) Declaration public void Add(Extent extent) Parameters Type Name Description Extent extent At(Int32) Declaration public override Extent At(int index) Parameters Type Name Description Int32 index Returns Type Description Extent Overrides PLATEAU.Native.NativeVectorDisposableBase<PLATEAU.Native.Extent>.At(System.Int32) Create() Declaration public static NativeVectorExtent Create() Returns Type Description NativeVectorExtent DisposeNative() Declaration protected override void DisposeNative() Overrides PInvokeDisposable.DisposeNative() Implements INativeVector<T> IEnumerable<>"
  },
  "api/PLATEAU.Native.NativeVectorGmlFile.html": {
    "href": "api/PLATEAU.Native.NativeVectorGmlFile.html",
    "title": "Class NativeVectorGmlFile | PLATEAU SDK for Unity",
    "keywords": "Class NativeVectorGmlFile Inheritance Object PInvokeDisposable NativeVectorDisposableBase < GmlFile > NativeVectorGmlFile Implements INativeVector < GmlFile > IEnumerable < GmlFile > Inherited Members NativeVectorDisposableBase<GmlFile>.GetEnumerator() PInvokeDisposable.Handle PInvokeDisposable.Dispose() PInvokeDisposable.ThrowIfDisposed() Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public class NativeVectorGmlFile : NativeVectorDisposableBase<GmlFile>, INativeVector<GmlFile> Properties Length Declaration public override int Length { get; } Property Value Type Description Int32 Overrides PLATEAU.Native.NativeVectorDisposableBase<GmlFile>.Length Methods AddCopyOf(NativeVectorGmlFile) Declaration public void AddCopyOf(NativeVectorGmlFile other) Parameters Type Name Description NativeVectorGmlFile other At(Int32) Declaration public override GmlFile At(int index) Parameters Type Name Description Int32 index Returns Type Description GmlFile Overrides PLATEAU.Native.NativeVectorDisposableBase<GmlFile>.At(System.Int32) Create() Declaration public static NativeVectorGmlFile Create() Returns Type Description NativeVectorGmlFile DisposeNative() Declaration protected override void DisposeNative() Overrides PInvokeDisposable.DisposeNative() Implements INativeVector<T> IEnumerable<>"
  },
  "api/PLATEAU.Native.NativeVectorMeshCode.html": {
    "href": "api/PLATEAU.Native.NativeVectorMeshCode.html",
    "title": "Class NativeVectorMeshCode | PLATEAU SDK for Unity",
    "keywords": "Class NativeVectorMeshCode Inheritance Object PInvokeDisposable NativeVectorDisposableBase < MeshCode > NativeVectorMeshCode Implements INativeVector < MeshCode > IEnumerable < MeshCode > Inherited Members NativeVectorDisposableBase<MeshCode>.GetEnumerator() PInvokeDisposable.Handle PInvokeDisposable.Dispose() PInvokeDisposable.ThrowIfDisposed() Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public class NativeVectorMeshCode : NativeVectorDisposableBase<MeshCode>, INativeVector<MeshCode> Properties Length Declaration public override int Length { get; } Property Value Type Description Int32 Overrides PLATEAU.Native.NativeVectorDisposableBase<MeshCode>.Length Methods Add(MeshCode) Declaration public void Add(MeshCode meshCode) Parameters Type Name Description MeshCode meshCode At(Int32) Declaration public override MeshCode At(int index) Parameters Type Name Description Int32 index Returns Type Description MeshCode Overrides PLATEAU.Native.NativeVectorDisposableBase<MeshCode>.At(System.Int32) Create() Declaration public static NativeVectorMeshCode Create() Returns Type Description NativeVectorMeshCode DisposeNative() Declaration protected override void DisposeNative() Overrides PInvokeDisposable.DisposeNative() Implements INativeVector<T> IEnumerable<>"
  },
  "api/PLATEAU.Native.PInvokeDisposable.html": {
    "href": "api/PLATEAU.Native.PInvokeDisposable.html",
    "title": "Class PInvokeDisposable | PLATEAU SDK for Unity",
    "keywords": "Class PInvokeDisposable 廃棄時に Native側で delete する必要があるものの基底クラスです。 Native側で delete する処理として、 DisposeNative() がサブクラスで実装されていることを前提とします。 廃棄タイミングは GC処理時 または using(var a){} ブロックを抜ける時 または Dispose() を呼んだときです。 Inheritance Object PInvokeDisposable NativeVectorDisposableBase<T> Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public abstract class PInvokeDisposable : IDisposable Constructors PInvokeDisposable(IntPtr) Declaration protected PInvokeDisposable(IntPtr handle) Parameters Type Name Description IntPtr handle Properties Handle Declaration public IntPtr Handle { get; } Property Value Type Description IntPtr Methods Dispose() Declaration public void Dispose() DisposeNative() Declaration protected abstract void DisposeNative() Finalize() Declaration protected void Finalize() ThrowIfDisposed() Declaration protected void ThrowIfDisposed()"
  },
  "api/PLATEAU.Native.PlateauVector2f.html": {
    "href": "api/PLATEAU.Native.PlateauVector2f.html",
    "title": "Struct PlateauVector2f | PLATEAU SDK for Unity",
    "keywords": "Struct PlateauVector2f Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public struct PlateauVector2f Constructors PlateauVector2f(Single, Single) Declaration public PlateauVector2f(float x, float y) Parameters Type Name Description Single x Single y Fields X Declaration public float X Field Value Type Description Single Y Declaration public float Y Field Value Type Description Single Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString()"
  },
  "api/PLATEAU.Native.PlateauVector3d.html": {
    "href": "api/PLATEAU.Native.PlateauVector3d.html",
    "title": "Struct PlateauVector3d | PLATEAU SDK for Unity",
    "keywords": "Struct PlateauVector3d Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public struct PlateauVector3d Constructors PlateauVector3d(Double, Double, Double) Declaration public PlateauVector3d(double x, double y, double z) Parameters Type Name Description Double x Double y Double z Fields X Declaration public double X Field Value Type Description Double Y Declaration public double Y Field Value Type Description Double Z Declaration public double Z Field Value Type Description Double Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators Addition(PlateauVector3d, PlateauVector3d) Declaration public static PlateauVector3d operator +(PlateauVector3d op1, PlateauVector3d op2) Parameters Type Name Description PlateauVector3d op1 PlateauVector3d op2 Returns Type Description PlateauVector3d Division(PlateauVector3d, Double) Declaration public static PlateauVector3d operator /(PlateauVector3d vec, double scalar) Parameters Type Name Description PlateauVector3d vec Double scalar Returns Type Description PlateauVector3d Multiply(PlateauVector3d, Double) Declaration public static PlateauVector3d operator *(PlateauVector3d vec, double scalar) Parameters Type Name Description PlateauVector3d vec Double scalar Returns Type Description PlateauVector3d Subtraction(PlateauVector3d, PlateauVector3d) Declaration public static PlateauVector3d operator -(PlateauVector3d op1, PlateauVector3d op2) Parameters Type Name Description PlateauVector3d op1 PlateauVector3d op2 Returns Type Description PlateauVector3d"
  },
  "api/PLATEAU.Native.PlateauVector3f.html": {
    "href": "api/PLATEAU.Native.PlateauVector3f.html",
    "title": "Struct PlateauVector3f | PLATEAU SDK for Unity",
    "keywords": "Struct PlateauVector3f Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.Native Assembly : cs.temp.dll.dll Syntax public struct PlateauVector3f Constructors PlateauVector3f(Single, Single, Single) Declaration public PlateauVector3f(float x, float y, float z) Parameters Type Name Description Single x Single y Single z Fields X Declaration public float X Field Value Type Description Single Y Declaration public float Y Field Value Type Description Single Z Declaration public float Z Field Value Type Description Single Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators Addition(PlateauVector3f, PlateauVector3f) Declaration public static PlateauVector3f operator +(PlateauVector3f op1, PlateauVector3f op2) Parameters Type Name Description PlateauVector3f op1 PlateauVector3f op2 Returns Type Description PlateauVector3f Division(PlateauVector3f, Single) Declaration public static PlateauVector3f operator /(PlateauVector3f vec, float scalar) Parameters Type Name Description PlateauVector3f vec Single scalar Returns Type Description PlateauVector3f Multiply(PlateauVector3f, Single) Declaration public static PlateauVector3f operator *(PlateauVector3f vec, float scalar) Parameters Type Name Description PlateauVector3f vec Single scalar Returns Type Description PlateauVector3f Subtraction(PlateauVector3f, PlateauVector3f) Declaration public static PlateauVector3f operator -(PlateauVector3f op1, PlateauVector3f op2) Parameters Type Name Description PlateauVector3f op1 PlateauVector3f op2 Returns Type Description PlateauVector3f"
  },
  "api/PLATEAU.Network.Client.html": {
    "href": "api/PLATEAU.Network.Client.html",
    "title": "Class Client | PLATEAU SDK for Unity",
    "keywords": "Class Client Inheritance Object Client Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Network Assembly : cs.temp.dll.dll Syntax public class Client Properties Handle Declaration public IntPtr Handle { get; } Property Value Type Description IntPtr Url Declaration public string Url { get; set; } Property Value Type Description String Methods Create(String, String) Declaration public static Client Create(string serverUrl, string apiToken) Parameters Type Name Description String serverUrl String apiToken Returns Type Description Client CreateForMockServer() Declaration public static Client CreateForMockServer() Returns Type Description Client Dispose() Declaration public void Dispose() Download(String, String) Declaration public string Download(string destDirPath, string url) Parameters Type Name Description String destDirPath String url Returns Type Description String GetDatasetMetadataGroup() Declaration public NativeVectorDatasetMetadataGroup GetDatasetMetadataGroup() Returns Type Description NativeVectorDatasetMetadataGroup"
  },
  "api/PLATEAU.Network.html": {
    "href": "api/PLATEAU.Network.html",
    "title": "Namespace PLATEAU.Network | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.Network Classes Client NetworkConfig"
  },
  "api/PLATEAU.Network.NetworkConfig.html": {
    "href": "api/PLATEAU.Network.NetworkConfig.html",
    "title": "Class NetworkConfig | PLATEAU SDK for Unity",
    "keywords": "Class NetworkConfig Inheritance Object NetworkConfig Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Network Assembly : cs.temp.dll.dll Syntax public class NetworkConfig Properties MockServerUrl Declaration public static string MockServerUrl { get; } Property Value Type Description String"
  },
  "api/PLATEAU.PolygonMesh.CityObjectIndex.html": {
    "href": "api/PLATEAU.PolygonMesh.CityObjectIndex.html",
    "title": "Struct CityObjectIndex | PLATEAU SDK for Unity",
    "keywords": "Struct CityObjectIndex Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.PolygonMesh Assembly : cs.temp.dll.dll Syntax public struct CityObjectIndex Constructors CityObjectIndex(Int32, Int32) Declaration public CityObjectIndex(int primaryIndex, int atomicIndex) Parameters Type Name Description Int32 primaryIndex Int32 atomicIndex Fields AtomicIndex Declaration public int AtomicIndex Field Value Type Description Int32 PrimaryIndex Declaration public int PrimaryIndex Field Value Type Description Int32 Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) FromUV(PlateauVector2f) Declaration public static CityObjectIndex FromUV(PlateauVector2f uv) Parameters Type Name Description PlateauVector2f uv Returns Type Description CityObjectIndex GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode()"
  },
  "api/PLATEAU.PolygonMesh.CityObjectList.html": {
    "href": "api/PLATEAU.PolygonMesh.CityObjectList.html",
    "title": "Class CityObjectList | PLATEAU SDK for Unity",
    "keywords": "Class CityObjectList CityObjectIndex とGML IDを対応付けるネイティブなmapです。 注意: Meshと紐付けられたCityObjectListはMeshの削除時に一緒に削除されるので、Disposeを呼んではいけません。 したがって勝手に削除される は実装しません。 どことも紐付けられないCityObjectListに限って、手動でDisposeを呼んでください。 Inheritance Object CityObjectList Namespace : PLATEAU.PolygonMesh Assembly : cs.temp.dll.dll Syntax public class CityObjectList : IDisposable Properties Handle Declaration public IntPtr Handle { get; } Property Value Type Description IntPtr Length Declaration public int Length { get; } Property Value Type Description Int32 Methods Add(CityObjectIndex, String) Declaration public void Add(CityObjectIndex cityObjIndex, string gmlID) Parameters Type Name Description CityObjectIndex cityObjIndex String gmlID Create() Declaration public static CityObjectList Create() Returns Type Description CityObjectList Dispose() Declaration public void Dispose() GetAllKeys() Declaration public CityObjectIndex[] GetAllKeys() Returns Type Description CityObjectIndex [] GetAtomicID(CityObjectIndex) Declaration public string GetAtomicID(CityObjectIndex index) Parameters Type Name Description CityObjectIndex index Returns Type Description String GetCityObjectIndex(String) gml:idに対応する CityObjectIndex を取得します。 存在しない場合は(-1, -1)を返します。 Declaration public CityObjectIndex GetCityObjectIndex(string gmlID) Parameters Type Name Description String gmlID Returns Type Description CityObjectIndex GetPrimaryID(Int32) Declaration public string GetPrimaryID(int index) Parameters Type Name Description Int32 index Returns Type Description String TryGetAtomicID(CityObjectIndex, out String) Declaration public bool TryGetAtomicID(CityObjectIndex index, out string outGmlID) Parameters Type Name Description CityObjectIndex index String outGmlID Returns Type Description Boolean"
  },
  "api/PLATEAU.PolygonMesh.html": {
    "href": "api/PLATEAU.PolygonMesh.html",
    "title": "Namespace PLATEAU.PolygonMesh | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.PolygonMesh Classes CityObjectList CityObjectIndex とGML IDを対応付けるネイティブなmapです。 注意: Meshと紐付けられたCityObjectListはMeshの削除時に一緒に削除されるので、Disposeを呼んではいけません。 したがって勝手に削除される は実装しません。 どことも紐付けられないCityObjectListに限って、手動でDisposeを呼んでください。 Mesh メッシュ情報です。 Unity や Unreal Engine でメッシュを生成するために必要な情報が含まれるよう意図されています。 具体的には 頂点リスト、Indicesリスト、UV、サブメッシュ（含テクスチャ）があります。 詳しくは Model クラスのコメントをご覧ください。 MeshExtractor から Model を抽出します。 MeshGranularityExtension Model DLL側で実装された Model を、C# 側の Model としてデータを受け取るためのクラスです。 ( Node , Mesh , SubMesh も同様です。) Model は、GMLファイルパーサーから読み取った3Dメッシュ情報を各ゲームエンジンに渡すための中間データ構造として設計されています。 そのデータにはメッシュ、テクスチャパス、ゲームオブジェクトの階層構造が含まれており、 DLLの利用者である Unity や Unreal Engine がメッシュやゲームオブジェクトを生成するために必要な情報が入るよう意図されています。 Model はそのデータ構造の階層のトップに位置します。 Model クラスのデータを元に、実際にメッシュやゲームオブジェクトを生成するのは PLATEAU Unity SDK の責務となります。 中間データ構造の階層 : Model -> 所有(0個以上) -> Node(階層構造) -> 所有(0or1個) -> Mesh -> 所有(1個以上) -> SubMesh Model が所有する Node の階層関係は、ゲームエンジン側でのゲームオブジェクトの階層関係に対応します。 Node が所有する Mesh は、そのゲームオブジェクトが保持する3Dメッシュに対応します。 Mesh が所有する SubMesh は、そのメッシュのサブメッシュ（テクスチャパスを含む）に対応します。 DLLから得た Model を delete するのは C# 側の責務なので、 IDisposable を実装して不要時に delete しています。 delete 後は、配下のノードやメッシュにもアクセスできなくなります。 Node Model 以下の階層構造を構成するノードです。 Node は 0個以上の 子Node を持つため階層構造になります。 詳しくは Model クラスのコメントをご覧ください。 Name はゲームエンジン側ではゲームオブジェクトの名前として解釈されることが想定されます。 Mesh はそのゲームオブジェクトの持つメッシュとして解釈されることが想定されます。 SubMesh SubMesh は、 Mesh の一部 (Indices リストの中のとある範囲)がとあるテクスチャであることを表現します。 詳しくは Model クラスのコメントをご覧ください。 Structs CityObjectIndex MeshExtractOptions GMLファイルから3Dメッシュを取り出すための設定です。 Enums MeshGranularity メッシュの結合単位"
  },
  "api/PLATEAU.PolygonMesh.Mesh.html": {
    "href": "api/PLATEAU.PolygonMesh.Mesh.html",
    "title": "Class Mesh | PLATEAU SDK for Unity",
    "keywords": "Class Mesh メッシュ情報です。 Unity や Unreal Engine でメッシュを生成するために必要な情報が含まれるよう意図されています。 具体的には 頂点リスト、Indicesリスト、UV、サブメッシュ（含テクスチャ）があります。 詳しくは Model クラスのコメントをご覧ください。 Inheritance Object Mesh Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.PolygonMesh Assembly : cs.temp.dll.dll Syntax public class Mesh Properties CityObjectList Declaration public CityObjectList CityObjectList { get; set; } Property Value Type Description CityObjectList Handle Declaration public IntPtr Handle { get; } Property Value Type Description IntPtr IndicesCount Declaration public int IndicesCount { get; } Property Value Type Description Int32 SubMeshCount Declaration public int SubMeshCount { get; } Property Value Type Description Int32 VerticesCount Declaration public int VerticesCount { get; } Property Value Type Description Int32 Methods AddSubMesh(String, Int32, Int32) Declaration public void AddSubMesh(string texturePath, int subMeshStartIndex, int subMeshEndIndex) Parameters Type Name Description String texturePath Int32 subMeshStartIndex Int32 subMeshEndIndex Create(PlateauVector3d[], UInt32[], PlateauVector2f[], PlateauVector2f[], SubMesh[]) Declaration public static Mesh Create(PlateauVector3d[] vertices, uint[] indices, PlateauVector2f[] uv1, PlateauVector2f[] uv4, SubMesh[] subMeshes) Parameters Type Name Description PlateauVector3d [] vertices UInt32 [] indices PlateauVector2f [] uv1 PlateauVector2f [] uv4 SubMesh [] subMeshes Returns Type Description Mesh Create(String) Declaration public static Mesh Create(string meshID) Parameters Type Name Description String meshID Returns Type Description Mesh DebugString(StringBuilderWithIndent) Declaration public void DebugString(StringBuilderWithIndent sb) Parameters Type Name Description StringBuilderWithIndent sb Dispose() 取扱注意: 通常は Node が廃棄されるときに C++側で Mesh も廃棄されるので、このメソッドを呼ぶ必要はありません。 Node に属さず、C#側で明示的に Create した Mesh のみ Dispose() してください。 それ以外のタイミングで呼ぶとメモリ違反でUnityが落ちます。 Declaration public void Dispose() GetIndiceAt(Int32) Declaration public int GetIndiceAt(int index) Parameters Type Name Description Int32 index Returns Type Description Int32 GetSubMeshAt(Int32) Declaration public SubMesh GetSubMeshAt(int index) Parameters Type Name Description Int32 index Returns Type Description SubMesh GetUv1() Declaration public PlateauVector2f[] GetUv1() Returns Type Description PlateauVector2f [] GetUv4() Declaration public PlateauVector2f[] GetUv4() Returns Type Description PlateauVector2f [] GetVertexAt(Int32) Declaration public PlateauVector3d GetVertexAt(int index) Parameters Type Name Description Int32 index Returns Type Description PlateauVector3d MarkInvalid() Declaration public void MarkInvalid() MergeMesh(Mesh, Boolean) Declaration public void MergeMesh(Mesh otherMesh, bool includeTexture) Parameters Type Name Description Mesh otherMesh Boolean includeTexture"
  },
  "api/PLATEAU.PolygonMesh.MeshExtractOptions.html": {
    "href": "api/PLATEAU.PolygonMesh.MeshExtractOptions.html",
    "title": "Struct MeshExtractOptions | PLATEAU SDK for Unity",
    "keywords": "Struct MeshExtractOptions GMLファイルから3Dメッシュを取り出すための設定です。 Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.PolygonMesh Assembly : cs.temp.dll.dll Syntax public struct MeshExtractOptions Constructors MeshExtractOptions(PlateauVector3d, CoordinateSystem, MeshGranularity, UInt32, UInt32, Boolean, Int32, Single, Int32, Boolean, Boolean, Boolean, UInt32, Boolean, Int32, String) Declaration public MeshExtractOptions(PlateauVector3d referencePoint, CoordinateSystem meshAxes, MeshGranularity meshGranularity, uint minLOD, uint maxLOD, bool exportAppearance, int gridCountOfSide, float unitScale, int coordinateZoneID, bool excludeCityObjectOutsideExtent, bool excludePolygonsOutsideExtent, bool enableTexturePacking, uint texturePackingResolution, bool attachMapTile, int mapTileZoomLevel, string mapTileURL) Parameters Type Name Description PlateauVector3d referencePoint CoordinateSystem meshAxes MeshGranularity meshGranularity UInt32 minLOD UInt32 maxLOD Boolean exportAppearance Int32 gridCountOfSide Single unitScale Int32 coordinateZoneID Boolean excludeCityObjectOutsideExtent Boolean excludePolygonsOutsideExtent Boolean enableTexturePacking UInt32 texturePackingResolution Boolean attachMapTile Int32 mapTileZoomLevel String mapTileURL Fields AttachMapTile 土地でのみ利用します。 地図タイルを貼り付けるかどうかです。 Declaration public bool AttachMapTile Field Value Type Description Boolean CoordinateZoneID 国土交通省が規定する、日本の平面直角座標系の基準点の番号です。 詳しくは次の国土地理院のサイトをご覧ください。 https://www.gsi.go.jp/sokuchikijun/jpc.html Declaration public int CoordinateZoneID Field Value Type Description Int32 EnableTexturePacking テクスチャ結合（複数のテクスチャ画像を結合する機能）を有効にするかどうかを bool で指定します。 Declaration public bool EnableTexturePacking Field Value Type Description Boolean ExcludeCityObjectOutsideExtent 範囲外の3Dモデルを出力から除外するための、2つの方法のうち1つを有効にするかどうかを bool で指定します。 その方法とは、都市オブジェクトの最初の頂点の位置が範囲外のとき、そのオブジェクトはすべて範囲外とみなして出力から除外します。 これはビル1棟程度の大きさのオブジェクトでは有効ですが、 10km×10kmの地形のような巨大なオブジェクトでは、実際には範囲内なのに最初の頂点が遠いために除外されるということがおきます。 したがって、この値は建物では true, 地形では false となるべきです。 Declaration public bool ExcludeCityObjectOutsideExtent Field Value Type Description Boolean ExcludePolygonsOutsideExtent 範囲外の3Dモデルを出力から除外するための、2つの方法のうち1つを有効にするかどうかを bool で指定します。 その方法とは、メッシュ操作によって、範囲外に存在するポリゴンを除外します。 この方法であれば 10km×10km の地形など巨大なオブジェクトにも対応できます。 Declaration public bool ExcludePolygonsOutsideExtent Field Value Type Description Boolean ExportAppearance テクスチャを含めるかどうかです。 Declaration public bool ExportAppearance Field Value Type Description Boolean MapTileZoomLevel 土地でのみ利用します。 URLで地図タイルをダウンロードする場合のズームレベルです。 Declaration public int MapTileZoomLevel Field Value Type Description Int32 MeshAxes 座標軸の向きです。 Declaration public CoordinateSystem MeshAxes Field Value Type Description CoordinateSystem MeshGranularity メッシュ結合の粒度です。 Declaration public MeshGranularity MeshGranularity Field Value Type Description MeshGranularity ReferencePoint 直交座標系における座標で、3Dモデルの原点をどこに設定するかです。 Declaration public PlateauVector3d ReferencePoint Field Value Type Description PlateauVector3d TexturePackingResolution テクスチャ結合時の結合先のテクスチャ画像の解像度（縦：texture_packing_resolution x 横:texture_packing_resolution） Declaration public uint TexturePackingResolution Field Value Type Description UInt32 Properties GridCountOfSide Declaration public int GridCountOfSide { get; set; } Property Value Type Description Int32 MapTileURL Declaration public string MapTileURL { get; set; } Property Value Type Description String UnitScale Declaration public float UnitScale { get; set; } Property Value Type Description Single Methods SetLODRange(UInt32, UInt32) Declaration public void SetLODRange(uint minLODArg, uint maxLODArg) Parameters Type Name Description UInt32 minLODArg UInt32 maxLODArg"
  },
  "api/PLATEAU.PolygonMesh.MeshExtractor.html": {
    "href": "api/PLATEAU.PolygonMesh.MeshExtractor.html",
    "title": "Class MeshExtractor | PLATEAU SDK for Unity",
    "keywords": "Class MeshExtractor から Model を抽出します。 Inheritance Object MeshExtractor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.PolygonMesh Assembly : cs.temp.dll.dll Syntax public static class MeshExtractor Methods Extract(ref Model, CityModel, MeshExtractOptions) から Model を抽出します。 結果は outModel に格納されます。 通常、 outModel には new したばかりの Model を渡してください。 Declaration public static void Extract(ref Model outModel, CityModel cityModel, MeshExtractOptions options) Parameters Type Name Description Model outModel CityModel cityModel MeshExtractOptions options ExtractInExtents(ref Model, CityModel, MeshExtractOptions, List<Extent>) から範囲内の Model を抽出します。 結果は outModel に格納されます。 通常、 outModel には new したばかりの Model を渡してください。 Declaration public static void ExtractInExtents(ref Model outModel, CityModel cityModel, MeshExtractOptions options, List<Extent> extents) Parameters Type Name Description Model outModel CityModel cityModel MeshExtractOptions options List < Extent > extents"
  },
  "api/PLATEAU.PolygonMesh.MeshGranularity.html": {
    "href": "api/PLATEAU.PolygonMesh.MeshGranularity.html",
    "title": "Enum MeshGranularity | PLATEAU SDK for Unity",
    "keywords": "Enum MeshGranularity メッシュの結合単位 Namespace : PLATEAU.PolygonMesh Assembly : cs.temp.dll.dll Syntax public enum MeshGranularity Fields Name Description PerAtomicFeatureObject 最小地物単位(LOD2, LOD3の各部品) PerCityModelArea 都市モデル地域単位(GMLファイル内のすべてを結合) PerPrimaryFeatureObject 主要地物単位(建築物、道路等)"
  },
  "api/PLATEAU.PolygonMesh.MeshGranularityExtension.html": {
    "href": "api/PLATEAU.PolygonMesh.MeshGranularityExtension.html",
    "title": "Class MeshGranularityExtension | PLATEAU SDK for Unity",
    "keywords": "Class MeshGranularityExtension Inheritance Object MeshGranularityExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.PolygonMesh Assembly : cs.temp.dll.dll Syntax public static class MeshGranularityExtension Methods ToJapaneseString(MeshGranularity) Declaration public static string ToJapaneseString(this MeshGranularity granularity) Parameters Type Name Description MeshGranularity granularity Returns Type Description String"
  },
  "api/PLATEAU.PolygonMesh.Model.html": {
    "href": "api/PLATEAU.PolygonMesh.Model.html",
    "title": "Class Model | PLATEAU SDK for Unity",
    "keywords": "Class Model DLL側で実装された Model を、C# 側の Model としてデータを受け取るためのクラスです。 ( Node , Mesh , SubMesh も同様です。) Model は、GMLファイルパーサーから読み取った3Dメッシュ情報を各ゲームエンジンに渡すための中間データ構造として設計されています。 そのデータにはメッシュ、テクスチャパス、ゲームオブジェクトの階層構造が含まれており、 DLLの利用者である Unity や Unreal Engine がメッシュやゲームオブジェクトを生成するために必要な情報が入るよう意図されています。 Model はそのデータ構造の階層のトップに位置します。 Model クラスのデータを元に、実際にメッシュやゲームオブジェクトを生成するのは PLATEAU Unity SDK の責務となります。 中間データ構造の階層 : Model -> 所有(0個以上) -> Node(階層構造) -> 所有(0or1個) -> Mesh -> 所有(1個以上) -> SubMesh Model が所有する Node の階層関係は、ゲームエンジン側でのゲームオブジェクトの階層関係に対応します。 Node が所有する Mesh は、そのゲームオブジェクトが保持する3Dメッシュに対応します。 Mesh が所有する SubMesh は、そのメッシュのサブメッシュ（テクスチャパスを含む）に対応します。 DLLから得た Model を delete するのは C# 側の責務なので、 IDisposable を実装して不要時に delete しています。 delete 後は、配下のノードやメッシュにもアクセスできなくなります。 Inheritance Object Model Namespace : PLATEAU.PolygonMesh Assembly : cs.temp.dll.dll Syntax public class Model : PInvokeDisposable Constructors Model(IntPtr) Declaration public Model(IntPtr handle) Parameters Type Name Description IntPtr handle Properties RootNodesCount Model の持つ ルート Node の数を返します。 Declaration public int RootNodesCount { get; } Property Value Type Description Int32 Methods AddNodeByCppMove(Node) ルートにノードを加えます。 取扱注意: C++の std::move によって Node が移動するので、 実行後は元の node は利用不可になります。 Declaration public void AddNodeByCppMove(Node node) Parameters Type Name Description Node node Create() Declaration public static Model Create() Returns Type Description Model DebugString() Model 以下の階層構造を文字列で表現します。 Declaration public string DebugString() Returns Type Description String DisposeNative() Declaration protected override void DisposeNative() Finalize() Declaration protected void Finalize() GetRootNodeAt(Int32) index 番目の Node を返します。 Declaration public Node GetRootNodeAt(int index) Parameters Type Name Description Int32 index Returns Type Description Node"
  },
  "api/PLATEAU.PolygonMesh.Node.html": {
    "href": "api/PLATEAU.PolygonMesh.Node.html",
    "title": "Class Node | PLATEAU SDK for Unity",
    "keywords": "Class Node Model 以下の階層構造を構成するノードです。 Node は 0個以上の 子Node を持つため階層構造になります。 詳しくは Model クラスのコメントをご覧ください。 Name はゲームエンジン側ではゲームオブジェクトの名前として解釈されることが想定されます。 Mesh はそのゲームオブジェクトの持つメッシュとして解釈されることが想定されます。 Inheritance Object Node Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.PolygonMesh Assembly : cs.temp.dll.dll Syntax public class Node Constructors Node(IntPtr) Declaration public Node(IntPtr handle) Parameters Type Name Description IntPtr handle Properties ChildCount 子ノードの数を返します。 Declaration public int ChildCount { get; } Property Value Type Description Int32 Handle Declaration public IntPtr Handle { get; } Property Value Type Description IntPtr IsActive Declaration public bool IsActive { get; set; } Property Value Type Description Boolean Mesh ノードが保有する Mesh を返します。 なければ null を返します。 Declaration public Mesh Mesh { get; } Property Value Type Description Mesh Name ノードの名称を返します。 ゲームエンジン側ではゲームオブジェクトの名称となります。 Declaration public string Name { get; } Property Value Type Description String Methods AddChildNodeByCppMove(Node) 子ノードを追加します。 取扱注意: C++の move によって Node を移動するので、 実行後は元の Node は利用不可になります。 Declaration public void AddChildNodeByCppMove(Node node) Parameters Type Name Description Node node Create(String) Declaration public static Node Create(string id) Parameters Type Name Description String id Returns Type Description Node DebugString(StringBuilderWithIndent) Declaration public void DebugString(StringBuilderWithIndent sb) Parameters Type Name Description StringBuilderWithIndent sb Dispose() 取扱注意: 通常、 Model が廃棄されたときに Node も破棄されるので Dispose() を呼ぶ必要はありません。 Model に属さず、C#側から Create(String) したもののみ Dispose() してください。 Declaration public void Dispose() GetChildAt(Int32) index 番目の子ノードを返します。 Declaration public Node GetChildAt(int index) Parameters Type Name Description Int32 index Returns Type Description Node MarkInvalid() Declaration public void MarkInvalid() SetMeshByCppMove(Mesh) Mesh を Node にセットします。 取扱注意: C++の move によって Mesh を移動するので、 実行後は元の Mesh は利用不可になります。 Declaration public void SetMeshByCppMove(Mesh mesh) Parameters Type Name Description Mesh mesh"
  },
  "api/PLATEAU.PolygonMesh.SubMesh.html": {
    "href": "api/PLATEAU.PolygonMesh.SubMesh.html",
    "title": "Class SubMesh | PLATEAU SDK for Unity",
    "keywords": "Class SubMesh SubMesh は、 Mesh の一部 (Indices リストの中のとある範囲)がとあるテクスチャであることを表現します。 詳しくは Model クラスのコメントをご覧ください。 Inheritance Object SubMesh Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.PolygonMesh Assembly : cs.temp.dll.dll Syntax public class SubMesh Constructors SubMesh(IntPtr) Declaration public SubMesh(IntPtr handle) Parameters Type Name Description IntPtr handle Properties EndIndex Declaration public int EndIndex { get; } Property Value Type Description Int32 GameMaterialID GameMaterialID は、 SubMesh にゲームエンジンのマテリアルを持たせたい場合に、 TexturePath や Material の代わりに利用するIDです。 特に分割結合でゲームエンジンのマテリアルを維持するために利用します。 IDがどのマテリアルを指すかはゲームエンジンが決めます。 Declaration public int GameMaterialID { get; set; } Property Value Type Description Int32 Handle Declaration public IntPtr Handle { get; } Property Value Type Description IntPtr Material Declaration public Material Material { get; } Property Value Type Description Material StartIndex Declaration public int StartIndex { get; } Property Value Type Description Int32 TexturePath Declaration public string TexturePath { get; } Property Value Type Description String Methods Create(Int32, Int32, String) Declaration public static SubMesh Create(int startIndex, int endIndex, string texturePath) Parameters Type Name Description Int32 startIndex Int32 endIndex String texturePath Returns Type Description SubMesh DebugPrint(StringBuilderWithIndent) Declaration public void DebugPrint(StringBuilderWithIndent sb) Parameters Type Name Description StringBuilderWithIndent sb Dispose() 取扱注意: 通常は Mesh が廃棄されるときに C++側で SubMesh も廃棄されるので、 このメソッドを呼ぶ必要はありません。 Mesh に属さず、C#側で明示的に Create した SubMesh のみ Dispose() してください。 それ以外のタイミングで呼ぶとメモリ違反でUnityが落ちます。 Declaration public void Dispose()"
  },
  "api/PLATEAU.Texture.html": {
    "href": "api/PLATEAU.Texture.html",
    "title": "Namespace PLATEAU.Texture | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.Texture Classes MapZoomLevelSearcher Structs MapZoomLevelSearchResult"
  },
  "api/PLATEAU.Texture.MapZoomLevelSearcher.html": {
    "href": "api/PLATEAU.Texture.MapZoomLevelSearcher.html",
    "title": "Class MapZoomLevelSearcher | PLATEAU SDK for Unity",
    "keywords": "Class MapZoomLevelSearcher Inheritance Object MapZoomLevelSearcher Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Texture Assembly : cs.temp.dll.dll Syntax public class MapZoomLevelSearcher Methods Search(String, Double, Double) Declaration public MapZoomLevelSearchResult Search(string urlTemplate, double latitude, double longitude) Parameters Type Name Description String urlTemplate Double latitude Double longitude Returns Type Description MapZoomLevelSearchResult"
  },
  "api/PLATEAU.Texture.MapZoomLevelSearchResult.html": {
    "href": "api/PLATEAU.Texture.MapZoomLevelSearchResult.html",
    "title": "Struct MapZoomLevelSearchResult | PLATEAU SDK for Unity",
    "keywords": "Struct MapZoomLevelSearchResult Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.Texture Assembly : cs.temp.dll.dll Syntax public struct MapZoomLevelSearchResult Fields AvailableZoomLevelMax Declaration public int AvailableZoomLevelMax Field Value Type Description Int32 AvailableZoomLevelMin Declaration public int AvailableZoomLevelMin Field Value Type Description Int32 IsValid Declaration public bool IsValid Field Value Type Description Boolean"
  },
  "api/PLATEAU.Util.Async.html": {
    "href": "api/PLATEAU.Util.Async.html",
    "title": "Namespace PLATEAU.Util.Async | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.Util.Async Classes TaskExtension TextureLoader URLから画像をロードしてテクスチャとして返します。"
  },
  "api/PLATEAU.Util.Async.TaskExtension.html": {
    "href": "api/PLATEAU.Util.Async.TaskExtension.html",
    "title": "Class TaskExtension | PLATEAU SDK for Unity",
    "keywords": "Class TaskExtension Inheritance Object TaskExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Util.Async Assembly : cs.temp.dll.dll Syntax public static class TaskExtension Methods ContinueWithErrorCatch(Task) 投げっぱなしのタスクの例外をエラーログで確認できるようにする拡張メソッドです。 Declaration public static Task ContinueWithErrorCatch(this Task task) Parameters Type Name Description Task task Returns Type Description Task"
  },
  "api/PLATEAU.Util.Async.TextureLoader.html": {
    "href": "api/PLATEAU.Util.Async.TextureLoader.html",
    "title": "Class TextureLoader | PLATEAU SDK for Unity",
    "keywords": "Class TextureLoader URLから画像をロードしてテクスチャとして返します。 Inheritance Object TextureLoader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Util.Async Assembly : cs.temp.dll.dll Syntax public static class TextureLoader Methods LoadAsync(String, Int32) 非同期で url から画像をダウンロードしてテクスチャとして返します。 コルーチンを使うので、メインスレッドで行われる必要があります。 失敗した場合は null を返します。 Declaration public static async Task<Texture2D> LoadAsync(string url, int timeOutSec) Parameters Type Name Description String url Int32 timeOutSec Returns Type Description Task < Texture2D > LoadPlateauTextureAsync(String) テクスチャのURL（パス） から、PLATEAUのテクスチャを非同期でロードします。 内容は LoadAsync(String, Int32) に、PLATEAUテクスチャ用の処理を加えたものになります。 メインスレッドで実行する必要があります。 Declaration public static async Task<Texture2D> LoadPlateauTextureAsync(string texturePath) Parameters Type Name Description String texturePath Returns Type Description Task < Texture2D >"
  },
  "api/PLATEAU.Util.DebugUtil.html": {
    "href": "api/PLATEAU.Util.DebugUtil.html",
    "title": "Class DebugUtil | PLATEAU SDK for Unity",
    "keywords": "Class DebugUtil Inheritance Object DebugUtil Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Util Assembly : cs.temp.dll.dll Syntax public static class DebugUtil Methods EnumerableToString<T>(IEnumerable<T>) 複数オブジェクトの ToString をまとめて行い、結合した string を返します。 Declaration public static string EnumerableToString<T>(IEnumerable<T> enumerable) Parameters Type Name Description IEnumerable <T> enumerable Returns Type Description String Type Parameters Name Description T"
  },
  "api/PLATEAU.Util.Dialogue.html": {
    "href": "api/PLATEAU.Util.Dialogue.html",
    "title": "Class Dialogue | PLATEAU SDK for Unity",
    "keywords": "Class Dialogue Editorの場合にUnityのダイアログを表示し、 Runtimeの場合に何もしないクラスです。 Inheritance Object Dialogue Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Util Assembly : cs.temp.dll.dll Syntax public class Dialogue Methods Display(String, String) Editorの場合、キャンセルボタンのないダイアログを表示します。 Declaration public static void Display(string message, string ok) Parameters Type Name Description String message String ok Display(String, String, String) Editorの場合、ダイアログで2択の選択肢を提示し、結果をboolで返します。 Declaration public static bool Display(string message, string ok, string cancel) Parameters Type Name Description String message String ok String cancel Returns Type Description Boolean"
  },
  "api/PLATEAU.Util.DisplayedProgress.html": {
    "href": "api/PLATEAU.Util.DisplayedProgress.html",
    "title": "Class DisplayedProgress | PLATEAU SDK for Unity",
    "keywords": "Class DisplayedProgress Inheritance Object DisplayedProgress Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Util Assembly : cs.temp.dll.dll Syntax public class DisplayedProgress Constructors DisplayedProgress(String, Single, String) Declaration public DisplayedProgress(string name, float percentage, string message) Parameters Type Name Description String name Single percentage String message Fields Message Declaration public string Message Field Value Type Description String Name Declaration public readonly string Name Field Value Type Description String Percentage Declaration public float Percentage Field Value Type Description Single Properties PercentageStr Declaration public string PercentageStr { get; } Property Value Type Description String"
  },
  "api/PLATEAU.Util.DummyProgressDisplay.html": {
    "href": "api/PLATEAU.Util.DummyProgressDisplay.html",
    "title": "Class DummyProgressDisplay | PLATEAU SDK for Unity",
    "keywords": "Class DummyProgressDisplay Inheritance Object DummyProgressDisplay Implements IProgressDisplay Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Util Assembly : cs.temp.dll.dll Syntax public class DummyProgressDisplay : IProgressDisplay Methods SetProgress(String, Single, String) Declaration public void SetProgress(string progressName, float percentage, string message) Parameters Type Name Description String progressName Single percentage String message Implements IProgressDisplay"
  },
  "api/PLATEAU.Util.EnumUtil.html": {
    "href": "api/PLATEAU.Util.EnumUtil.html",
    "title": "Class EnumUtil | PLATEAU SDK for Unity",
    "keywords": "Class EnumUtil Inheritance Object EnumUtil Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Util Assembly : cs.temp.dll.dll Syntax public static class EnumUtil Methods EachFlags<TEnum>(TEnum) フラグ式のEnumを受け取り、そのフラグが立っている各Enumタイプに分解します。 Declaration public static IEnumerable<TEnum> EachFlags<TEnum>(TEnum input) where TEnum : Enum Parameters Type Name Description TEnum input Returns Type Description IEnumerable <TEnum> Type Parameters Name Description TEnum"
  },
  "api/PLATEAU.Util.FallbackMaterial.html": {
    "href": "api/PLATEAU.Util.FallbackMaterial.html",
    "title": "Class FallbackMaterial | PLATEAU SDK for Unity",
    "keywords": "Class FallbackMaterial Inheritance Object FallbackMaterial Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Util Assembly : cs.temp.dll.dll Syntax public class FallbackMaterial Methods ByMainTextureName(String) メインテクスチャ名からデフォルトマテリアルを探して返します。 なければnullを返します。 Declaration public static Material ByMainTextureName(string mainTexNameArg) Parameters Type Name Description String mainTexNameArg Returns Type Description Material LoadByPackage(PredefinedCityModelPackage) 引数のパッケージ種に対応するデフォルトフォールバックマテリアルをロードして返します。 引数に対応するものがない、またはロードに失敗した場合はUnityのデフォルトマテリアルを返します。 Declaration public static Material LoadByPackage(PredefinedCityModelPackage pack) Parameters Type Name Description PredefinedCityModelPackage pack Returns Type Description Material"
  },
  "api/PLATEAU.Util.html": {
    "href": "api/PLATEAU.Util.html",
    "title": "Namespace PLATEAU.Util | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.Util Classes DebugUtil Dialogue Editorの場合にUnityのダイアログを表示し、 Runtimeの場合に何もしないクラスです。 DisplayedProgress DummyProgressDisplay EnumUtil FallbackMaterial MaterialPathUtil PathUtil PLATEAU のファイルパスに関するユーティリティです。 ProgressBar Editorの場合、 Display(String, Single) でプログレスバーを表示し、廃棄時にプログレスバーを消します。 Editorでない場合、何もしません。 Display(String, Single) にinfo文字列を与えない場合に表示されるデフォルト文字列をコンストラクタで指定できます。 指定しない場合は空文字列がデフォルトになります。 RenderUtil StringBuilderWithIndent インデント機能付きの StringBuilder です。 Interfaces IProgressDisplay Enums PipeLineType"
  },
  "api/PLATEAU.Util.IProgressDisplay.html": {
    "href": "api/PLATEAU.Util.IProgressDisplay.html",
    "title": "Interface IProgressDisplay | PLATEAU SDK for Unity",
    "keywords": "Interface IProgressDisplay Namespace : PLATEAU.Util Assembly : cs.temp.dll.dll Syntax public interface IProgressDisplay Methods SetProgress(String, Single, String) 進捗情報をセットします。 progressName をキーとし、キーがすでにあれば進捗を更新、 なければ追加します。 別スレッドから呼ばれることがあります。 Declaration void SetProgress(string progressName, float percentage, string message) Parameters Type Name Description String progressName Single percentage String message"
  },
  "api/PLATEAU.Util.MaterialPathUtil.html": {
    "href": "api/PLATEAU.Util.MaterialPathUtil.html",
    "title": "Class MaterialPathUtil | PLATEAU SDK for Unity",
    "keywords": "Class MaterialPathUtil Inheritance Object MaterialPathUtil Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Util Assembly : cs.temp.dll.dll Syntax public static class MaterialPathUtil Fields BaseMaterialDir Declaration public static readonly string BaseMaterialDir Field Value Type Description String Methods GetMapMatPath() Declaration public static string GetMapMatPath() Returns Type Description String GetRenderPipelineType() Declaration public static PipeLineType GetRenderPipelineType() Returns Type Description PipeLineType"
  },
  "api/PLATEAU.Util.PathUtil.html": {
    "href": "api/PLATEAU.Util.PathUtil.html",
    "title": "Class PathUtil | PLATEAU SDK for Unity",
    "keywords": "Class PathUtil PLATEAU のファイルパスに関するユーティリティです。 Inheritance Object PathUtil Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Util Assembly : cs.temp.dll.dll Syntax public static class PathUtil Fields PLATEAUSrcFetchDir Declaration public static readonly string PLATEAUSrcFetchDir Field Value Type Description String UdxFolderName Declaration public const string UdxFolderName = \"udx\" Field Value Type Description String Properties SdkBasePath PLATEAU SDK のパスは、 GitHub からインポートした場合は Packages 以下になり、 Unity Asset Store からインポートした場合は Assets 以下になります。 SDKの基本パスを返します。 Declaration public static string SdkBasePath { get; } Property Value Type Description String Methods FullPathToAssetsPath(String) フルパスをAssetsフォルダからのパスに変換します。 パスがAssetsフォルダ内を指すことが前提であり、そうでない場合は を投げます。 Declaration public static string FullPathToAssetsPath(string filePath) Parameters Type Name Description String filePath Returns Type Description String IsSubDirectory(String, String) Declaration public static bool IsSubDirectory(string subPath, string dir) Parameters Type Name Description String subPath String dir Returns Type Description Boolean IsValidInputFilePath(String, String, Boolean) 入力ファイル用のパスとして正しければtrue,不適切であればfalseを返します。 Declaration public static bool IsValidInputFilePath(string filePath, string expectedExtension, bool shouldFileInAssetsFolder) Parameters Type Name Description String filePath 入力ファイルのパスです。 String expectedExtension 入力ファイルとして想定される拡張子です。 Boolean shouldFileInAssetsFolder ファイルがUnityプロジェクトのAssetsフォルダ内にあるべきならtrue、他の場所でも良いならfalseを指定します。 Returns Type Description Boolean IsValidOutputFilePath(String, String) 出力用のファイルパスとして正しければtrue,不適切であればfalseを返します。 Declaration public static bool IsValidOutputFilePath(string filePath, string expectedExtension) Parameters Type Name Description String filePath String expectedExtension Returns Type Description Boolean SdkPathToAssetPath(String) SdkBasePath からの相対パスを受け取り、アセットパスに変換して返します。 Declaration public static string SdkPathToAssetPath(string sdkPath) Parameters Type Name Description String sdkPath Returns Type Description String"
  },
  "api/PLATEAU.Util.PipeLineType.html": {
    "href": "api/PLATEAU.Util.PipeLineType.html",
    "title": "Enum PipeLineType | PLATEAU SDK for Unity",
    "keywords": "Enum PipeLineType Namespace : PLATEAU.Util Assembly : cs.temp.dll.dll Syntax public enum PipeLineType Fields Name Description BuildIn HDRenderPipelineAsset UniversalRenderPipelineAsset"
  },
  "api/PLATEAU.Util.ProgressBar.html": {
    "href": "api/PLATEAU.Util.ProgressBar.html",
    "title": "Class ProgressBar | PLATEAU SDK for Unity",
    "keywords": "Class ProgressBar Editorの場合、 Display(String, Single) でプログレスバーを表示し、廃棄時にプログレスバーを消します。 Editorでない場合、何もしません。 Display(String, Single) にinfo文字列を与えない場合に表示されるデフォルト文字列をコンストラクタで指定できます。 指定しない場合は空文字列がデフォルトになります。 Inheritance Object ProgressBar Namespace : PLATEAU.Util Assembly : cs.temp.dll.dll Syntax public class ProgressBar : IDisposable Constructors ProgressBar() Declaration public ProgressBar() ProgressBar(String) Declaration public ProgressBar(string defaultInfo) Parameters Type Name Description String defaultInfo Methods Display(Single) Declaration public void Display(float progress) Parameters Type Name Description Single progress Display(String, Single) Declaration public void Display(string info, float progress) Parameters Type Name Description String info Single progress Dispose() Declaration public void Dispose()"
  },
  "api/PLATEAU.Util.RenderUtil.html": {
    "href": "api/PLATEAU.Util.RenderUtil.html",
    "title": "Class RenderUtil | PLATEAU SDK for Unity",
    "keywords": "Class RenderUtil Inheritance Object RenderUtil Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Util Assembly : cs.temp.dll.dll Syntax public static class RenderUtil Properties DefaultMaterial Declaration public static Material DefaultMaterial { get; } Property Value Type Description Material PLATEAUX3DMaterial Material用シェーダー付きのOpaqueマテリアル Declaration public static Material PLATEAUX3DMaterial { get; } Property Value Type Description Material PLATEAUX3DMaterial_Transparent Material用シェーダー付きのTransparentマテリアル Declaration public static Material PLATEAUX3DMaterial_Transparent { get; } Property Value Type Description Material Methods CreateDefaultMaterial() Declaration public static Material CreateDefaultMaterial() Returns Type Description Material GetPLATEAUX3DMaterialByCityGMLMaterial(Material) CityGML.MaterialとRenderPipelineによりShaderを判別しMaterialを返します Declaration public static Material GetPLATEAUX3DMaterialByCityGMLMaterial(Material rawMaterial) Parameters Type Name Description Material rawMaterial Returns Type Description Material"
  },
  "api/PLATEAU.Util.StringBuilderWithIndent.html": {
    "href": "api/PLATEAU.Util.StringBuilderWithIndent.html",
    "title": "Class StringBuilderWithIndent | PLATEAU SDK for Unity",
    "keywords": "Class StringBuilderWithIndent インデント機能付きの StringBuilder です。 Inheritance Object StringBuilderWithIndent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Util Assembly : cs.temp.dll.dll Syntax public class StringBuilderWithIndent Constructors StringBuilderWithIndent() Declaration public StringBuilderWithIndent() Methods AppendLine(String) Declaration public void AppendLine(string str) Parameters Type Name Description String str DecrementIndent() Declaration public void DecrementIndent() IncrementIndent() Declaration public void IncrementIndent() ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "index.html": {
    "href": "index.html",
    "title": "PLATEAU SDK for Unity | PLATEAU SDK for Unity",
    "keywords": "PLATEAU SDK for Unity このパッケージには、 PLATEAU の3D都市モデルデータを利用するためのAPI、サンプルが含まれます。PLATEAU SDK for Unityを利用することで、実世界を舞台にしたゲームの開発や、PLATEAUの豊富なデータを活用したシミュレーションを簡単に行うことができます。 Note PLATEAU SDK for Unityは利用者アンケートを実施しています。 今後の開発の参考にするため、ユーザーの皆様の忌憚ないご意見をお聞かせください。 ◆アンケートはこちら Note PLATEAU Slackコミュニティにどなたでもご参加いただけます。 参加希望の方は、お問い合わせページよりお気軽にお問い合わせください。 ◆お問い合わせページはこちら"
  },
  "manual/AccessCityObject.html": {
    "href": "manual/AccessCityObject.html",
    "title": "都市情報へのアクセス | PLATEAU SDK for Unity",
    "keywords": "都市情報へのアクセス C# APIやPLATEAU SDKの機能によって都市オブジェクトの情報を取得できます。 このページでその方法を説明します。 属性情報を確認する(PLATEAU SDKのエディタ機能) PLATEAU SDKウィンドウの「属性情報」タブを開いた状態で地物をクリックすると、 その地物IDと属性情報が表示されます。 シーンビュー上のピンク色の線は、選択中の主要地物の範囲を示します。 シーンビュー上の緑色の線は、選択中の最小地物の範囲を示します。 地物IDがシーンビュー中の文字で表示され、属性情報は属性情報ウィンドウのテキストボックスに表示されます。 主要地物と最小地物について 例えば、建物を主要地物単位でインポートした場合は、1つのゲームオブジェクトおよび1つのメッシュで1つの建物を表します。 その1つのメッシュを分解すると、「壁」「屋根」などのパーツになります。 この場合、建物全体が主要地物であり、壁、屋根などのパーツが最小地物に該当します。 ここで建物をクリックして属性情報を表示すると、主要地物（建物全体、1つのメッシュ）としての属性情報と、最小地物（壁や屋根など、メッシュの一部分）としての属性情報が両方表示されます。 建物を最小地物単位でインポートした場合、壁や屋根ごとにゲームオブジェクトおよびメッシュが分かれます。 この場合、最小地物ゲームオブジェクトの親ゲームオブジェクトから主要地物の情報を取得します。 建物を地域単位でインポートした場合、複数の主要地物が結合されます。 この場合、メッシュの一部分として主要地物および最小地物の情報を取得できます。 属性情報を確認する（ランタイム） ランタイムで、クリックした建物の情報を表示するサンプルを用意しています。 次の方法で確認できます。 下図のボタンをクリックして Attributes Sample をインポートします。 図は Package Manager の Import ボタンを押している様子です。 シーン AttributesSample を開きます。 Playボタンで再生します。 クリックした建物の情報が画面に表示されます。 ソースコード ClickToShowAttributes.cs の中に、この実装とコメントでの説明が記載されています。 都市モデルの情報を表示 PlateauSDKでインポートした都市オブジェクトには属性等の情報が含まれています。 情報にアクセスするには、都市オブジェクトであるGameObjectにアタッチされた PLATEAUCityObjectGroup コンポーネントを使用します。 PLATEAUCityObjectGroup コンポーネントには都市オブジェクトの持つ個別の情報がJson形式で表示されています。 このJsonの内容は、 PLATEAUCityObjectGroup.CityObjects から利用可能なデータ CityObjectList として取得できます。 CityObjectList.rootCityObjects リストには、 CityObject が格納されています。これは地域単位でのインポートの場合は複数になり、そうでないときは1つになります。 CityObject の属性を取得することで地物（建物など）の情報を取得できます。 CityObject.Children には、都市オブジェクトの階層の子に当たる CityObject が格納されます。 属性とは 都市オブジェクトの情報は「属性」として取得できます。 属性は例えば (String) 大字・町コード => 42, (String) 防火及び準防火地域 => 準防火地域 のように、キーと値のペアからなる辞書形式の情報です。 属性辞書 Attributes は CityObject.AttributesMap メソッドで取得できます。 Attributes.DebugString() をコールすると、属性情報をすべて文字列にして返します。 Attributes.TryGetValue(\"key\", out value) によってキーに対応する Attributes.Value を取得できます。 Attributes.Value の具体的な値は文字列型として取得できるか、または 子の属性（属性は入れ子になることもあります）として取得できるかのいずれかです。 属性が入れ子になっている例は次のとおりです。 (AttributeSet) 多摩水系多摩川、浅川、大栗川洪水浸水想定区域（想定最大規模） => [ { (String) 浸水ランク => 2 } { (Measure) 浸水深 => 0.990 } { (Measure) 継続時間 => 0.68 } { (String) 規模 => L2 } ]} 上の例において、(括弧)内の文字は属性の型を示します。 属性値は次の型があります。: AttributeSet, String, Double, Integer, Data, Uri, Measure AttributeSet以外の型はすべて内部的には文字列型であり、 Attributes.Value.StringValue で値を取得できます。 入れ子AttributeSetの値は StringValue ではなく Attributes.Value.AttributesMapValue で取得できます。 属性値の型は Attributes.Value.Type で取得でき、この値が AttributeSet である場合は Attributes.Value.AttributesMapValue で子の Attributes を取得できます。 Attributes.Value.Type がそれ以外 (String, Doubleなど) である場合は Attributes.Value.StringValue で文字列を取得できます。"
  },
  "manual/ChangeColorByAttrs.html": {
    "href": "manual/ChangeColorByAttrs.html",
    "title": "属性情報によって色分けする | PLATEAU SDK for Unity",
    "keywords": "属性情報によって色分けする 上図は土地計画の区分を色分けするサンプルです。 上図は水害リスクを色分けするサンプルです。 このサンプルでは、土地計画決定情報および水害時の想定浸水高に関する属性情報を読み取り、それに応じてランタイムで色を変えます。 サンプルを開く このサンプルは次の場所にあります： (PLATEAU SDKのサンプルディレクトリ)/AttributesColorSample/AttributesSample.unity サンプルシーンを開き、Unityの再生ボタンを押すと地域ごとに色が付きます。 また、左上のボタンから色分けする区分を変更できます。 なお、実行には時間がかかる場合があります。 属性情報を読み取り、色を変えるスクリプトは次の場所にあります: (PLATEAU SDKのサンプルディレクトリ)/AttributesColorSample/AttributesColorSample.cs サンプルコード サンプルコード全文 属性情報に応じて色分けするサンプルコード、 AttributesColorSample.cs の内容は以下のとおりです。 using PLATEAU.CityInfo; using UnityEngine; /// <summary> /// ランタイムで、PLATEAUの属性情報に応じて色を分けるサンプルです。 /// </summary> public class AttributesColorSample : MonoBehaviour { /// <summary> 色分けしたいターゲットを指定します。 </summary> [SerializeField] private Transform targetParent; private void Awake() { // PLATEAUCityObjectGroupコンポーネントに属性情報が格納されており、ランタイムで読み込むことができます。 var cityObjGroups = targetParent.GetComponentsInChildren<PLATEAUCityObjectGroup>(); foreach(var cityObjGroup in cityObjGroups) { var target = cityObjGroup.transform; foreach (var cityObj in cityObjGroup.GetAllCityObjects()) { // 属性情報（キーバリューペアが集まったもの）を取得します。 var attributes = cityObj.AttributesMap; // 属性情報のうち、土地計画上の区分を取得して色分けします。 if (attributes.TryGetValue(\"urf:function\", out var landFuncAttr)) { string landFuncName = landFuncAttr.StringValue; var color = ColorByLandFuncName(landFuncName); ChangeMaterialByColor(target, color); } // 属性情報のうち、水害時の想定浸水高さを取得します。 if (attributes.TryGetValue(\"uro:floodingRiskAttribute\", out var disasterRiskAttr)) { if (disasterRiskAttr.AttributesMapValue.TryGetValue(\"uro:rank\", out var depthValue)) { var rank = depthValue.StringValue; var color = ColorByFloodingRank(rank); ChangeMaterialByColor(target, color); } } } } } private Color ColorByLandFuncName(string landFuncName) { Color matColor = Color.white; if (landFuncName.Contains(\"第1種住居地域\")) { matColor = new Color(0.1f, 0.8f, 0.1f); } else if (landFuncName.Contains(\"第2種住居地域\")) { matColor = new Color(0.3f, 0.7f, 0.9f); } else if (landFuncName.Contains(\"商業地域\")) { matColor = new Color(0.8f, 0.8f, 0.5f); } else if (landFuncName.Contains(\"高度地区\")) { matColor = new Color(0.8f, 0.5f, 0.5f); } else if (landFuncName.Contains(\"準工業地域\")) { matColor = new Color(0.8f, 0.5f, 0f); } else if (landFuncName.Contains(\"準防火地域\")) { matColor = new Color(0.9f, 0.1f, 0.4f); } else if (landFuncName.Contains(\"防火地域\")) { matColor = new Color(0.9f, 0.2f, 0.2f); } return matColor; } private Color ColorByFloodingRank(string rank) { Color matColor = Color.white; if (rank == \"0.5m未満\") { matColor = new Color(0f, 0f, 1f); } else if (rank == \"0.5m以上3m未満\") { matColor = new Color(1.0f, 1.0f, 0f); } else if (rank == \"3m以上5m未満\") { matColor = new Color(1.0f, 0f, 0f); } return matColor; } private void ChangeMaterialByColor(Transform target, Color color) { var meshRenderer = target.GetComponent<MeshRenderer>(); if (meshRenderer == null) return; var material = new Material(meshRenderer.material) { color = color }; meshRenderer.material = material; } } サンプルコード解説 上のコードを解説します。 属性情報を取得するには、まず各地物ゲームオブジェクトに対してインポート時に付与される PLATEAUCityObjectGroup コンポーネントにアクセスします。 // コンポーネントにアクセスするところから始めます。 var cityObjGroups = targetParent.GetComponentsInChildren<PLATEAUCityObjectGroup>(); foreach(var cityObjGroup in cityObjGroups) { // ここで各コンポーネントに保存されている属性情報にアクセスします。 } コンポーネント内に地物に関する情報が保存されています。 インポート時に地域単位に設定した場合、 1つのコンポーネントの中に複数の地物情報( CityObject )が入っています。 主要地物単位、または最小地物単位の場合は CityObject は1つです。 いくつであっても、 cityObjectGroup.GetAllCityObjects() で CityObject を取得できます。 foreach (var cityObj in cityObjGroup.GetAllCityObjects()) { // ここでCityObjectにアクセスします。 } CityObject から属性情報にアクセスしたり、地物型が何であるかを取得したりできます。 // 属性情報（キーバリューペアが集まったもの）を取得します。 var attributes = cityObj.AttributesMap; 属性情報はキーとバリューのペアが集まったものです。 バリューの型は、 String 型または入れ子の AttributesMap (キーバリューの組が集まったもの) のどちらかであり、対応するgetterで値を取得できます。 なお、Double型など他の型のgetterもありますが、内部的には単にStringをパースしたものです。 下はString型の属性情報を取得する例です。 // 属性情報のうち、土地計画上の区分を取得して色分けします。 if (attributes.TryGetValue(\"urf:function\", out var landFuncAttr)) { string landFuncName = landFuncAttr.StringValue; var color = // ここを\"第1種住居地域\"など属性情報の値に応じて場合分けで設定 ChangeMaterialByColor(target, color); } 下は、属性情報が入れ子になっているパターン（バリューがキーバリューセットである）ときに値を取得する例です。 uro:floodingRiskAttribute をキーとする入れ子で、キー uro:rank の値を取得しています。 // 属性情報のうち、水害時の想定浸水高さを取得します。 if (attributes.TryGetValue(\"uro:floodingRiskAttribute\", out var disasterRiskAttr)) { if (disasterRiskAttr.AttributesMapValue.TryGetValue(\"uro:rank\", out var depthValue)) { var rank = depthValue.StringValue; var color = ColorByFloodingRank(rank); ChangeMaterialByColor(target, color); } } 属性値に応じてマテリアルのMainColorを変えることで、属性情報を可視化できます。 // マテリアルの色を変えます。 private void ChangeMaterialByColor(Transform target, Color color) { var meshRenderer = target.GetComponent<MeshRenderer>(); if (meshRenderer == null) return; var material = new Material(meshRenderer.material) { color = color }; meshRenderer.material = material; }"
  },
  "manual/DisplayAttrs.html": {
    "href": "manual/DisplayAttrs.html",
    "title": "属性情報を表示する | PLATEAU SDK for Unity",
    "keywords": "属性情報を表示する このサンプルを再生して地物をクリックすると、その属性情報が画面に表示されます。 サンプルの開き方 このサンプルは次の場所にあります： (PLATEAU SDKのサンプルディレクトリ)/AttributesDisplaySample/AttributesDisplaySample.unity サンプルスクリプトは次の場所にあります： (PLATEAU SDKのサンプルディレクトリ)/AttributesDisplaySample/Scripts ClickToShowAttributes.cs クリックされた地物の情報を取得し、UIに送ります。 クリックされた地物に付与されている PLATEAUCityObjectGroup から CityObject を取得し、 cityObj.DebugString() で文字列にします。 AttributesDisplay.cs 情報表示のUIを制御します。 サンプルスクリプト解説 サンプルスクリプト全文 ClickToShowAttributes.cs using System; using System.IO; using System.Linq; using System.Text; using PLATEAU.CityInfo; using PLATEAU.Util; using UnityEngine; namespace PLATEAU.Samples.Scripts { /// <summary> /// クリック位置にレイキャストして、当たった都市オブジェクトの属性を Canvas に表示します。 /// </summary> public class ClickToShowAttributes : MonoBehaviour { [SerializeField] private AttributesDisplay display; private Camera mainCamera; /// <summary> これ以上の文字数は省略して表示します </summary> private const int CharacterLimit = 15000; private void Start() { this.mainCamera = Camera.main; if (this.mainCamera == null) { Debug.LogError(\"メインカメラがありません。\"); } } private void Update() { if (Input.GetMouseButtonDown(0)) // 左クリックで { var ray = this.mainCamera.ScreenPointToRay(Input.mousePosition); // クリック位置に bool isOverUI = UnityEngine.EventSystems.EventSystem.current.IsPointerOverGameObject(); if (Physics.Raycast(ray, out var hit) & !isOverUI) // レイキャストして当たったとき { var cityObjGroup = hit.transform.GetComponent<PLATEAUCityObjectGroup>(); // その都市オブジェクトを取得します。 if (cityObjGroup != null) { PrintAttributesToCanvas(cityObjGroup); } } } } /// <summary> /// 都市オブジェクトの属性を取得して表示します。 /// </summary> private void PrintAttributesToCanvas(PLATEAUCityObjectGroup cityObjGroup) { // インポートされた各ゲームオブジェクトには PLATEAUCityObjectGroup コンポーネントがアタッチされており、 // その中に属性情報が json で保存されています。 json をデシリアライズします。 var cityObjectList = cityObjGroup.CityObjects; // 複数の PLATEAU 地物が結合されて1つのゲームオブジェクトになっている場合があるため、 // 1つのゲームオブジェクトから取得できる cityObjects の数は1つまたは複数になっています。 var rootCityObjects = cityObjectList.rootCityObjects; var attributesSb = new StringBuilder(); foreach (var cityObj in rootCityObjects) { // 属性情報を見やすい形式の文字列にします。 attributesSb.Append(cityObj.DebugString()); attributesSb.Append(\"\\n\\n\"); } // 最大文字数の範囲内で属性情報を表示します。 string displayText = attributesSb.Length > CharacterLimit ? attributesSb.ToString()[..CharacterLimit] + \"\\n\\n(最大文字数に達しました)\" : attributesSb.ToString(); this.display.AttributesText = displayText; // クリックしたゲームオブジェクトの、最初の主要地物のGmlIDと高さと住所をヘッダーUIに表示します。 var headerSb = new StringBuilder(); var firstPrimaryObj = cityObjGroup.PrimaryCityObjects.FirstOrDefault(); if (firstPrimaryObj != null) { // 主要地物のGmlIDを取得します。 headerSb.Append(firstPrimaryObj.GmlID); headerSb.Append(\"\\n\"); // 高さを取得します。 var attributesMap = firstPrimaryObj.AttributesMap; // 高さは、PLATEAUの属性情報の中では \"bldg:measuredheight\" というキーで格納されています。 if (attributesMap.TryGetValue(\"bldg:measuredheight\", out var attribute)) { // 属性は keyとvalue のペアですが、valueの型は string,double,attribute(入れ子)などいくつかパターンがあります。 // attribute.Type で型を判別し、型に応じたゲッターを使って値を取得できます。例えば valueの型が文字列に変換可能であれば attribute.StringValue で値を取得できます。 headerSb.Append($\"高さ: {Convert.ToString(attribute.StringValue)}\"); }; // 住所を取得します。 // 住所は、PLATEAUの属性情報では \"uro:buildingIDAttribute\"というキーの中で、キーバリュー辞書が入れ子になっている中の \"uro:city\" というキーで取得できます。 if (attributesMap.TryGetValue(\"uro:buildingIDAttribute\", out var buildingAttr)) // 入れ子キーの外側です { // 属性のキーバリューペア(Attributes)で入れ子になっているものを取得します。 // キー uro:buildingIDAttribute の中に入れ子で0個以上のキーバリューペアがあり、 // そのキー uro:city からバリュー（住所）を取得します。 if(buildingAttr.AttributesMapValue.TryGetValue(\"uro:city\", out var addressAttr)) // 入れ子キーの内側です { headerSb.Append($\" 住所: {addressAttr.StringValue}\"); } } } this.display.TitleText = headerSb.ToString(); } private void NotifyLoadFailure() { this.display.TitleText = \"\"; this.display.AttributesText = \"読込失敗\"; } private void Awake() { if (this.display == null) { Debug.LogError($\"{nameof(AttributesDisplay)} が null です。インスペクタから設定してください。\"); } } } } AttributesDisplay.cs using UnityEngine; using UnityEngine.UI; namespace PLATEAU.Samples.Scripts { public class AttributesDisplay : MonoBehaviour { [SerializeField] private Text titleText; [SerializeField] private Text attributesText; public string TitleText { set => this.titleText.text = value; } public string AttributesText { set => this.attributesText.text = value; } private void Awake() { if (this.titleText == null) { Debug.LogError($\"{nameof(this.titleText)} が null です。インスペクタから設定してください。\"); } if (this.attributesText == null) { Debug.LogError($\"{nameof(this.attributesText)} が null です。インスペクタから設定してください。\"); } } } } ソースコード解説 上のソースコードを解説します。 まずクリックした箇所の地物を取得するためにレイを飛ばします。 ここでは、レイを検出するために地物にはコライダーが付いていることを前提とします。 また、クリックしたのが地物であるかを検出するため、地物にはPLATEAUCityObjectGroupが付いていることを前提とします。 if (Input.GetMouseButtonDown(0)) // 左クリックで { var ray = this.mainCamera.ScreenPointToRay(Input.mousePosition); // クリック位置に bool isOverUI = UnityEngine.EventSystems.EventSystem.current.IsPointerOverGameObject(); if (Physics.Raycast(ray, out var hit) & !isOverUI) // レイキャストして当たったとき { var cityObjGroup = hit.transform.GetComponent<PLATEAUCityObjectGroup>(); // その都市オブジェクトを取得します。 if (cityObjGroup != null) { PrintAttributesToCanvas(cityObjGroup); } } } 地物に付いているコンポーネント PLATEAUCityObjectGroup から情報を取得します。 地物の情報をデバッグ目的で確認するなら、 cityObject.DebugString() を使って 地物の情報を整形されたテキストにまとめることができます。 今回は、DebugStringを画面に表示することにします。 // インポートされた各ゲームオブジェクトには PLATEAUCityObjectGroup コンポーネントがアタッチされており、 // その中に属性情報が json で保存されています。 json をデシリアライズします。 var cityObjectList = cityObjGroup.CityObjects; // 複数の PLATEAU 地物が結合されて1つのゲームオブジェクトになっている場合があるため、 // 1つのゲームオブジェクトから取得できる cityObjects の数は1つまたは複数になっています。 var rootCityObjects = cityObjectList.rootCityObjects; var attributesSb = new StringBuilder(); foreach (var cityObj in rootCityObjects) { // 属性情報を見やすい形式の文字列にします。 attributesSb.Append(cityObj.DebugString()); attributesSb.Append(\"\\n\\n\"); } 上記のとおり、 DebugString() でも属性情報を確認できますが、次に具体的な属性情報にアクセスしてみます。 今回のサンプルでは、建物を主要地物単位でインポートしたものを利用しています。 そのため、ゲームオブジェクトは1つの建物ごとの粒度で分かれているため、 cityObjectGroup.PrimaryCityObjects で1つの建物の情報(CityObject)を取得できます。 cityObject.AttributesMap で属性情報の組を取得でき、 attributesMap.TryGetValue で属性情報のキーを元に値を取得できます。 下の例では、高さのキー bldg.measuredheight から高さを取得します。 また、住所を取得するために、キー uro:buildingIDAttribute の中に入れ子で入っている 属性情報マップのキー uro:city から値を取得します。 // クリックしたゲームオブジェクトの、最初の主要地物のGmlIDと高さと住所をヘッダーUIに表示します。 var headerSb = new StringBuilder(); var firstPrimaryObj = cityObjGroup.PrimaryCityObjects.FirstOrDefault(); if (firstPrimaryObj != null) { // 主要地物のGmlIDを取得します。 headerSb.Append(firstPrimaryObj.GmlID); headerSb.Append(\"\\n\"); // 高さを取得します。 var attributesMap = firstPrimaryObj.AttributesMap; // 高さは、PLATEAUの属性情報の中では \"bldg:measuredheight\" というキーで格納されています。 if (attributesMap.TryGetValue(\"bldg:measuredheight\", out var attribute)) { // 属性は keyとvalue のペアですが、valueの型は string,double,attribute(入れ子)などいくつかパターンがあります。 // attribute.Type で型を判別し、型に応じたゲッターを使って値を取得できます。例えば valueの型が文字列に変換可能であれば attribute.StringValue で値を取得できます。 headerSb.Append($\"高さ: {Convert.ToString(attribute.StringValue)}\"); }; // 住所を取得します。 // 住所は、PLATEAUの属性情報では \"uro:buildingIDAttribute\"というキーの中で、キーバリュー辞書が入れ子になっている中の \"uro:city\" というキーで取得できます。 if (attributesMap.TryGetValue(\"uro:buildingIDAttribute\", out var buildingAttr)) // 入れ子キーの外側です { // 属性のキーバリューペア(Attributes)で入れ子になっているものを取得します。 // キー uro:buildingIDAttribute の中に入れ子で0個以上のキーバリューペアがあり、 // そのキー uro:city からバリュー（住所）を取得します。 if(buildingAttr.AttributesMapValue.TryGetValue(\"uro:city\", out var addressAttr)) // 入れ子キーの内側です { headerSb.Append($\" 住所: {addressAttr.StringValue}\"); } } } this.display.TitleText = headerSb.ToString();"
  },
  "manual/ExportCityModels.html": {
    "href": "manual/ExportCityModels.html",
    "title": "都市モデルのエクスポート | PLATEAU SDK for Unity",
    "keywords": "都市モデルのエクスポート Unityのシーンに配置された都市の3Dモデルを、objファイルや gltfファイルとしてエクスポートできます。 このページではエクスポートの手順を説明します。 前提 Unityのシーンに都市モデルがインポートされていることが前提です。 インポートの方法については 都市モデルのインポート をご覧ください。 エクスポート手順 エクスポート対象の指定 Unityのメニューバーから PLATEAU → PLATEAU SDK を選択します。 表示されるウィンドウの上部に3つのタブ「インポート、モデル調整、エクスポート」があります。 このうちエクスポートを選択します。 選択オブジェクト からエクスポート対象を選択します。 対象として選択できるのはインポート時に生成されたゲームオブジェクトのうち、 親子関係における最上位のものです。 親子関係の最上位には自動で PLATEAUInstancedCityModel コンポーネントが付与されています。 このコンポーネントを持つゲームオブジェクトが選択対象となります。 出力形式を選択します。 OBJ形式か、GLTF形式かを選択します。 ただし、OBJ形式はフォーマットの仕様上、後述の技術的な制約があります。 出力オプションの設定 オプションの設定項目について説明します。 GLTFフォーマット 出力形式がGLTFのときのみ表示される設定項目です。 フォーマットを次から選択します。 GLTF 3Dモデル、テクスチャ、binファイルを別々のファイルとするフォーマットです。 GLB 3Dモデルとその関連データをまとめて1つのファイルとするフォーマットです。 テクスチャ 出力にテクスチャを含めるかどうかを設定します。チェックが付いていれば含みます。 非アクティブオブジェクトを含める ヒエラルキー上で非アクティブになっているゲームオブジェクトを含めるかどうかを設定します。 チェックが外れているとき、非アクティブなものを出力から除外します。 ここでいう 非アクティブ とは、下図のチェックマークが自身または親において外れており、 ヒエラルキービュー上で文字色が薄くなっている状態を指します。 座標変換 座標の基準点を設定します。 Local (ローカル) のとき: ポリゴンの座標は PLATEAUInstancedCityModel の位置を原点とした座標で表されます。 Plane Cartesian (直交座標系) のとき: ポリゴンの座標は、国土交通省が定める直交座標系のうち、インポート時に選択した直交座標系を原点とするよう平行移動されます。 上図は 国土地理院のWebサイト「わかりやすい平面直角座標系」 より引用 (原点マークは別途追記) 2つの使い分けについて 原点付近に3Dモデルが来るようにしたいときは Local 原点から遠い位置に3Dモデルが配置されますが、複数の異なる都市をエクスポートするときに位置の整合性を取りたいときは Plane Cartesian が利用できます。 座標軸 エクスポートした objファイルを Unityにインポートしたい場合は、 後述の理由で WUN を指定してください。 座標軸設定の趣旨: x,y,z 軸がどの方向を向いているかはアプリケーションによって異なりますが、 この設定項目によって座標軸の違いに合わせて変換できます。 座標軸の名称はアルファベット3文字で表され、 (1文字目,2文字目,3文字目) が (x軸,y軸,z軸) の向きを表します。 例えば、Unityでは x軸が東(East), y軸が上(Up), z軸が北(North) を向くので、 頭文字をとって EUN が Unityの座標系となります。 ただし、Unity向けに objをエクスポートするときは、 後述の理由で EUN ではなく WUN が正しい指定となります。 W は 西(West) を表します。 Note OBJファイルの技術的制約について OBJファイルはそのフォーマットの仕様上、制約があります。 オブジェクトが分割されず、1つのオブジェクトとして出力されます。 その代わり、頂点グループとしてオブジェクト内で領域分けされます。 例えば、Blenderの場合、インポート時に 頂点グループ にチェックを入れると、図のように頂点グループが設定されます。 objファイルを Unity にインポートするとき、左右が反転します。これを防ぎたい場合は、座標系WUNで出力してください。 これは Unity の仕様によるものです。 Unityの座標系は EUN ですが、EUNで出力した objファイルをインポートすると左右反転したモデルになります。 そこで EUN を左右反転させた座標系である WUN で出力すると、Unityにインポートしたときに正しくなります。 このようになる理由は、Unityは objファイルを右手座標系であると解釈し、Unityの左手座標系に合わせるために x座標の正負を反転させるためです。 エクスポート 出力先のフォルダを指定します。 エクスポート ボタンを押してしばらく待ちます。 指定のフォルダに3Dモデルファイルが出力されます。 上図はエクスポートしたobjファイルを Blender で読み込んだものです。 Note エクスポートした3Dモデルを再度Unityに取り込む場合 テクスチャ込みでエクスポートしたものを再度Unityにインポートする場合は、 3Dモデルファイルとそれに対応するテクスチャフォルダを複数選択して Unityのプロジェクトビューにドラッグ＆ドロップしてインポートしてください。"
  },
  "manual/ImportCityModels.html": {
    "href": "manual/ImportCityModels.html",
    "title": "都市モデルのインポート | PLATEAU SDK for Unity",
    "keywords": "都市モデルのインポート このページでは、都市データをUnityプロジェクトにインポートする手順を説明します。 準備 PlateauSDK を導入したUnityプロジェクトを用意します。 SDKの導入方法は インストール を参照してください。 インポート手順 インポート元の選択 Unityのメニューバーから PLATEAU → PLATEAU SDK を選択します。 表示されるウィンドウの上部に4つのタブ「インポート、モデル調整、エクスポート、属性情報」があります。 このうちインポートを選択します。 インポート先で ローカル または サーバー を選択します。 ローカルからインポートする場合 導入したい都市データが自分のコンピュータにある場合はローカルを選択します。 3D都市モデルは G空間情報センターのPLATEAUポータルサイト からダウンロードできます。 CityGML形式のものをダウンロードしてください。 参照 ボタンを押します。都市データのフォルダの選択画面が表示されます。 都市データのフォルダの中には、 udx , codelists という名前のフォルダがあるはずです。 udx から 階層が1つ上 のフォルダを選択します。 サーバーからインポートする場合 サーバー では、PLATEAUのデータサーバーから直接 都市データをインポートできます。 接続先設定 を開くことができますが、設定しなくとも自動でデフォルトのURLに接続されます。 別のURLに接続したい場合のみ、URLを入力して「再接続」ボタンを押してください。 認証トークン は Bearer認証のトークンです。 データセットの選択 で 都道府県 を選択します。 するとその都道府県に対応する データセット が選択肢に出てくるので選びます。 基準座標系の選択 リストのうち、都市が属する場所として近いものを選択します。 適切なものを選ぶと座標の誤差が小さくなります。 ここで選択する座標系は国土交通省が定める平面直角座標系に準拠しています。 詳しくは 国土地理院のWebサイト「わかりやすい平面直角座標系」 をご覧ください。 インポート範囲の選択 範囲選択 ボタンを押します。 現在のUnityシーンに変更がある場合、変更を保存するかどうかを尋ねるダイアログが表示されます。 Save または Don't Save をクリックします。 シーンビューの表示が切り替わり、範囲選択画面になります。 範囲選択画面の操作方法 マウスホイールを上下に回してズームアウト、ズームインします。 マウスホイールを押し込んだままドラッグしてカメラ移動します。 範囲の選択方法については、画面右下に説明があるとおり、 クリックで選択/選択解除 ドラッグで矩形での選択追加 Shift+ドラッグで矩形での選択除外をします。 シーンビュー左上の 決定 ボタンを押して範囲を確定します。すると元のシーンに戻ります。 画面のみかた 青色の線は利用可能な地域を示します。 地域ごとに利用可能なGML種別と対応LODがアイコン形式で表示されます。 対応LODは色で表現されます。画面左下の凡例の色と対応します。 アイコンが多すぎると感じる場合は、画面左下の凡例のチェックを切り替えることでアイコンの表示/非表示をLODごとに切り替えることができます。 地図は国土地理院のサイトから自動でダウンロードされて表示されます。インターネットへの接続が必要です。 区域に表示される番号は、後述の indexmap.pdf に記載の番号と同じです。 メッシュコード検索機能 シーンビュー左上の メッシュコード検索 ボタンを押すと、メッシュコードの番号（地図上で青色で表示される数字）で検索できます。 番号を入力してOKボタンを押すと、その範囲に視界が移動します。 Note 範囲選択画面では、通常はガイド線が格子状に並び、地図は隙間無く表示されます。 しかし、座標系の選択を誤ると、下図のようにガイド線の配置が歪み、地図に隙間ができます。 これは誤った座標系を選択したことによる座標計算の誤差が可視化されたものです。 球体の地球を平面の地図で表現する都合上、基準座標点から離れるほど座標計算の誤差は大きくなります。 範囲選択が完了すると、 範囲選択 ボタンの下に 範囲選択:セット済 という表示がなされ、 その下に 地物別設定 が表示されるようになります。 補足 : 地域の区分を確認したい時は、ローカルにダウンロードしたフォルダに付属している indexmap という名前のpdfファイルをご覧ください。 下図のように地図上に区分が記載されています。 地物別設定 地物の種類ごとにインポートに関する設定を行います。 設定項目について: 一括設定 複数の地物タイプをまとめて設定したい場合に編集してください。 地物タイプごとの設定で「一括設定と同じ」を選択したときに、この設定が適用されます。 「一括設定と同じ」のチェックを外したときは、一括設定にかかわらず、個別に設定を上書きするためのメニューが表示されます。 各設定の意味については後述します。 インポートする チェックが付いている地物タイプのみインポートします。 テクスチャを含める テクスチャが存在する地物タイプで表示される設定項目です。 チェックが付いていて、かつテクスチャがある場合はそれを含めてインポートします。 都市データによってはテクスチャがない場合があり、 その場合はチェックを外した時と同様にデフォルトマテリアルが適用されます。 テクスチャを結合する テクスチャを含める場合、テクスチャを結合するかしないかを設定します。 Note テクスチャ結合すると描画負荷が良くなります PLATEAUのデータはテクスチャの枚数が多い傾向にあり、 結合しないと描画負荷が高くなる傾向にあります。 結合機能を有効にすると、複数のテクスチャを1枚の画像にまとめ、 3DモデルのUVも合わせて調整されます。 それによって描画負荷を改善できます。 例えば、新宿区の2km×2kmのデータについて テクスチャ結合して4096×4096のテクスチャサイズにまとめたとき、 ドローコール数は4160から483に向上し、 あるPCではFPSが70から90に向上しました。 テクスチャ解像度 テクスチャを結合する場合の、結合後のテクスチャの大きさを指定します。 Mesh Collider をセットする チェックが付いている場合、各モデルに Mesh Colliderが追加されます。 インポート後、クリックで属性情報を表示する機能を利用する場合、Mesh Colliderが必要です。 LOD描画設定 複数のLODを利用可能な地物タイプで表示される設定項目です。 バーの左端と右端をドラッグして、インポートするLODの範囲を指定できます。 モデル結合 主要地物単位（建築物,道路等） モデルのメッシュは建物ごとに結合されて出力されます。 建物ごとに地物データを取得できるようにしたい場合はこちらを選択します。 最小地物単位（壁面,屋根面等） 屋根、壁単位など非常に細かくオブジェクトを分けたい場合はこちらを選択します。 地域単位 モデルのメッシュは結合されて出力されます。 オブジェクト数を削減して軽量化できますが、建物ごとの地物データは取得不可になります。 メッシュの結合はある程度の大きさの範囲ごとに行われます。 Note LODとは gmlファイルの中には、都市モデルの形状の細かさを指定したいという需要に対応するため、 複数の形状データが格納されている場合があります。 LOD0がもっとも大雑把な形状で、LOD1, LOD2 と数字が上がるほど細かい形状になります。 建築物の場合、LOD0 は平面、LOD1は平面に一定の高さを付けたもの、LOD2はより細かい形状です。 なお、ここでいう LOD とは PLATEAU の仕様上の LOD を指します。 Unity の機能としての LOD とは異なる概念です。 属性情報を含める 有効化すると、地物の属性情報がシーン中にコンポーネントで保存されます。 下図のように、PLATEAUCityObjectGroupコンポーネント内で属性情報が保持されます。 デフォルトマテリアル PLATEAUの3Dモデルのうち、テクスチャやマテリアル指定がない箇所のマテリアルを指定します。 デフォルトでは、地物タイプに応じたマテリアルが指定されています。 Note 地物の選択について 地物の中にはインポートに時間がかかるものもあるのでご注意ください。 例えば 土地起伏 はデータの範囲が 10km × 10km と非常に広く、 データ容量が重く処理に時間がかかるのでご注意ください。 Note 現実の景観と異なる地物について 地物の種類で「土地利用」と「災害リスク」については、 情報の範囲を示す目印として板状の3Dモデルが表示されます。 土地利用と災害リスクに関するデータが不要な場合は インポートしないか、インポート後オフにすることを推奨します。 上図で赤い格子模様になっている板は、災害リスク範囲の目印です。 Note 道路の高さについて LOD1 の道路は、PLATEAUの仕様上、高さのデータを含みません。 したがって、インポートするとすべて高さ 0 で表現されます。 LOD2 以上の道路は高さが反映されます。 土地に衛星写真や地図を貼り付ける 土地に衛星写真や地図を貼り付けることができます。 設定方法 範囲選択画面で土地起伏の3Dモデルが存在する地域を選択すると、インポート設定に「土地起伏」が表示されます。 土地起伏では、上述の地物別設定に加えて土地起伏専用の設定項目があります。 航空写真または地図を貼り付け チェックがONになっていると機能が有効化されます。 URL 航空写真または地図の画像をダウンロードするためのURLです。 デフォルトでは地理院地図の航空写真のURLが入力されています。 このURLを変更すれば、航空写真だけでなく、国土地理院が提供している多種多様な地図や写真を土地に貼り付けることができます。 利用できる地図については 国土地理院のページ を参照してください。 そのページに記載されているURLを貼り付けることで地図を利用できます。 下図は地図を貼り付けた例です。 下図は陰影起伏図を貼り付けた例です。 URLには文字列 {z}, {x}, {y} を含めるようにしてください。これは地図タイルのxyz座標に変換されます。 地図タイルのxyz座標については 国土地理院のページ を参照してください。 SDKの機能により、土地の座標をもとに文字列 {z}, {x}, {y} を適切な数値に置き換えて画像をダウンロードします。 ズームレベル 地図タイルのズームレベルです。 数値が大きいほど高精細な画像になります。 数値が1つ下がると、画素数が4分の1になります。 ズームレベルは、地図タイルxyz座標のzの値に相当します。 利用可能なズームレベルの検索 ボタンを押すと、現在入力されているURLでどのズームレベルが利用可能なのかを検索します。 検索が完了すると、ズームレベルの入力欄がドロップダウンに変化し、利用可能なズームレベルから選択できるようになります。 この機能でダウンロードされた地図タイルは、自動で1枚の画像に結合され、土地のUVとマテリアルが設定されてインポートされます。 基準座標系からのオフセット値の設定 3Dモデルの原点をどこに置くかを指定します。 デフォルト値として、範囲選択画面で選択した範囲の中心が自動入力されるので、 このままの値でインポート可能です。 3Dモデルの原点位置を調整したい場合のみ値を編集してください。 値の意味: 上のインポート設定で選択した「基準座標系」の原点から、 東西・南北・高さ方向にそれぞれ何メートルの地点を3Dモデルの原点とするかを表します。 基準座標系の原点は次の国土地理院のWebサイトで示されます: 国土地理院のサイト インポートの実行 モデルをインポート ボタンを押します。 ウィンドウを下にスクロールすると、インポート処理の進捗が表示されます。 処理が進むと、都市のオブジェクトが順次シーンに配置されていきます。 進捗表示がすべて「完了」になったらインポート終了です。 インポートのキャンセル インポート処理中に インポートをキャンセルする ボタンを押します。 キャンセル処理中は、ボタンが キャンセル中… の表記に変わります。 再度 モデルをインポート ボタンが表示されたらキャンセル完了です。 Note インポート元となる都市データは Assets/StreamingAssets/.PLATEAU にコピーされます。 .PLATEAU は隠しフォルダである点にご注意ください。Unityのインポート処理を削減する目的でこうなっています。 なお、インポート対象として選択したものに関連するもののみがコピーされます。 Note インポートされた都市モデルは、プレハブ化するとメッシュとテクスチャが missing になってしまいます。 データはシーンに埋め込まれているためです。 プレハブ化またはモデルとテクスチャを別ファイルに分けたい場合は、エクスポート機能を利用して別ファイルに書き出してください。 配置されたゲームオブジェクト階層のトップには、コンポーネント PLATEAUInstancedCityModel がアタッチされます。 このインスペクタから緯度、経度などの情報を確認できます。 エラーログの確認 インポートの結果、計算状況ウィンドウの内容がすべて「完了」となれば良いですが、 ロードできなかったgmlファイルに関しては「失敗」と表示されます。 そのような場合でも、他のgmlファイルのロードが成功していれば、そのgmlに関しては正常にインポートされています。 失敗の場合は Unityのコンソールにエラーログが出力されます。"
  },
  "manual/Installation.html": {
    "href": "manual/Installation.html",
    "title": "インストール | PLATEAU SDK for Unity",
    "keywords": "インストール このページでは PLATEAU SDK for Unity のインストール方法を説明します。 対応Unityバージョンのインストール PLATEAU SDK for Unity で想定するUnityバージョンが リリースページ に記載されています。 そのバージョンがインストールされていない場合は、次の手順でインストールしてください。 Unity Hub をこちらからインストールします 。 Unity Hub とは、Unityのお好きなバージョンをインストールして起動することのできるソフトウェアです。 Unity Hubを起動し、左のサイドバーから インストール → 右上のボタンから エディターをインストール をクリックします。 SDK対応のUnityバージョンを選択し、 インストール を押します。 Unityプロジェクトの作成 Unity Hub の左サイドバーの プロジェクト を押し、右上の 新しいプロジェクト ボタンをクリックします。 新しいプロジェクトの設定画面で、次のように設定します。 画面上部の エディターバージョン を、 リリースページ に記載のバージョンにします。 画面中部の テンプレート は 3D を選択します。 画面右下のプロジェクト名をお好みのものに設定します。 プロジェクトを作成 ボタンを押します。 PLATEAU Unity SDK の導入 PLATEAU SDK for Unity の導入方法は2通りあります。 1つは、配布の tgz ファイルから導入する方法 2つ目に、gitのURL指定で導入する方法です。 どちらか1つを行ってください。 tgzファイルから導入する方法 PLATEAU SDK for Unity のリリースページ から tgzファイルをダウンロードします。 ファイルは解凍せず、そのまま利用します。 Unityのメニューバーから Window → Package Manager を選択します。 Package Manager ウィンドウの左上の＋ボタンから Add pacakge from tarball... を選択します。 ウィンドウのパッケージ一覧に Plateau Unity SDK が表示されたら完了です。 GitのURL指定で導入する方法 Gitを用いて導入するには、Git LFSがお使いのコンピュータにインストールされている必要があります。 Git LFSのインストール方法については こちら を参照してください。 導入したいバージョンを確認するため、 PLATEAU SDK for Unity のリリースページ にアクセスします。 リリースのリンクをクリックし、導入したいバージョンのタグ（画像の箇所）をメモします。 Unityのメニューバーから Window → Package Manager を選択します。 Package Manager ウィンドウの左上の＋ボタンから Add pacakge from git URL... を選択します。 入力欄に次を入力します。 GithubリポジトリのURLに、 #(先ほどメモしたタグ名) を付けたものを入力してください。例えば次のとおりです： https://github.com/Project-PLATEAU/PLATEAU-SDK-for-Unity.git#v1.0.0 なお、 #(タグ名) を省略するとデフォルトブランチになりますが、 デフォルトブランチは内容が予告なく変更されるので推奨しません。 タグ名を記載することを推奨します。 Add ボタンを押します。 ウィンドウのパッケージ一覧に Plateau Unity SDK が表示されたら完了です。 トラブルシューティング うまく導入できない場合、次のことをご確認ください。 お使いのウイルス対策ソフトによっては、SDKに含まれるバイナリファイルが削除されることがあります。ウィルス対策ソフトによってSDKのファイルが削除されないよう設定をお願いします。"
  },
  "manual/ModelAdjust.html": {
    "href": "manual/ModelAdjust.html",
    "title": "モデル修正 | PLATEAU SDK for Unity",
    "keywords": "モデル修正 概要 PLATEAUウィンドウの モデル修正 では、インポートした都市モデルを編集できます。 次の機能があります。 ゲームオブジェクトON/OFF 条件指定で一括でアクティブ化・非アクティブ化します。 マテリアル分け 地物型に応じてマテリアルを分けます。 結合・分離 モデルを結合・分離し、ゲームオブジェクトの粒度を変更します。 操作画面の開き方 Unityのメニューバーから PLATEAU → PLATEAU SDK を選択します。 ウィンドウ上部のタブのうち モデル調整 を選択します。 その下のタブで ゲームオブジェクトON/OFF 、 結合/分離 を切り替えて表示します。 ゲームオブジェクトON/OFF機能 条件指定をしてフィルタリングできます。 ここでいうフィルタリングとは、条件に合致するゲームオブジェクトをアクティブにし、そうでないものを非アクティブにすることを指します。 「重複する地物を表示」にチェックを入れた場合、フィルタリング後に重複している地物について、 もっともLODが高いもののみを残してそれ以外を非表示にします。 表示したい地物の種類をチェックボックスで指定します。 チェックボックスは入れ子構造になっています。 第1階層のチェックボックスは、「建築物」「道路」などのパッケージ種別を指定します。 複数のLODがシーン中に存在する場合、パッケージ種別ごとにLOD範囲選択のスライダーを使ってLODを指定できます。 第2階層のチェックボックスは、「ドア」「屋根」など細かい都市オブジェクト分類での種別を指定します。 Note 都市インポート時のメッシュ結合単位の設定によっては、第2階層の分類チェックマークが動作しない場合があります。 例えば、インポート時に建物を「最小地物単位」に指定した場合、「窓」「屋根面」などでゲームオブジェクトが分かれているので、細かい分類のチェックマークが動作します。 しかし、建物を「主要地物単位」にした場合、建物ごとにゲームオブジェクトが結合されているので、細かい「窓」「屋根面」といった分類は動作しません。 分類指定のチェックマークは入れ子構造になっていますが、第1階層の「建築物」「道路」といった分類は結合単位によらず必ず動作し、 第2階層の「窓」「屋根面」といった細かい分類はインポート時に「最小値物単位」にした場合のみ動作します。 マテリアル分け機能 できること 地物型に応じてマテリアルを設定できます。 例えば上図は、建築物の屋根面を緑色のマテリアルに設定した例です。 操作方法 選択オブジェクト には、現在選択中のゲームオブジェクトが表示されます。これが処理の対象になります。複数選択可能です。 対象は、コンポーネント PLATEAUCityObjectGroup が付与されているゲームオブジェクト、またはその親である必要があります。 対象に PLATEAUCityObjectGroup がない場合、インポート時に属性情報を含める設定にしたことを確認してください。 マテリアル分類 には 地物型 と表示され、地物型に応じてマテリアルを張り替えることを示しています。 今は地物型しか選べませんが、今後は属性情報で分けるモードも追加予定です。 検索 ボタンを押すと、選択対象に含まれる地物型が検索され、ボタン下に列挙されます。 このあとで対象オブジェクトを変更したい場合は、 再選択 ボタンを押します。 粒度 では、処理後に3Dモデルがどの粒度でゲームオブジェクトに分けられるかを選択します。 処理前のゲームオブジェクトを削除するか、残すかを選択します。 地物型ごとにマテリアルを選択します。 画面には、選択した地物に含まれる地物型が列挙されています。 それぞれの地物型について、マテリアルを変更するか、変更する場合はどのマテリアルにするかを指定します。 実行ボタンを押すと、処理を実行します。 結合/分離機能 できること 選択されたゲームオブジェクトの粒度を変更します。 例えば、主要地物単位でインポートされたものを結合して地域単位にまとめたり、分解して最小地物単位にしたりできます。 属性情報も合わせて分割・結合されます。 操作方法 選択オブジェクト には、現在選択中のゲームオブジェクトが表示されます。これが変換対象になります。 選び方は、変換したいゲームオブジェクトの親を1つ選択しても良いですし、変換したい地物を複数選択しても良いです。 単位 では変換後の結合粒度を指定します。 地域単位 ： 3Dモデルが1つのゲームオブジェクトにまとまります。 主要地物単位 ： 例えば建築物の場合、建物1つごとに1つのゲームオブジェクトになります。 最小地物単位 ： 例えば建築物の場合、窓、屋根などのパーツごとに1つのゲームオブジェクトになります。 実行 ボタンで変換を実行します。 実行後、ダイアログが表示され、変換前のゲームオブジェクトを削除するか残すかを選択できます。"
  },
  "manual/runtimeAPI.html": {
    "href": "manual/runtimeAPI.html",
    "title": "ランタイムAPI | PLATEAU SDK for Unity",
    "keywords": "ランタイムAPI このページでは、PLATEAU SDKの機能をUnityエディタ内だけでなくランタイム（実行時）にも利用するための方法を説明します。 APIサンプルの実行方法 ランタイムAPIのサンプルシーンを次の方法で開いて実行できます。 Package ManagerからPLATEAU SDKのサンプルをインポートします。 Assets/Samples/PLATEAU SDK for Unity/(バージョン)/PLATEAU Samples/APISample/RuntimeSample のシーンを開きます 事前に東京都23区のPLATEAUデータをダウンロードしておきます。 サンプルシーンを再生し、「インポート実行」ボタンの上にある入力欄にダウンロードしたフォルダのパスを入力してインポート実行します。 しばらく待つと、シーン中に都市モデルが表示されます。 都市モデルがインポートされた状態で、エクスポートと分割結合を試すことができます。 エクスポートするには、入力欄にエクスポート先のフォルダパスを入力してからエクスポート実行します。 分割結合すると、見た目は変わりませんが、ゲームオブジェクトの粒度が主要地物単位から地域単位に変わっていることをインスペクタから確認できます。 サンプルコードの解説 サンプルコードは次の場所にあります。 Assets/Samples/PLATEAU SDK for Unity/(バージョン)/PLATEAU Samples/APISample/RuntimeAPISample.cs 以下にそのコードを解説します。 インポート /// <summary> /// ランタイムでインポートするコードです。 /// </summary> public async void Import() { // インポートのパスをUnityのテキストフィールドから取得します。 string importPath = importPathInputField.text; // PLATEAUのデータセットの場所をセットします。 var datasetConf = new DatasetSourceConfigLocal(importPath); // インポート対象のメッシュコード（範囲）を指定します。文字列形式の番号の配列からMeshCodeListを生成できます。 var meshCodesStr = new string[] { \"53393652\" }; var meshCodeList = MeshCodeList.CreateFromMeshCodesStr(meshCodesStr); // データセットやメッシュコードから、インポート設定を生成します。 var conf = CityImportConfig.CreateWithAreaSelectResult( new AreaSelectResult(new ConfigBeforeAreaSelect(datasetConf, 9), meshCodeList)); // ここでconfを編集することも可能ですが、このサンプルではデフォルトでインポートします。 await CityImporter.ImportAsync(conf, null, null); } インポート処理は await CityImporter.ImportAsync(conf, null, null); で実行できます。 ここでconfはインポート設定となります。 インポート設定 conf のうち、最低限指定が必要となる項目は次の通りです。 データ一式がどこにあるのか( DatasetSourceConfigLocal ) 座標系の番号は何か(上のサンプルでは 9 としています) インポート対象のメッシュコード（範囲、 MeshCodeList ）はどこか したがって、上のサンプルでは DatasetSourceConfigLocal , MeshCodeList のインスタンスを設定しています。 他にも conf には、地物別の設定など、エディタのGUIで設定可能な項目が含まれています。 このサンプルではそれらの値はデフォルトのままとしています。 エクスポート /// <summary> /// ラインタイムでエクスポートするコードです。 /// </summary> public void Export() { // 前提条件： // 実行するには、ターゲットのstatic batchingをオフにする必要があります。 // そのためにはstaticのチェックをインスペクタから外します。 // エクスポート先をUnityのテキストフィールドから取得します。 string exportDir = exportPathInputField.text; // エクスポート設定です。 var option = new MeshExportOptions(MeshExportOptions.MeshTransformType.Local, true, false, MeshFileFormat.FBX, CoordinateSystem.ENU, new CityExporterFbx()); // 都市モデルを取得します。 var target = FindObjectOfType<PLATEAUInstancedCityModel>(); if (target == null) { Debug.LogError(\"都市モデルが見つかりませんでした。\"); return; } // エクスポートします。 UnityModelExporter.Export(exportDir, target, option); } エクスポート処理は UnityModelExporter.Export(exportDir, target, option) でできます。 ここで exportDir はエクスポート先のパス、 target はエクスポートする都市モデル、 option がエクスポートに関する設定値です。 option こと MeshExportOptions には座標変換、ファイル形式、座標軸の向きが含まれます。 new MeshExportOptions() の最後の引数には、ファイル形式に対応したExporterのインスタンスを渡します。 new CityExporterXXX (XXXはファイル形式) と書けば大丈夫です。 分割結合 /// <summary> /// ランタイムで結合分割（ゲームオブジェクトの粒度の変更）をするコードです。 /// </summary> public async void GranularityConvert() { // 都市オブジェクトを取得します。 var target = FindObjectOfType<PLATEAUInstancedCityModel>(); if (target == null) { Debug.LogError(\"都市モデルが見つかりませんでした。\"); return; } // 分割結合の設定です。 var conf = new GranularityConvertOptionUnity(new GranularityConvertOption(MeshGranularity.PerCityModelArea, 1), new[] { target.gameObject }, true); // 分割結合します。 await new CityGranularityConverter().ConvertAsync(conf); } オブジェクトを分割結合し、粒度を変更します。 await new CityGranularityConverter().ConvertAsync(conf) で実行できます。 ここで conf は分割結合の設定であり、次のように設定できます。 new GranularityConvertOptionUnity(new GranularityConvertOption(ここに粒度を入れる, 1), ここに変換対象の配列を入れる, 元のオブジェクトを消すならtrueで残すならfalse); なお new GranularityConvertOption の2つ目の引数である 1 は、未実装の設定項目のためどの数値をいれても動作に影響しません。"
  },
  "manual/sdkMaterial.html": {
    "href": "manual/sdkMaterial.html",
    "title": "PLATEAU SDKのマテリアルについて | PLATEAU SDK for Unity",
    "keywords": "PLATEAU SDKのマテリアルについて デフォルトマテリアルの見た目を変えたいとき PLATEAU SDKでは地物タイプごとにデフォルトマテリアルが用意されています。 例えば、下図の建物には建築物のデフォルトマテリアルが適用されています。 このマテリアルは独自のPlateauTriplanarシェーダーを利用しているため、UVのない地物にもテクスチャを投影できます。 PLATEAUのモデルにはUVが ない 場合があります。 そのため、ご自分で見た目をカスタマイズする場合でも、SDK付属のPlateauTriplanarシェーダー、またはそれと同様のTriplanar機能を有したシェーダーを利用することを推奨します。 以下に同シェーダーを使ったマテリアルの作成方法を説明します。 SDK付属のシェーダーについて PLATEAU SDKには以下の3つのシェーダーが付属しています。 どれもUVなしでテクスチャを投影できるのが特徴です。 PlateauTriplanarShader(Opaque) 通常のTriplanarシェーダーです。 PlateauTriplanarShader(Transparent) 半透明なTriplanarシェーダーです。 PlateauTriplanarShader(DualTextures) 上下を向いた面と横を向いた面で異なる見た目を表現するTriplanarシェーダーです。 利用例：建築物の上を向いた面をコンクリートの屋根に、側面を窓付きの壁にしたい場合などに利用できます。 マテリアルの作り方 このシェーダーを使ってマテリアルを作成する手順は次のとおりです： 新しいマテリアルを新規作成し、そのシェーダーを PlateauTriplanarShader/PlateauTriplanarShader(Opaque, Transparent, DualTexturesのいずれか)にします。 マテリアルにテクスチャを割り当て、設定します。設定項目は次のとおりです： MainTexture : メインのテクスチャです。 NormalMap : ノーマルマップです。 NormalMapStrength : ノーマルマップの強さです。 Tiling : テクスチャをタイリングさせる大きさです。 Blend : ポリゴンの向きに応じてテクスチャをブレンドさせる程度です。 Metallic : メタリック（金属感の強さ）です。 MetallicTexture : メタリックを表現するテクスチャです。 Roughness : ラフネス（ざらざら感の強さ）です。 RoughnessTexture : ラフネスを表現する強さです。 AmbientOcclusion : アンビエントオクルージョン(環境光の影響を受ける程度)です。 AmbientOcclusionTex : アンビエントオクルージョンを表現するテクスチャです。 EmissionColor : エミッション（発光）の色です。 EmissionTexture : エミッションを表現するテクスチャです。 Opacity (Transparentシェーダーのみ) : 不透明度です。 DualTextureシェーダーでは、上記の設定値がそれぞれ Top と Side の2つに分かれます。Topは上下面、Sideは側面の見た目を設定します。 自作したマテリアルは、インポート後にドラッグ＆ドロップ等で適用できるほか、インポートの設定項目として「デフォルトマテリアル」に指定できます。"
  }
}