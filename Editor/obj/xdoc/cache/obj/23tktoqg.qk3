id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: PLATEAU.CityGML
  commentId: N:PLATEAU.CityGML
  language: CSharp
  name:
    CSharp: PLATEAU.CityGML
    VB: PLATEAU.CityGML
  nameWithType:
    CSharp: PLATEAU.CityGML
    VB: PLATEAU.CityGML
  qualifiedName:
    CSharp: PLATEAU.CityGML
    VB: PLATEAU.CityGML
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: PLATEAU.CityGML.Address
    commentId: T:PLATEAU.CityGML.Address
    language: CSharp
    name:
      CSharp: Address
      VB: Address
    nameWithType:
      CSharp: Address
      VB: Address
    qualifiedName:
      CSharp: PLATEAU.CityGML.Address
      VB: PLATEAU.CityGML.Address
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: Address
      path: ''
      startLine: 2491
    summary: "\n住所情報を保持します。\n<xref href=\"PLATEAU.CityGML.CityObject\" data-throw-if-not-resolved=\"false\"></xref> が <xref href=\"PLATEAU.CityGML.Address\" data-throw-if-not-resolved=\"false\"></xref> を保持します。\n"
    example: []
    syntax:
      content:
        CSharp: public class Address
        VB: Public Class Address
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PLATEAU.CityGML.Address.#ctor(IntPtr)
      commentId: M:PLATEAU.CityGML.Address.#ctor(IntPtr)
      language: CSharp
      name:
        CSharp: Address(IntPtr)
        VB: Address(IntPtr)
      nameWithType:
        CSharp: Address.Address(IntPtr)
        VB: Address.Address(IntPtr)
      qualifiedName:
        CSharp: PLATEAU.CityGML.Address.Address(IntPtr)
        VB: PLATEAU.CityGML.Address.Address(IntPtr)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: .ctor
        path: ''
        startLine: 2495
      syntax:
        content:
          CSharp: public Address(IntPtr handle)
          VB: Public Sub New(handle As IntPtr)
        parameters:
        - id: handle
          type: PLATEAU.IntPtr
      overload: PLATEAU.CityGML.Address.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityGML.Address.Country
      commentId: P:PLATEAU.CityGML.Address.Country
      language: CSharp
      name:
        CSharp: Country
        VB: Country
      nameWithType:
        CSharp: Address.Country
        VB: Address.Country
      qualifiedName:
        CSharp: PLATEAU.CityGML.Address.Country
        VB: PLATEAU.CityGML.Address.Country
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Country
        path: ''
        startLine: 2500
      syntax:
        content:
          CSharp: public string Country { get; }
          VB: Public ReadOnly Property Country As String
        parameters: []
        return:
          type: System.String
      overload: PLATEAU.CityGML.Address.Country*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.Address.Locality
      commentId: P:PLATEAU.CityGML.Address.Locality
      language: CSharp
      name:
        CSharp: Locality
        VB: Locality
      nameWithType:
        CSharp: Address.Locality
        VB: Address.Locality
      qualifiedName:
        CSharp: PLATEAU.CityGML.Address.Locality
        VB: PLATEAU.CityGML.Address.Locality
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Locality
        path: ''
        startLine: 2506
      syntax:
        content:
          CSharp: public string Locality { get; }
          VB: Public ReadOnly Property Locality As String
        parameters: []
        return:
          type: System.String
      overload: PLATEAU.CityGML.Address.Locality*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.Address.PostalCode
      commentId: P:PLATEAU.CityGML.Address.PostalCode
      language: CSharp
      name:
        CSharp: PostalCode
        VB: PostalCode
      nameWithType:
        CSharp: Address.PostalCode
        VB: Address.PostalCode
      qualifiedName:
        CSharp: PLATEAU.CityGML.Address.PostalCode
        VB: PLATEAU.CityGML.Address.PostalCode
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: PostalCode
        path: ''
        startLine: 2512
      syntax:
        content:
          CSharp: public string PostalCode { get; }
          VB: Public ReadOnly Property PostalCode As String
        parameters: []
        return:
          type: System.String
      overload: PLATEAU.CityGML.Address.PostalCode*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.Address.ThoroughFareName
      commentId: P:PLATEAU.CityGML.Address.ThoroughFareName
      language: CSharp
      name:
        CSharp: ThoroughFareName
        VB: ThoroughFareName
      nameWithType:
        CSharp: Address.ThoroughFareName
        VB: Address.ThoroughFareName
      qualifiedName:
        CSharp: PLATEAU.CityGML.Address.ThoroughFareName
        VB: PLATEAU.CityGML.Address.ThoroughFareName
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: ThoroughFareName
        path: ''
        startLine: 2518
      syntax:
        content:
          CSharp: public string ThoroughFareName { get; }
          VB: Public ReadOnly Property ThoroughFareName As String
        parameters: []
        return:
          type: System.String
      overload: PLATEAU.CityGML.Address.ThoroughFareName*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.Address.ThoroughFareNumber
      commentId: P:PLATEAU.CityGML.Address.ThoroughFareNumber
      language: CSharp
      name:
        CSharp: ThoroughFareNumber
        VB: ThoroughFareNumber
      nameWithType:
        CSharp: Address.ThoroughFareNumber
        VB: Address.ThoroughFareNumber
      qualifiedName:
        CSharp: PLATEAU.CityGML.Address.ThoroughFareNumber
        VB: PLATEAU.CityGML.Address.ThoroughFareNumber
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: ThoroughFareNumber
        path: ''
        startLine: 2524
      syntax:
        content:
          CSharp: public string ThoroughFareNumber { get; }
          VB: Public ReadOnly Property ThoroughFareNumber As String
        parameters: []
        return:
          type: System.String
      overload: PLATEAU.CityGML.Address.ThoroughFareNumber*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    references:
      PLATEAU.CityGML.CityObject: 
      PLATEAU.CityGML.Address: 
  - id: PLATEAU.CityGML.Appearance
    commentId: T:PLATEAU.CityGML.Appearance
    language: CSharp
    name:
      CSharp: Appearance
      VB: Appearance
    nameWithType:
      CSharp: Appearance
      VB: Appearance
    qualifiedName:
      CSharp: PLATEAU.CityGML.Appearance
      VB: PLATEAU.CityGML.Appearance
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: Appearance
      path: ''
      startLine: 2540
    summary: "\n<xref href=\"PLATEAU.CityGML.Texture\" data-throw-if-not-resolved=\"false\"></xref> , <xref href=\"PLATEAU.CityGML.Material\" data-throw-if-not-resolved=\"false\"></xref> の基底クラスです。\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Appearance : Object'
        VB: >-
          Public Class Appearance

              Inherits Object
    inheritance:
    - System.Object
    - PLATEAU.CityGML.Object
    inheritedMembers:
    - PLATEAU.CityGML.Object.Handle
    - PLATEAU.CityGML.Object.ID
    - PLATEAU.CityGML.Object.AttributesMap
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PLATEAU.CityGML.Appearance.Type
      commentId: P:PLATEAU.CityGML.Appearance.Type
      language: CSharp
      name:
        CSharp: Type
        VB: Type
      nameWithType:
        CSharp: Appearance.Type
        VB: Appearance.Type
      qualifiedName:
        CSharp: PLATEAU.CityGML.Appearance.Type
        VB: PLATEAU.CityGML.Appearance.Type
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Type
        path: ''
        startLine: 2549
      summary: "\nTexture なら &quot;Texture&quot; という文字列を返します。\n"
      example: []
      syntax:
        content:
          CSharp: public string Type { get; }
          VB: Public ReadOnly Property Type As String
        parameters: []
        return:
          type: System.String
      overload: PLATEAU.CityGML.Appearance.Type*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.Appearance.IsFront
      commentId: P:PLATEAU.CityGML.Appearance.IsFront
      language: CSharp
      name:
        CSharp: IsFront
        VB: IsFront
      nameWithType:
        CSharp: Appearance.IsFront
        VB: Appearance.IsFront
      qualifiedName:
        CSharp: PLATEAU.CityGML.Appearance.IsFront
        VB: PLATEAU.CityGML.Appearance.IsFront
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: IsFront
        path: ''
        startLine: 2553
      syntax:
        content:
          CSharp: public bool IsFront { get; }
          VB: Public ReadOnly Property IsFront As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: PLATEAU.CityGML.Appearance.IsFront*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.Appearance.Themes
      commentId: P:PLATEAU.CityGML.Appearance.Themes
      language: CSharp
      name:
        CSharp: Themes
        VB: Themes
      nameWithType:
        CSharp: Appearance.Themes
        VB: Appearance.Themes
      qualifiedName:
        CSharp: PLATEAU.CityGML.Appearance.Themes
        VB: PLATEAU.CityGML.Appearance.Themes
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Themes
        path: ''
        startLine: 2560
      summary: "\nテーマ名を配列で返します。\n"
      example: []
      syntax:
        content:
          CSharp: public string[] Themes { get; }
          VB: Public ReadOnly Property Themes As String()
        parameters: []
        return:
          type: System.String[]
      overload: PLATEAU.CityGML.Appearance.Themes*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    references:
      PLATEAU.CityGML.Texture: 
      PLATEAU.CityGML.Material: 
  - id: PLATEAU.CityGML.AppearanceTarget
    commentId: T:PLATEAU.CityGML.AppearanceTarget
    language: CSharp
    name:
      CSharp: AppearanceTarget
      VB: AppearanceTarget
    nameWithType:
      CSharp: AppearanceTarget
      VB: AppearanceTarget
    qualifiedName:
      CSharp: PLATEAU.CityGML.AppearanceTarget
      VB: PLATEAU.CityGML.AppearanceTarget
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: AppearanceTarget
      path: ''
      startLine: 2578
    summary: "\n見た目に関する情報のターゲットとなる CityGMLオブジェクトの基底クラスです。\nテーマ名, <xref href=\"PLATEAU.CityGML.TextureTargetDefinition\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"PLATEAU.CityGML.MaterialTargetDefinition\" data-throw-if-not-resolved=\"false\"></xref> を保持し、それらを紐付けます。\n"
    example: []
    syntax:
      content:
        CSharp: 'public class AppearanceTarget : Object'
        VB: >-
          Public Class AppearanceTarget

              Inherits Object
    inheritance:
    - System.Object
    - PLATEAU.CityGML.Object
    inheritedMembers:
    - PLATEAU.CityGML.Object.Handle
    - PLATEAU.CityGML.Object.ID
    - PLATEAU.CityGML.Object.AttributesMap
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitionsCount
      commentId: P:PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitionsCount
      language: CSharp
      name:
        CSharp: TextureTargetDefinitionsCount
        VB: TextureTargetDefinitionsCount
      nameWithType:
        CSharp: AppearanceTarget.TextureTargetDefinitionsCount
        VB: AppearanceTarget.TextureTargetDefinitionsCount
      qualifiedName:
        CSharp: PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitionsCount
        VB: PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitionsCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: TextureTargetDefinitionsCount
        path: ''
        startLine: 2589
      summary: "\n保持する <xref href=\"PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitions\" data-throw-if-not-resolved=\"false\"></xref> の数を返します。\n"
      example: []
      syntax:
        content:
          CSharp: public int TextureTargetDefinitionsCount { get; }
          VB: Public ReadOnly Property TextureTargetDefinitionsCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitionsCount*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitions: 
    - id: PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition(System.Int32)
      commentId: M:PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition(System.Int32)
      language: CSharp
      name:
        CSharp: GetTextureTargetDefinition(Int32)
        VB: GetTextureTargetDefinition(Int32)
      nameWithType:
        CSharp: AppearanceTarget.GetTextureTargetDefinition(Int32)
        VB: AppearanceTarget.GetTextureTargetDefinition(Int32)
      qualifiedName:
        CSharp: PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition(System.Int32)
        VB: PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: GetTextureTargetDefinition
        path: ''
        startLine: 2596
      summary: "\nインデックス指定で <xref href=\"PLATEAU.CityGML.TextureTargetDefinition\" data-throw-if-not-resolved=\"false\"></xref> を取得します。\n"
      example: []
      syntax:
        content:
          CSharp: public TextureTargetDefinition GetTextureTargetDefinition(int index)
          VB: Public Function GetTextureTargetDefinition(index As Integer) As TextureTargetDefinition
        parameters:
        - id: index
          type: System.Int32
        return:
          type: PLATEAU.CityGML.TextureTargetDefinition
      overload: PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        PLATEAU.CityGML.TextureTargetDefinition: 
    - id: PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitions
      commentId: P:PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitions
      language: CSharp
      name:
        CSharp: TextureTargetDefinitions
        VB: TextureTargetDefinitions
      nameWithType:
        CSharp: AppearanceTarget.TextureTargetDefinitions
        VB: AppearanceTarget.TextureTargetDefinitions
      qualifiedName:
        CSharp: PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitions
        VB: PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitions
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: TextureTargetDefinitions
        path: ''
        startLine: 2610
      summary: "\n保持する <xref href=\"PLATEAU.CityGML.TextureTargetDefinition\" data-throw-if-not-resolved=\"false\"></xref> を foreach や LINQ でイテレートするための機能です。\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerable<TextureTargetDefinition> TextureTargetDefinitions { get; }
          VB: Public ReadOnly Property TextureTargetDefinitions As IEnumerable(Of TextureTargetDefinition)
        parameters: []
        return:
          type: PLATEAU.IEnumerable{PLATEAU.CityGML.TextureTargetDefinition}
      overload: PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitions*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        PLATEAU.CityGML.TextureTargetDefinition: 
    - id: PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition(System.String,System.Boolean)
      commentId: M:PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition(System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: GetTextureTargetDefinition(String, Boolean)
        VB: GetTextureTargetDefinition(String, Boolean)
      nameWithType:
        CSharp: AppearanceTarget.GetTextureTargetDefinition(String, Boolean)
        VB: AppearanceTarget.GetTextureTargetDefinition(String, Boolean)
      qualifiedName:
        CSharp: PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition(System.String, System.Boolean)
        VB: PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition(System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: GetTextureTargetDefinition
        path: ''
        startLine: 2626
      summary: "\nテーマ名から <xref href=\"PLATEAU.CityGML.TextureTargetDefinition\" data-throw-if-not-resolved=\"false\"></xref> を取得します。\n与えられたテーマ名に該当するものがない場合は <see cref=\"!:KeyNotFoundException\"></see> を投げます。\n"
      example: []
      syntax:
        content:
          CSharp: public TextureTargetDefinition GetTextureTargetDefinition(string themeName, bool front)
          VB: Public Function GetTextureTargetDefinition(themeName As String, front As Boolean) As TextureTargetDefinition
        parameters:
        - id: themeName
          type: System.String
        - id: front
          type: System.Boolean
        return:
          type: PLATEAU.CityGML.TextureTargetDefinition
      overload: PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        PLATEAU.CityGML.TextureTargetDefinition: 
    - id: PLATEAU.CityGML.AppearanceTarget.TextureThemesCountOfFront(System.Boolean)
      commentId: M:PLATEAU.CityGML.AppearanceTarget.TextureThemesCountOfFront(System.Boolean)
      language: CSharp
      name:
        CSharp: TextureThemesCountOfFront(Boolean)
        VB: TextureThemesCountOfFront(Boolean)
      nameWithType:
        CSharp: AppearanceTarget.TextureThemesCountOfFront(Boolean)
        VB: AppearanceTarget.TextureThemesCountOfFront(Boolean)
      qualifiedName:
        CSharp: PLATEAU.CityGML.AppearanceTarget.TextureThemesCountOfFront(System.Boolean)
        VB: PLATEAU.CityGML.AppearanceTarget.TextureThemesCountOfFront(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: TextureThemesCountOfFront
        path: ''
        startLine: 2646
      summary: "\n保持するテクスチャのテーマのうち、\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">front</code> が与えられたタイプであるものの数を返します。\n"
      example: []
      syntax:
        content:
          CSharp: public int TextureThemesCountOfFront(bool front)
          VB: Public Function TextureThemesCountOfFront(front As Boolean) As Integer
        parameters:
        - id: front
          type: System.Boolean
        return:
          type: System.Int32
      overload: PLATEAU.CityGML.AppearanceTarget.TextureThemesCountOfFront*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityGML.AppearanceTarget.TextureThemeNames(System.Boolean)
      commentId: M:PLATEAU.CityGML.AppearanceTarget.TextureThemeNames(System.Boolean)
      language: CSharp
      name:
        CSharp: TextureThemeNames(Boolean)
        VB: TextureThemeNames(Boolean)
      nameWithType:
        CSharp: AppearanceTarget.TextureThemeNames(Boolean)
        VB: AppearanceTarget.TextureThemeNames(Boolean)
      qualifiedName:
        CSharp: PLATEAU.CityGML.AppearanceTarget.TextureThemeNames(System.Boolean)
        VB: PLATEAU.CityGML.AppearanceTarget.TextureThemeNames(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: TextureThemeNames
        path: ''
        startLine: 2657
      summary: "\nテクスチャのテーマ名(0個以上)を取得して配列で返します。\n"
      example: []
      syntax:
        content:
          CSharp: public string[] TextureThemeNames(bool front)
          VB: Public Function TextureThemeNames(front As Boolean) As String()
        parameters:
        - id: front
          type: System.Boolean
        return:
          type: System.String[]
      overload: PLATEAU.CityGML.AppearanceTarget.TextureThemeNames*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityGML.AppearanceTarget.MaterialThemesCountByFront(System.Boolean)
      commentId: M:PLATEAU.CityGML.AppearanceTarget.MaterialThemesCountByFront(System.Boolean)
      language: CSharp
      name:
        CSharp: MaterialThemesCountByFront(Boolean)
        VB: MaterialThemesCountByFront(Boolean)
      nameWithType:
        CSharp: AppearanceTarget.MaterialThemesCountByFront(Boolean)
        VB: AppearanceTarget.MaterialThemesCountByFront(Boolean)
      qualifiedName:
        CSharp: PLATEAU.CityGML.AppearanceTarget.MaterialThemesCountByFront(System.Boolean)
        VB: PLATEAU.CityGML.AppearanceTarget.MaterialThemesCountByFront(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: MaterialThemesCountByFront
        path: ''
        startLine: 2684
      syntax:
        content:
          CSharp: public int MaterialThemesCountByFront(bool front)
          VB: Public Function MaterialThemesCountByFront(front As Boolean) As Integer
        parameters:
        - id: front
          type: System.Boolean
        return:
          type: System.Int32
      overload: PLATEAU.CityGML.AppearanceTarget.MaterialThemesCountByFront*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityGML.AppearanceTarget.MaterialThemeNames(System.Boolean)
      commentId: M:PLATEAU.CityGML.AppearanceTarget.MaterialThemeNames(System.Boolean)
      language: CSharp
      name:
        CSharp: MaterialThemeNames(Boolean)
        VB: MaterialThemeNames(Boolean)
      nameWithType:
        CSharp: AppearanceTarget.MaterialThemeNames(Boolean)
        VB: AppearanceTarget.MaterialThemeNames(Boolean)
      qualifiedName:
        CSharp: PLATEAU.CityGML.AppearanceTarget.MaterialThemeNames(System.Boolean)
        VB: PLATEAU.CityGML.AppearanceTarget.MaterialThemeNames(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: MaterialThemeNames
        path: ''
        startLine: 2693
      syntax:
        content:
          CSharp: public string[] MaterialThemeNames(bool front)
          VB: Public Function MaterialThemeNames(front As Boolean) As String()
        parameters:
        - id: front
          type: System.Boolean
        return:
          type: System.String[]
      overload: PLATEAU.CityGML.AppearanceTarget.MaterialThemeNames*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityGML.AppearanceTarget.GetMaterialTargetDefinitionByThemeName(System.String,System.Boolean)
      commentId: M:PLATEAU.CityGML.AppearanceTarget.GetMaterialTargetDefinitionByThemeName(System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: GetMaterialTargetDefinitionByThemeName(String, Boolean)
        VB: GetMaterialTargetDefinitionByThemeName(String, Boolean)
      nameWithType:
        CSharp: AppearanceTarget.GetMaterialTargetDefinitionByThemeName(String, Boolean)
        VB: AppearanceTarget.GetMaterialTargetDefinitionByThemeName(String, Boolean)
      qualifiedName:
        CSharp: PLATEAU.CityGML.AppearanceTarget.GetMaterialTargetDefinitionByThemeName(System.String, System.Boolean)
        VB: PLATEAU.CityGML.AppearanceTarget.GetMaterialTargetDefinitionByThemeName(System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: GetMaterialTargetDefinitionByThemeName
        path: ''
        startLine: 2721
      syntax:
        content:
          CSharp: public MaterialTargetDefinition GetMaterialTargetDefinitionByThemeName(string themeName, bool front)
          VB: Public Function GetMaterialTargetDefinitionByThemeName(themeName As String, front As Boolean) As MaterialTargetDefinition
        parameters:
        - id: themeName
          type: System.String
        - id: front
          type: System.Boolean
        return:
          type: PLATEAU.CityGML.MaterialTargetDefinition
      overload: PLATEAU.CityGML.AppearanceTarget.GetMaterialTargetDefinitionByThemeName*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    references:
      PLATEAU.CityGML.TextureTargetDefinition: 
      PLATEAU.CityGML.MaterialTargetDefinition: 
  - id: PLATEAU.CityGML.AppearanceTargetDefinition`1
    commentId: T:PLATEAU.CityGML.AppearanceTargetDefinition`1
    language: CSharp
    name:
      CSharp: AppearanceTargetDefinition<T>
      VB: AppearanceTargetDefinition(Of T)
    nameWithType:
      CSharp: AppearanceTargetDefinition<T>
      VB: AppearanceTargetDefinition(Of T)
    qualifiedName:
      CSharp: PLATEAU.CityGML.AppearanceTargetDefinition<T>
      VB: PLATEAU.CityGML.AppearanceTargetDefinition(Of T)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: AppearanceTargetDefinition
      path: ''
      startLine: 2746
    summary: "\n<xref href=\"PLATEAU.CityGML.TextureTargetDefinition\" data-throw-if-not-resolved=\"false\"></xref> , <xref href=\"PLATEAU.CityGML.MaterialTargetDefinition\" data-throw-if-not-resolved=\"false\"></xref> の基底クラスです。\n<xref href=\"PLATEAU.CityGML.AppearanceTargetDefinition%601.TargetID\" data-throw-if-not-resolved=\"false\"></xref> , <xref href=\"PLATEAU.CityGML.AppearanceTargetDefinition%601.Appearance\" data-throw-if-not-resolved=\"false\"></xref> を保持します。\n<xref href=\"PLATEAU.CityGML.AppearanceTargetDefinition%601.Appearance\" data-throw-if-not-resolved=\"false\"></xref> は <xref href=\"PLATEAU.CityGML.TextureTargetDefinition\" data-throw-if-not-resolved=\"false\"></xref> ならば <xref href=\"PLATEAU.CityGML.Texture\" data-throw-if-not-resolved=\"false\"></xref> 型、\n<xref href=\"PLATEAU.CityGML.MaterialTargetDefinition\" data-throw-if-not-resolved=\"false\"></xref> ならば <xref href=\"PLATEAU.CityGML.Material\" data-throw-if-not-resolved=\"false\"></xref> 型です。\n"
    example: []
    syntax:
      content:
        CSharp: 'public class AppearanceTargetDefinition<T> : Object where T : Appearance'
        VB: >-
          Public Class AppearanceTargetDefinition(Of T As Appearance)

              Inherits Object
      typeParameters:
      - id: T
    inheritance:
    - System.Object
    - PLATEAU.CityGML.Object
    inheritedMembers:
    - PLATEAU.CityGML.Object.Handle
    - PLATEAU.CityGML.Object.ID
    - PLATEAU.CityGML.Object.AttributesMap
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PLATEAU.CityGML.AppearanceTargetDefinition`1.Appearance
      commentId: P:PLATEAU.CityGML.AppearanceTargetDefinition`1.Appearance
      language: CSharp
      name:
        CSharp: Appearance
        VB: Appearance
      nameWithType:
        CSharp: AppearanceTargetDefinition<T>.Appearance
        VB: AppearanceTargetDefinition(Of T).Appearance
      qualifiedName:
        CSharp: PLATEAU.CityGML.AppearanceTargetDefinition<T>.Appearance
        VB: PLATEAU.CityGML.AppearanceTargetDefinition(Of T).Appearance
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Appearance
        path: ''
        startLine: 2756
      syntax:
        content:
          CSharp: public T Appearance { get; }
          VB: Public ReadOnly Property Appearance As T
        parameters: []
        return:
          type: '{T}'
      overload: PLATEAU.CityGML.AppearanceTargetDefinition`1.Appearance*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.AppearanceTargetDefinition`1.TargetID
      commentId: P:PLATEAU.CityGML.AppearanceTargetDefinition`1.TargetID
      language: CSharp
      name:
        CSharp: TargetID
        VB: TargetID
      nameWithType:
        CSharp: AppearanceTargetDefinition<T>.TargetID
        VB: AppearanceTargetDefinition(Of T).TargetID
      qualifiedName:
        CSharp: PLATEAU.CityGML.AppearanceTargetDefinition<T>.TargetID
        VB: PLATEAU.CityGML.AppearanceTargetDefinition(Of T).TargetID
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: TargetID
        path: ''
        startLine: 2776
      syntax:
        content:
          CSharp: public string TargetID { get; }
          VB: Public ReadOnly Property TargetID As String
        parameters: []
        return:
          type: System.String
      overload: PLATEAU.CityGML.AppearanceTargetDefinition`1.TargetID*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    references:
      PLATEAU.CityGML.TextureTargetDefinition: 
      PLATEAU.CityGML.MaterialTargetDefinition: 
      PLATEAU.CityGML.AppearanceTargetDefinition`1.TargetID: 
      PLATEAU.CityGML.AppearanceTargetDefinition`1.Appearance: 
      PLATEAU.CityGML.Texture: 
      PLATEAU.CityGML.Material: 
  - id: PLATEAU.CityGML.AttributesMap
    commentId: T:PLATEAU.CityGML.AttributesMap
    language: CSharp
    name:
      CSharp: AttributesMap
      VB: AttributesMap
    nameWithType:
      CSharp: AttributesMap
      VB: AttributesMap
    qualifiedName:
      CSharp: PLATEAU.CityGML.AttributesMap
      VB: PLATEAU.CityGML.AttributesMap
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: AttributesMap
      path: ''
      startLine: 2812
    summary: "\n属性の辞書です。\n<see cref=\"!:IReadOnlyDictionary&lt;TKey,TValue>\"></see> を実装します。\nstring をキーとし、 <xref href=\"PLATEAU.CityGML.AttributeValue\" data-throw-if-not-resolved=\"false\"></xref> が値になります。\nthis[key] で <xref href=\"PLATEAU.CityGML.AttributeValue\" data-throw-if-not-resolved=\"false\"></xref> が返ります。\n"
    example: []
    syntax:
      content:
        CSharp: 'public class AttributesMap : IReadOnlyDictionary<string, AttributeValue>'
        VB: >-
          Public Class AttributesMap

              Inherits IReadOnlyDictionary(Of String, AttributeValue)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PLATEAU.CityGML.AttributesMap.Count
      commentId: P:PLATEAU.CityGML.AttributesMap.Count
      language: CSharp
      name:
        CSharp: Count
        VB: Count
      nameWithType:
        CSharp: AttributesMap.Count
        VB: AttributesMap.Count
      qualifiedName:
        CSharp: PLATEAU.CityGML.AttributesMap.Count
        VB: PLATEAU.CityGML.AttributesMap.Count
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Count
        path: ''
        startLine: 2823
      summary: '属性の数を返します。 '
      example: []
      syntax:
        content:
          CSharp: public int Count { get; }
          VB: Public ReadOnly Property Count As Integer
        parameters: []
        return:
          type: System.Int32
      overload: PLATEAU.CityGML.AttributesMap.Count*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.AttributesMap.Keys
      commentId: P:PLATEAU.CityGML.AttributesMap.Keys
      language: CSharp
      name:
        CSharp: Keys
        VB: Keys
      nameWithType:
        CSharp: AttributesMap.Keys
        VB: AttributesMap.Keys
      qualifiedName:
        CSharp: PLATEAU.CityGML.AttributesMap.Keys
        VB: PLATEAU.CityGML.AttributesMap.Keys
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Keys
        path: ''
        startLine: 2837
      summary: "\n属性のキーをすべて返します。\n結果はキャッシュされるので2回目以降は速いです。\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerable<string> Keys { get; }
          VB: Public ReadOnly Property Keys As IEnumerable(Of String)
        parameters: []
        return:
          type: PLATEAU.IEnumerable{System.String}
      overload: PLATEAU.CityGML.AttributesMap.Keys*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.AttributesMap.Values
      commentId: P:PLATEAU.CityGML.AttributesMap.Values
      language: CSharp
      name:
        CSharp: Values
        VB: Values
      nameWithType:
        CSharp: AttributesMap.Values
        VB: AttributesMap.Values
      qualifiedName:
        CSharp: PLATEAU.CityGML.AttributesMap.Values
        VB: PLATEAU.CityGML.AttributesMap.Values
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Values
        path: ''
        startLine: 2855
      summary: "\n(key, value) のペアのうち value (<xref href=\"PLATEAU.CityGML.AttributeValue\" data-throw-if-not-resolved=\"false\"></xref>) をすべて返します。\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerable<AttributeValue> Values { get; }
          VB: Public ReadOnly Property Values As IEnumerable(Of AttributeValue)
        parameters: []
        return:
          type: PLATEAU.IEnumerable{PLATEAU.CityGML.AttributeValue}
      overload: PLATEAU.CityGML.AttributesMap.Values*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        PLATEAU.CityGML.AttributeValue: 
    - id: PLATEAU.CityGML.AttributesMap.Item(System.String)
      commentId: P:PLATEAU.CityGML.AttributesMap.Item(System.String)
      language: CSharp
      name:
        CSharp: Item[String]
        VB: Item(String)
      nameWithType:
        CSharp: AttributesMap.Item[String]
        VB: AttributesMap.Item(String)
      qualifiedName:
        CSharp: PLATEAU.CityGML.AttributesMap.Item[System.String]
        VB: PLATEAU.CityGML.AttributesMap.Item(System.String)
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: this[]
        path: ''
        startLine: 2869
      summary: "\n属性のキーから値を返します。\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">key</code> が存在しない場合は <see cref=\"!:KeyNotFoundException\"></see> を投げます。\n例外を投げてほしくない場合は代わりに <xref href=\"PLATEAU.CityGML.AttributesMap.TryGetValue(System.String%2cPLATEAU.CityGML.AttributeValue%40)\" data-throw-if-not-resolved=\"false\"></xref> メソッドを利用してください。\n"
      example: []
      syntax:
        content:
          CSharp: public AttributeValue this[string key] { get; }
          VB: Public ReadOnly Property Item(key As String) As AttributeValue
        parameters:
        - id: key
          type: System.String
        return:
          type: PLATEAU.CityGML.AttributeValue
      overload: PLATEAU.CityGML.AttributesMap.Item*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        PLATEAU.CityGML.AttributesMap.TryGetValue(System.String,PLATEAU.CityGML.AttributeValue@): 
    - id: PLATEAU.CityGML.AttributesMap.ContainsKey(System.String)
      commentId: M:PLATEAU.CityGML.AttributesMap.ContainsKey(System.String)
      language: CSharp
      name:
        CSharp: ContainsKey(String)
        VB: ContainsKey(String)
      nameWithType:
        CSharp: AttributesMap.ContainsKey(String)
        VB: AttributesMap.ContainsKey(String)
      qualifiedName:
        CSharp: PLATEAU.CityGML.AttributesMap.ContainsKey(System.String)
        VB: PLATEAU.CityGML.AttributesMap.ContainsKey(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: ContainsKey
        path: ''
        startLine: 2891
      summary: "\n属性に <code data-dev-comment-type=\"paramref\" class=\"paramref\">key</code> が含まれていれば true,\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">key</code> がなければ false を返します。\n"
      example: []
      syntax:
        content:
          CSharp: public bool ContainsKey(string key)
          VB: Public Function ContainsKey(key As String) As Boolean
        parameters:
        - id: key
          type: System.String
        return:
          type: System.Boolean
      overload: PLATEAU.CityGML.AttributesMap.ContainsKey*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityGML.AttributesMap.TryGetValue(System.String,PLATEAU.CityGML.AttributeValue@)
      commentId: M:PLATEAU.CityGML.AttributesMap.TryGetValue(System.String,PLATEAU.CityGML.AttributeValue@)
      language: CSharp
      name:
        CSharp: TryGetValue(String, out AttributeValue)
        VB: TryGetValue(String, ByRef AttributeValue)
      nameWithType:
        CSharp: AttributesMap.TryGetValue(String, out AttributeValue)
        VB: AttributesMap.TryGetValue(String, ByRef AttributeValue)
      qualifiedName:
        CSharp: PLATEAU.CityGML.AttributesMap.TryGetValue(System.String, out PLATEAU.CityGML.AttributeValue)
        VB: PLATEAU.CityGML.AttributesMap.TryGetValue(System.String, ByRef PLATEAU.CityGML.AttributeValue)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: TryGetValue
        path: ''
        startLine: 2903
      summary: "\n属性辞書の中に <code data-dev-comment-type=\"paramref\" class=\"paramref\">key</code> が存在すればその値を <code data-dev-comment-type=\"paramref\" class=\"paramref\">value</code> に代入して true を返します。\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">key</code> が存在しなければ <code data-dev-comment-type=\"paramref\" class=\"paramref\">value</code> に null を代入して false を返します。\n"
      example: []
      syntax:
        content:
          CSharp: public bool TryGetValue(string key, out AttributeValue value)
          VB: Public Function TryGetValue(key As String, ByRef value As AttributeValue) As Boolean
        parameters:
        - id: key
          type: System.String
        - id: value
          type: PLATEAU.CityGML.AttributeValue
        return:
          type: System.Boolean
      overload: PLATEAU.CityGML.AttributesMap.TryGetValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityGML.AttributesMap.GetEnumerator
      commentId: M:PLATEAU.CityGML.AttributesMap.GetEnumerator
      language: CSharp
      name:
        CSharp: GetEnumerator()
        VB: GetEnumerator()
      nameWithType:
        CSharp: AttributesMap.GetEnumerator()
        VB: AttributesMap.GetEnumerator()
      qualifiedName:
        CSharp: PLATEAU.CityGML.AttributesMap.GetEnumerator()
        VB: PLATEAU.CityGML.AttributesMap.GetEnumerator()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: GetEnumerator
        path: ''
        startLine: 2915
      syntax:
        content:
          CSharp: public IEnumerator<AttrPair> GetEnumerator()
          VB: Public Function GetEnumerator As IEnumerator(Of AttrPair)
        return:
          type: PLATEAU.IEnumerator{AttrPair}
      overload: PLATEAU.CityGML.AttributesMap.GetEnumerator*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityGML.AttributesMap.ToString
      commentId: M:PLATEAU.CityGML.AttributesMap.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: AttributesMap.ToString()
        VB: AttributesMap.ToString()
      qualifiedName:
        CSharp: PLATEAU.CityGML.AttributesMap.ToString()
        VB: PLATEAU.CityGML.AttributesMap.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: ToString
        path: ''
        startLine: 2923
      summary: "\nkey と value と型 のセットをすべて文字にします。\n"
      example: []
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: PLATEAU.CityGML.AttributesMap.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    references:
      PLATEAU.CityGML.AttributeValue: 
  - id: PLATEAU.CityGML.AttributeValue
    commentId: T:PLATEAU.CityGML.AttributeValue
    language: CSharp
    name:
      CSharp: AttributeValue
      VB: AttributeValue
    nameWithType:
      CSharp: AttributeValue
      VB: AttributeValue
    qualifiedName:
      CSharp: PLATEAU.CityGML.AttributeValue
      VB: PLATEAU.CityGML.AttributeValue
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: AttributeValue
      path: ''
      startLine: 3007
    summary: "\n<p>\nPlateau のオブジェクトが持つ属性 (key と value のペア)　のうち、 value の部分です。\nvalue は、内部的には string または 子の属性セットへの参照 のどちらかのデータを保持します。</p>\n\n<p>\nvalue の値がどのような形式であるかを <xref href=\"PLATEAU.CityGML.AttributeType\" data-throw-if-not-resolved=\"false\"></xref> 形式で保持し、<xref href=\"PLATEAU.CityGML.AttributeValue.Type\" data-throw-if-not-resolved=\"false\"></xref> で取得できます。</p>\n\n<p>\n<xref href=\"PLATEAU.CityGML.AttributeValue.Type\" data-throw-if-not-resolved=\"false\"></xref> が String, Double, Integer, Data, Uri, Measure の場合、内部的にはデータは単に string であり、 <xref href=\"PLATEAU.CityGML.AttributeValue.AsString\" data-throw-if-not-resolved=\"false\"></xref> で取得できます。\n<xref href=\"PLATEAU.CityGML.AttributeValue.AsDouble\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"PLATEAU.CityGML.AttributeValue.AsInt\" data-throw-if-not-resolved=\"false\"></xref> プロパティもありますが、それは単に <xref href=\"PLATEAU.CityGML.AttributeValue.AsString\" data-throw-if-not-resolved=\"false\"></xref> を数値にパースするものです。</p>\n\n<p>\n<xref href=\"PLATEAU.CityGML.AttributeValue.Type\" data-throw-if-not-resolved=\"false\"></xref> が <xref href=\"PLATEAU.CityGML.AttributeType.AttributeSet\" data-throw-if-not-resolved=\"false\"></xref> である場合、 この属性の子に属性セットがあることを意味します。\nこの場合は <xref href=\"PLATEAU.CityGML.AttributeValue.AsString\" data-throw-if-not-resolved=\"false\"></xref> は意味を成さず、代わりに <xref href=\"PLATEAU.CityGML.AttributeValue.AsAttrSet\" data-throw-if-not-resolved=\"false\"></xref> で子の属性セットを取得できます。</p>\n"
    example: []
    syntax:
      content:
        CSharp: public class AttributeValue
        VB: Public Class AttributeValue
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PLATEAU.CityGML.AttributeValue.#ctor(IntPtr)
      commentId: M:PLATEAU.CityGML.AttributeValue.#ctor(IntPtr)
      language: CSharp
      name:
        CSharp: AttributeValue(IntPtr)
        VB: AttributeValue(IntPtr)
      nameWithType:
        CSharp: AttributeValue.AttributeValue(IntPtr)
        VB: AttributeValue.AttributeValue(IntPtr)
      qualifiedName:
        CSharp: PLATEAU.CityGML.AttributeValue.AttributeValue(IntPtr)
        VB: PLATEAU.CityGML.AttributeValue.AttributeValue(IntPtr)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: .ctor
        path: ''
        startLine: 3011
      syntax:
        content:
          CSharp: public AttributeValue(IntPtr handle)
          VB: Public Sub New(handle As IntPtr)
        parameters:
        - id: handle
          type: PLATEAU.IntPtr
      overload: PLATEAU.CityGML.AttributeValue.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityGML.AttributeValue.AsString
      commentId: P:PLATEAU.CityGML.AttributeValue.AsString
      language: CSharp
      name:
        CSharp: AsString
        VB: AsString
      nameWithType:
        CSharp: AttributeValue.AsString
        VB: AttributeValue.AsString
      qualifiedName:
        CSharp: PLATEAU.CityGML.AttributeValue.AsString
        VB: PLATEAU.CityGML.AttributeValue.AsString
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: AsString
        path: ''
        startLine: 3021
      summary: "\n属性値を string 形式で取得します。\n<xref href=\"PLATEAU.CityGML.AttributeValue.Type\" data-throw-if-not-resolved=\"false\"></xref> が String, Double, Integer, Data, Uri, Measure の場合に有効です。\n<xref href=\"PLATEAU.CityGML.AttributeValue.Type\" data-throw-if-not-resolved=\"false\"></xref> が <xref href=\"PLATEAU.CityGML.AttributeType.AttributeSet\" data-throw-if-not-resolved=\"false\"></xref> の場合は意味を成しません。\n"
      example: []
      syntax:
        content:
          CSharp: public string AsString { get; }
          VB: Public ReadOnly Property AsString As String
        parameters: []
        return:
          type: System.String
      overload: PLATEAU.CityGML.AttributeValue.AsString*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        PLATEAU.CityGML.AttributeValue.Type: 
        PLATEAU.CityGML.AttributeType.AttributeSet: 
    - id: PLATEAU.CityGML.AttributeValue.AsDouble
      commentId: P:PLATEAU.CityGML.AttributeValue.AsDouble
      language: CSharp
      name:
        CSharp: AsDouble
        VB: AsDouble
      nameWithType:
        CSharp: AttributeValue.AsDouble
        VB: AttributeValue.AsDouble
      qualifiedName:
        CSharp: PLATEAU.CityGML.AttributeValue.AsDouble
        VB: PLATEAU.CityGML.AttributeValue.AsDouble
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: AsDouble
        path: ''
        startLine: 3027
      summary: '属性値を double にパースして返します。 '
      example: []
      syntax:
        content:
          CSharp: public double AsDouble { get; }
          VB: Public ReadOnly Property AsDouble As Double
        parameters: []
        return:
          type: System.Double
      overload: PLATEAU.CityGML.AttributeValue.AsDouble*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.AttributeValue.AsInt
      commentId: P:PLATEAU.CityGML.AttributeValue.AsInt
      language: CSharp
      name:
        CSharp: AsInt
        VB: AsInt
      nameWithType:
        CSharp: AttributeValue.AsInt
        VB: AttributeValue.AsInt
      qualifiedName:
        CSharp: PLATEAU.CityGML.AttributeValue.AsInt
        VB: PLATEAU.CityGML.AttributeValue.AsInt
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: AsInt
        path: ''
        startLine: 3030
      summary: '属性値を int にパースして返します。 '
      example: []
      syntax:
        content:
          CSharp: public int AsInt { get; }
          VB: Public ReadOnly Property AsInt As Integer
        parameters: []
        return:
          type: System.Int32
      overload: PLATEAU.CityGML.AttributeValue.AsInt*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.AttributeValue.Type
      commentId: P:PLATEAU.CityGML.AttributeValue.Type
      language: CSharp
      name:
        CSharp: Type
        VB: Type
      nameWithType:
        CSharp: AttributeValue.Type
        VB: AttributeValue.Type
      qualifiedName:
        CSharp: PLATEAU.CityGML.AttributeValue.Type
        VB: PLATEAU.CityGML.AttributeValue.Type
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Type
        path: ''
        startLine: 3035
      summary: "\n属性の値の想定形式です。<xref href=\"PLATEAU.CityGML.AttributeType\" data-throw-if-not-resolved=\"false\"></xref> 型で返します。\n"
      example: []
      syntax:
        content:
          CSharp: public AttributeType Type { get; }
          VB: Public ReadOnly Property Type As AttributeType
        parameters: []
        return:
          type: PLATEAU.CityGML.AttributeType
      overload: PLATEAU.CityGML.AttributeValue.Type*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        PLATEAU.CityGML.AttributeType: 
    - id: PLATEAU.CityGML.AttributeValue.AsAttrSet
      commentId: P:PLATEAU.CityGML.AttributeValue.AsAttrSet
      language: CSharp
      name:
        CSharp: AsAttrSet
        VB: AsAttrSet
      nameWithType:
        CSharp: AttributeValue.AsAttrSet
        VB: AttributeValue.AsAttrSet
      qualifiedName:
        CSharp: PLATEAU.CityGML.AttributeValue.AsAttrSet
        VB: PLATEAU.CityGML.AttributeValue.AsAttrSet
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: AsAttrSet
        path: ''
        startLine: 3050
      summary: "\n<xref href=\"PLATEAU.CityGML.AttributeValue.Type\" data-throw-if-not-resolved=\"false\"></xref> が <xref href=\"PLATEAU.CityGML.AttributeType.AttributeSet\" data-throw-if-not-resolved=\"false\"></xref> であることを前提に、\n子の <xref href=\"PLATEAU.CityGML.AttributesMap\" data-throw-if-not-resolved=\"false\"></xref> を返します。\n<xref href=\"PLATEAU.CityGML.AttributeValue.Type\" data-throw-if-not-resolved=\"false\"></xref> がその他である場合は意味を成しません。\n"
      example: []
      syntax:
        content:
          CSharp: public AttributesMap AsAttrSet { get; }
          VB: Public ReadOnly Property AsAttrSet As AttributesMap
        parameters: []
        return:
          type: PLATEAU.CityGML.AttributesMap
      overload: PLATEAU.CityGML.AttributeValue.AsAttrSet*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        PLATEAU.CityGML.AttributeValue.Type: 
        PLATEAU.CityGML.AttributeType.AttributeSet: 
        PLATEAU.CityGML.AttributesMap: 
    references:
      PLATEAU.CityGML.AttributeType: 
      PLATEAU.CityGML.AttributeValue.Type: 
      PLATEAU.CityGML.AttributeValue.AsString: 
      PLATEAU.CityGML.AttributeValue.AsDouble: 
      PLATEAU.CityGML.AttributeValue.AsInt: 
      PLATEAU.CityGML.AttributeType.AttributeSet: 
      PLATEAU.CityGML.AttributeValue.AsAttrSet: 
  - id: PLATEAU.CityGML.CityGml
    commentId: T:PLATEAU.CityGML.CityGml
    language: CSharp
    name:
      CSharp: CityGml
      VB: CityGml
    nameWithType:
      CSharp: CityGml
      VB: CityGml
    qualifiedName:
      CSharp: PLATEAU.CityGML.CityGml
      VB: PLATEAU.CityGML.CityGml
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: CityGml
      path: ''
      startLine: 3068
    syntax:
      content:
        CSharp: public static class CityGml
        VB: Public Module CityGml
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: PLATEAU.CityGML.CityGml.Load(System.String,PLATEAU.CityGML.CitygmlParserParams,PLATEAU.CityGML.LogCallbacks,PLATEAU.CityGML.DllLogLevel)
      commentId: M:PLATEAU.CityGML.CityGml.Load(System.String,PLATEAU.CityGML.CitygmlParserParams,PLATEAU.CityGML.LogCallbacks,PLATEAU.CityGML.DllLogLevel)
      language: CSharp
      name:
        CSharp: Load(String, CitygmlParserParams, LogCallbacks, DllLogLevel)
        VB: Load(String, CitygmlParserParams, LogCallbacks, DllLogLevel)
      nameWithType:
        CSharp: CityGml.Load(String, CitygmlParserParams, LogCallbacks, DllLogLevel)
        VB: CityGml.Load(String, CitygmlParserParams, LogCallbacks, DllLogLevel)
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityGml.Load(System.String, PLATEAU.CityGML.CitygmlParserParams, PLATEAU.CityGML.LogCallbacks, PLATEAU.CityGML.DllLogLevel)
        VB: PLATEAU.CityGML.CityGml.Load(System.String, PLATEAU.CityGML.CitygmlParserParams, PLATEAU.CityGML.LogCallbacks, PLATEAU.CityGML.DllLogLevel)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Load
        path: ''
        startLine: 3077
      summary: "\nDLLの機能によって gmlファイルをパースし、CityModelを生成します。\n"
      example: []
      syntax:
        content:
          CSharp: public static CityModel Load(string gmlPath, CitygmlParserParams parserParams, LogCallbacks logCallbacks = null, DllLogLevel logLevel = DllLogLevel.Error)
          VB: Public Shared Function Load(gmlPath As String, parserParams As CitygmlParserParams, logCallbacks As LogCallbacks = Nothing, logLevel As DllLogLevel = DllLogLevel.Error) As CityModel
        parameters:
        - id: gmlPath
          type: System.String
          description: gmlファイルのパスです。
        - id: parserParams
          type: PLATEAU.CityGML.CitygmlParserParams
          description: 変換の設定です。
        - id: logCallbacks
          type: PLATEAU.CityGML.LogCallbacks
          description: ログを受け取るコールバックです。省略または null の場合は C# の標準出力にログを転送します。
        - id: logLevel
          type: PLATEAU.CityGML.DllLogLevel
          description: ログの詳細度です。
        return:
          type: PLATEAU.CityGML.CityModel
      overload: PLATEAU.CityGML.CityGml.Load*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: PLATEAU.CityGML.CityModel
    commentId: T:PLATEAU.CityGML.CityModel
    language: CSharp
    name:
      CSharp: CityModel
      VB: CityModel
    nameWithType:
      CSharp: CityModel
      VB: CityModel
    qualifiedName:
      CSharp: PLATEAU.CityGML.CityModel
      VB: PLATEAU.CityGML.CityModel
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: CityModel
      path: ''
      startLine: 3114
    summary: "\nGMLファイルをパースして得られる街のモデルです。\n0個以上の <xref href=\"PLATEAU.CityGML.CityObject\" data-throw-if-not-resolved=\"false\"></xref> を保持します。\n"
    example: []
    syntax:
      content:
        CSharp: 'public sealed class CityModel : IDisposable'
        VB: >-
          Public NotInheritable Class CityModel

              Inherits IDisposable
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: PLATEAU.CityGML.CityModel.Handle
      commentId: P:PLATEAU.CityGML.CityModel.Handle
      language: CSharp
      name:
        CSharp: Handle
        VB: Handle
      nameWithType:
        CSharp: CityModel.Handle
        VB: CityModel.Handle
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityModel.Handle
        VB: PLATEAU.CityGML.CityModel.Handle
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Handle
        path: ''
        startLine: 3122
      summary: "\nセーフハンドルを取得します。\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr Handle { get; }
          VB: Public ReadOnly Property Handle As IntPtr
        parameters: []
        return:
          type: PLATEAU.IntPtr
      overload: PLATEAU.CityGML.CityModel.Handle*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.CityModel.RootCityObjects
      commentId: P:PLATEAU.CityGML.CityModel.RootCityObjects
      language: CSharp
      name:
        CSharp: RootCityObjects
        VB: RootCityObjects
      nameWithType:
        CSharp: CityModel.RootCityObjects
        VB: CityModel.RootCityObjects
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityModel.RootCityObjects
        VB: PLATEAU.CityGML.CityModel.RootCityObjects
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: RootCityObjects
        path: ''
        startLine: 3127
      summary: "\n<xref href=\"PLATEAU.CityGML.CityModel\" data-throw-if-not-resolved=\"false\"></xref> のトップレベルにある <xref href=\"PLATEAU.CityGML.CityObject\" data-throw-if-not-resolved=\"false\"></xref> の一覧を返します。\n"
      example: []
      syntax:
        content:
          CSharp: public ReadOnlyCollection<CityObject> RootCityObjects { get; }
          VB: Public ReadOnly Property RootCityObjects As ReadOnlyCollection(Of CityObject)
        parameters: []
        return:
          type: PLATEAU.ReadOnlyCollection{PLATEAU.CityGML.CityObject}
      overload: PLATEAU.CityGML.CityModel.RootCityObjects*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        PLATEAU.CityGML.CityModel: 
        PLATEAU.CityGML.CityObject: 
    - id: PLATEAU.CityGML.CityModel.GetCityObjectById(System.String)
      commentId: M:PLATEAU.CityGML.CityModel.GetCityObjectById(System.String)
      language: CSharp
      name:
        CSharp: GetCityObjectById(String)
        VB: GetCityObjectById(String)
      nameWithType:
        CSharp: CityModel.GetCityObjectById(String)
        VB: CityModel.GetCityObjectById(String)
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityModel.GetCityObjectById(System.String)
        VB: PLATEAU.CityGML.CityModel.GetCityObjectById(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: GetCityObjectById
        path: ''
        startLine: 3155
      summary: "\nidから <xref href=\"PLATEAU.CityGML.CityObject\" data-throw-if-not-resolved=\"false\"></xref> を返します。\n該当idのものがない場合は <see cref=\"!:KeyNotFoundException\"></see> を投げます。\n"
      example: []
      syntax:
        content:
          CSharp: public CityObject GetCityObjectById(string id)
          VB: Public Function GetCityObjectById(id As String) As CityObject
        parameters:
        - id: id
          type: System.String
        return:
          type: PLATEAU.CityGML.CityObject
      overload: PLATEAU.CityGML.CityModel.GetCityObjectById*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        PLATEAU.CityGML.CityObject: 
    - id: PLATEAU.CityGML.CityModel.Finalize
      commentId: M:PLATEAU.CityGML.CityModel.Finalize
      language: CSharp
      name:
        CSharp: Finalize()
        VB: Finalize()
      nameWithType:
        CSharp: CityModel.Finalize()
        VB: CityModel.Finalize()
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityModel.Finalize()
        VB: PLATEAU.CityGML.CityModel.Finalize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Finalize
        path: ''
        startLine: 3172
      syntax:
        content:
          CSharp: protected void Finalize()
          VB: Protected Sub Finalize
      overload: PLATEAU.CityGML.CityModel.Finalize*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: PLATEAU.CityGML.CityModel.Dispose
      commentId: M:PLATEAU.CityGML.CityModel.Dispose
      language: CSharp
      name:
        CSharp: Dispose()
        VB: Dispose()
      nameWithType:
        CSharp: CityModel.Dispose()
        VB: CityModel.Dispose()
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityModel.Dispose()
        VB: PLATEAU.CityGML.CityModel.Dispose()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Dispose
        path: ''
        startLine: 3177
      syntax:
        content:
          CSharp: public void Dispose()
          VB: Public Sub Dispose
      overload: PLATEAU.CityGML.CityModel.Dispose*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    references:
      PLATEAU.CityGML.CityObject: 
  - id: PLATEAU.CityGML.CityObject
    commentId: T:PLATEAU.CityGML.CityObject
    language: CSharp
    name:
      CSharp: CityObject
      VB: CityObject
    nameWithType:
      CSharp: CityObject
      VB: CityObject
    qualifiedName:
      CSharp: PLATEAU.CityGML.CityObject
      VB: PLATEAU.CityGML.CityObject
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: CityObject
      path: ''
      startLine: 3203
    summary: "\n<p>\nCityGMLにおける都市オブジェクトです。</p>\n<p>\n<xref href=\"PLATEAU.CityGML.CityModel\" data-throw-if-not-resolved=\"false\"></xref> または 親<xref href=\"PLATEAU.CityGML.CityObject\" data-throw-if-not-resolved=\"false\"></xref> が <xref href=\"PLATEAU.CityGML.CityObject\" data-throw-if-not-resolved=\"false\"></xref> を保持します。</p>\n<p>\nこの<xref href=\"PLATEAU.CityGML.CityObject\" data-throw-if-not-resolved=\"false\"></xref> は <xref href=\"PLATEAU.CityGML.CityObjectType\" data-throw-if-not-resolved=\"false\"></xref> , <xref href=\"PLATEAU.CityGML.Address\" data-throw-if-not-resolved=\"false\"></xref> , 子<xref href=\"PLATEAU.CityGML.CityObject\" data-throw-if-not-resolved=\"false\"></xref> , <xref href=\"PLATEAU.CityGML.Geometry\" data-throw-if-not-resolved=\"false\"></xref> を保持します。\n</p>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class CityObject : FeatureObject'
        VB: >-
          Public Class CityObject

              Inherits FeatureObject
    inheritance:
    - System.Object
    - PLATEAU.CityGML.Object
    - PLATEAU.CityGML.FeatureObject
    inheritedMembers:
    - PLATEAU.CityGML.FeatureObject.Envelope
    - PLATEAU.CityGML.FeatureObject.SetEnvelope(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
    - PLATEAU.CityGML.Object.Handle
    - PLATEAU.CityGML.Object.ID
    - PLATEAU.CityGML.Object.AttributesMap
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PLATEAU.CityGML.CityObject.Type
      commentId: P:PLATEAU.CityGML.CityObject.Type
      language: CSharp
      name:
        CSharp: Type
        VB: Type
      nameWithType:
        CSharp: CityObject.Type
        VB: CityObject.Type
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObject.Type
        VB: PLATEAU.CityGML.CityObject.Type
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Type
        path: ''
        startLine: 3214
      syntax:
        content:
          CSharp: public CityObjectType Type { get; }
          VB: Public ReadOnly Property Type As CityObjectType
        parameters: []
        return:
          type: PLATEAU.CityGML.CityObjectType
      overload: PLATEAU.CityGML.CityObject.Type*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.CityObject.GeometryCount
      commentId: P:PLATEAU.CityGML.CityObject.GeometryCount
      language: CSharp
      name:
        CSharp: GeometryCount
        VB: GeometryCount
      nameWithType:
        CSharp: CityObject.GeometryCount
        VB: CityObject.GeometryCount
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObject.GeometryCount
        VB: PLATEAU.CityGML.CityObject.GeometryCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: GeometryCount
        path: ''
        startLine: 3232
      summary: "\nジオメトリの数を返します。\n"
      example: []
      syntax:
        content:
          CSharp: public int GeometryCount { get; }
          VB: Public ReadOnly Property GeometryCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: PLATEAU.CityGML.CityObject.GeometryCount*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.CityObject.ImplicitGeometryCount
      commentId: P:PLATEAU.CityGML.CityObject.ImplicitGeometryCount
      language: CSharp
      name:
        CSharp: ImplicitGeometryCount
        VB: ImplicitGeometryCount
      nameWithType:
        CSharp: CityObject.ImplicitGeometryCount
        VB: CityObject.ImplicitGeometryCount
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObject.ImplicitGeometryCount
        VB: PLATEAU.CityGML.CityObject.ImplicitGeometryCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: ImplicitGeometryCount
        path: ''
        startLine: 3242
      syntax:
        content:
          CSharp: public int ImplicitGeometryCount { get; }
          VB: Public ReadOnly Property ImplicitGeometryCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: PLATEAU.CityGML.CityObject.ImplicitGeometryCount*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.CityObject.Address
      commentId: P:PLATEAU.CityGML.CityObject.Address
      language: CSharp
      name:
        CSharp: Address
        VB: Address
      nameWithType:
        CSharp: CityObject.Address
        VB: CityObject.Address
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObject.Address
        VB: PLATEAU.CityGML.CityObject.Address
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Address
        path: ''
        startLine: 3252
      syntax:
        content:
          CSharp: public Address Address { get; }
          VB: Public ReadOnly Property Address As Address
        parameters: []
        return:
          type: PLATEAU.CityGML.Address
      overload: PLATEAU.CityGML.CityObject.Address*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.CityObject.ChildCityObjectCount
      commentId: P:PLATEAU.CityGML.CityObject.ChildCityObjectCount
      language: CSharp
      name:
        CSharp: ChildCityObjectCount
        VB: ChildCityObjectCount
      nameWithType:
        CSharp: CityObject.ChildCityObjectCount
        VB: CityObject.ChildCityObjectCount
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObject.ChildCityObjectCount
        VB: PLATEAU.CityGML.CityObject.ChildCityObjectCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: ChildCityObjectCount
        path: ''
        startLine: 3266
      syntax:
        content:
          CSharp: public int ChildCityObjectCount { get; }
          VB: Public ReadOnly Property ChildCityObjectCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: PLATEAU.CityGML.CityObject.ChildCityObjectCount*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.CityObject.GetChildCityObject(System.Int32)
      commentId: M:PLATEAU.CityGML.CityObject.GetChildCityObject(System.Int32)
      language: CSharp
      name:
        CSharp: GetChildCityObject(Int32)
        VB: GetChildCityObject(Int32)
      nameWithType:
        CSharp: CityObject.GetChildCityObject(Int32)
        VB: CityObject.GetChildCityObject(Int32)
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObject.GetChildCityObject(System.Int32)
        VB: PLATEAU.CityGML.CityObject.GetChildCityObject(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: GetChildCityObject
        path: ''
        startLine: 3276
      syntax:
        content:
          CSharp: public CityObject GetChildCityObject(int index)
          VB: Public Function GetChildCityObject(index As Integer) As CityObject
        parameters:
        - id: index
          type: System.Int32
        return:
          type: PLATEAU.CityGML.CityObject
      overload: PLATEAU.CityGML.CityObject.GetChildCityObject*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityGML.CityObject.ChildCityObjects
      commentId: P:PLATEAU.CityGML.CityObject.ChildCityObjects
      language: CSharp
      name:
        CSharp: ChildCityObjects
        VB: ChildCityObjects
      nameWithType:
        CSharp: CityObject.ChildCityObjects
        VB: CityObject.ChildCityObjects
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObject.ChildCityObjects
        VB: PLATEAU.CityGML.CityObject.ChildCityObjects
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: ChildCityObjects
        path: ''
        startLine: 3291
      summary: "\n子<xref href=\"PLATEAU.CityGML.CityObject\" data-throw-if-not-resolved=\"false\"></xref> をforeachやLinqで回したい時に利用できます。\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerable<CityObject> ChildCityObjects { get; }
          VB: Public ReadOnly Property ChildCityObjects As IEnumerable(Of CityObject)
        parameters: []
        return:
          type: PLATEAU.IEnumerable{PLATEAU.CityGML.CityObject}
      overload: PLATEAU.CityGML.CityObject.ChildCityObjects*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        PLATEAU.CityGML.CityObject: 
    - id: PLATEAU.CityGML.CityObject.GetGeometry(System.Int32)
      commentId: M:PLATEAU.CityGML.CityObject.GetGeometry(System.Int32)
      language: CSharp
      name:
        CSharp: GetGeometry(Int32)
        VB: GetGeometry(Int32)
      nameWithType:
        CSharp: CityObject.GetGeometry(Int32)
        VB: CityObject.GetGeometry(Int32)
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObject.GetGeometry(System.Int32)
        VB: PLATEAU.CityGML.CityObject.GetGeometry(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: GetGeometry
        path: ''
        startLine: 3303
      syntax:
        content:
          CSharp: public Geometry GetGeometry(int index)
          VB: Public Function GetGeometry(index As Integer) As Geometry
        parameters:
        - id: index
          type: System.Int32
        return:
          type: PLATEAU.CityGML.Geometry
      overload: PLATEAU.CityGML.CityObject.GetGeometry*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityGML.CityObject.Geometries
      commentId: P:PLATEAU.CityGML.CityObject.Geometries
      language: CSharp
      name:
        CSharp: Geometries
        VB: Geometries
      nameWithType:
        CSharp: CityObject.Geometries
        VB: CityObject.Geometries
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObject.Geometries
        VB: PLATEAU.CityGML.CityObject.Geometries
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Geometries
        path: ''
        startLine: 3317
      summary: "\n各 <xref href=\"PLATEAU.CityGML.Geometry\" data-throw-if-not-resolved=\"false\"></xref> を foreach で回したい時に利用できます。\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerable<Geometry> Geometries { get; }
          VB: Public ReadOnly Property Geometries As IEnumerable(Of Geometry)
        parameters: []
        return:
          type: PLATEAU.IEnumerable{PLATEAU.CityGML.Geometry}
      overload: PLATEAU.CityGML.CityObject.Geometries*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        PLATEAU.CityGML.Geometry: 
    - id: PLATEAU.CityGML.CityObject.CityObjectDescendantsDFS
      commentId: P:PLATEAU.CityGML.CityObject.CityObjectDescendantsDFS
      language: CSharp
      name:
        CSharp: CityObjectDescendantsDFS
        VB: CityObjectDescendantsDFS
      nameWithType:
        CSharp: CityObject.CityObjectDescendantsDFS
        VB: CityObject.CityObjectDescendantsDFS
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObject.CityObjectDescendantsDFS
        VB: PLATEAU.CityGML.CityObject.CityObjectDescendantsDFS
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: CityObjectDescendantsDFS
        path: ''
        startLine: 3333
      summary: "\n子孫の <xref href=\"PLATEAU.CityGML.CityObject\" data-throw-if-not-resolved=\"false\"></xref> をすべて再帰的にイテレートします。自分自身を含みます。\nイテレートの順番は DFS（深さ優先探索）です。\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerable<CityObject> CityObjectDescendantsDFS { get; }
          VB: Public ReadOnly Property CityObjectDescendantsDFS As IEnumerable(Of CityObject)
        parameters: []
        return:
          type: PLATEAU.IEnumerable{PLATEAU.CityGML.CityObject}
      overload: PLATEAU.CityGML.CityObject.CityObjectDescendantsDFS*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        PLATEAU.CityGML.CityObject: 
    references:
      PLATEAU.CityGML.CityModel: 
      PLATEAU.CityGML.CityObject: 
      PLATEAU.CityGML.CityObjectType: 
      PLATEAU.CityGML.Address: 
      PLATEAU.CityGML.Geometry: 
  - id: PLATEAU.CityGML.LogCallbacks
    commentId: T:PLATEAU.CityGML.LogCallbacks
    language: CSharp
    name:
      CSharp: LogCallbacks
      VB: LogCallbacks
    nameWithType:
      CSharp: LogCallbacks
      VB: LogCallbacks
    qualifiedName:
      CSharp: PLATEAU.CityGML.LogCallbacks
      VB: PLATEAU.CityGML.LogCallbacks
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: LogCallbacks
      path: ''
      startLine: 3371
    summary: "\nDLL側のログをC#側でコールバックで受け取ることができますが、\nその Error, Warn, Info の3つのコールバックをまとめたクラスです。\n詳しくは <xref href=\"PLATEAU.CityGML.DllLogger\" data-throw-if-not-resolved=\"false\"></xref> をご覧ください。\n"
    example: []
    syntax:
      content:
        CSharp: public class LogCallbacks
        VB: Public Class LogCallbacks
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PLATEAU.CityGML.LogCallbacks.LogError
      commentId: P:PLATEAU.CityGML.LogCallbacks.LogError
      language: CSharp
      name:
        CSharp: LogError
        VB: LogError
      nameWithType:
        CSharp: LogCallbacks.LogError
        VB: LogCallbacks.LogError
      qualifiedName:
        CSharp: PLATEAU.CityGML.LogCallbacks.LogError
        VB: PLATEAU.CityGML.LogCallbacks.LogError
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: LogError
        path: ''
        startLine: 3373
      syntax:
        content:
          CSharp: public LogCallbackFuncType LogError { get; set; }
          VB: Public Property LogError As LogCallbackFuncType
        parameters: []
        return:
          type: PLATEAU.CityGML.LogCallbackFuncType
      overload: PLATEAU.CityGML.LogCallbacks.LogError*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: PLATEAU.CityGML.LogCallbacks.LogWarn
      commentId: P:PLATEAU.CityGML.LogCallbacks.LogWarn
      language: CSharp
      name:
        CSharp: LogWarn
        VB: LogWarn
      nameWithType:
        CSharp: LogCallbacks.LogWarn
        VB: LogCallbacks.LogWarn
      qualifiedName:
        CSharp: PLATEAU.CityGML.LogCallbacks.LogWarn
        VB: PLATEAU.CityGML.LogCallbacks.LogWarn
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: LogWarn
        path: ''
        startLine: 3374
      syntax:
        content:
          CSharp: public LogCallbackFuncType LogWarn { get; set; }
          VB: Public Property LogWarn As LogCallbackFuncType
        parameters: []
        return:
          type: PLATEAU.CityGML.LogCallbackFuncType
      overload: PLATEAU.CityGML.LogCallbacks.LogWarn*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: PLATEAU.CityGML.LogCallbacks.LogInfo
      commentId: P:PLATEAU.CityGML.LogCallbacks.LogInfo
      language: CSharp
      name:
        CSharp: LogInfo
        VB: LogInfo
      nameWithType:
        CSharp: LogCallbacks.LogInfo
        VB: LogCallbacks.LogInfo
      qualifiedName:
        CSharp: PLATEAU.CityGML.LogCallbacks.LogInfo
        VB: PLATEAU.CityGML.LogCallbacks.LogInfo
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: LogInfo
        path: ''
        startLine: 3375
      syntax:
        content:
          CSharp: public LogCallbackFuncType LogInfo { get; set; }
          VB: Public Property LogInfo As LogCallbackFuncType
        parameters: []
        return:
          type: PLATEAU.CityGML.LogCallbackFuncType
      overload: PLATEAU.CityGML.LogCallbacks.LogInfo*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: PLATEAU.CityGML.LogCallbacks.LogErrorFuncPtr
      commentId: P:PLATEAU.CityGML.LogCallbacks.LogErrorFuncPtr
      language: CSharp
      name:
        CSharp: LogErrorFuncPtr
        VB: LogErrorFuncPtr
      nameWithType:
        CSharp: LogCallbacks.LogErrorFuncPtr
        VB: LogCallbacks.LogErrorFuncPtr
      qualifiedName:
        CSharp: PLATEAU.CityGML.LogCallbacks.LogErrorFuncPtr
        VB: PLATEAU.CityGML.LogCallbacks.LogErrorFuncPtr
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: LogErrorFuncPtr
        path: ''
        startLine: 3376
      syntax:
        content:
          CSharp: public IntPtr LogErrorFuncPtr { get; }
          VB: Public ReadOnly Property LogErrorFuncPtr As IntPtr
        parameters: []
        return:
          type: PLATEAU.IntPtr
      overload: PLATEAU.CityGML.LogCallbacks.LogErrorFuncPtr*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.LogCallbacks.LogWarnFuncPtr
      commentId: P:PLATEAU.CityGML.LogCallbacks.LogWarnFuncPtr
      language: CSharp
      name:
        CSharp: LogWarnFuncPtr
        VB: LogWarnFuncPtr
      nameWithType:
        CSharp: LogCallbacks.LogWarnFuncPtr
        VB: LogCallbacks.LogWarnFuncPtr
      qualifiedName:
        CSharp: PLATEAU.CityGML.LogCallbacks.LogWarnFuncPtr
        VB: PLATEAU.CityGML.LogCallbacks.LogWarnFuncPtr
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: LogWarnFuncPtr
        path: ''
        startLine: 3377
      syntax:
        content:
          CSharp: public IntPtr LogWarnFuncPtr { get; }
          VB: Public ReadOnly Property LogWarnFuncPtr As IntPtr
        parameters: []
        return:
          type: PLATEAU.IntPtr
      overload: PLATEAU.CityGML.LogCallbacks.LogWarnFuncPtr*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.LogCallbacks.LogInfoFuncPtr
      commentId: P:PLATEAU.CityGML.LogCallbacks.LogInfoFuncPtr
      language: CSharp
      name:
        CSharp: LogInfoFuncPtr
        VB: LogInfoFuncPtr
      nameWithType:
        CSharp: LogCallbacks.LogInfoFuncPtr
        VB: LogCallbacks.LogInfoFuncPtr
      qualifiedName:
        CSharp: PLATEAU.CityGML.LogCallbacks.LogInfoFuncPtr
        VB: PLATEAU.CityGML.LogCallbacks.LogInfoFuncPtr
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: LogInfoFuncPtr
        path: ''
        startLine: 3378
      syntax:
        content:
          CSharp: public IntPtr LogInfoFuncPtr { get; }
          VB: Public ReadOnly Property LogInfoFuncPtr As IntPtr
        parameters: []
        return:
          type: PLATEAU.IntPtr
      overload: PLATEAU.CityGML.LogCallbacks.LogInfoFuncPtr*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.LogCallbacks.StdErrFunc
      commentId: F:PLATEAU.CityGML.LogCallbacks.StdErrFunc
      language: CSharp
      name:
        CSharp: StdErrFunc
        VB: StdErrFunc
      nameWithType:
        CSharp: LogCallbacks.StdErrFunc
        VB: LogCallbacks.StdErrFunc
      qualifiedName:
        CSharp: PLATEAU.CityGML.LogCallbacks.StdErrFunc
        VB: PLATEAU.CityGML.LogCallbacks.StdErrFunc
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: StdErrFunc
        path: ''
        startLine: 3380
      syntax:
        content:
          CSharp: public static readonly LogCallbackFuncType StdErrFunc
          VB: Public Shared ReadOnly StdErrFunc As LogCallbackFuncType
        return:
          type: PLATEAU.CityGML.LogCallbackFuncType
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: PLATEAU.CityGML.LogCallbacks.StdOutFunc
      commentId: F:PLATEAU.CityGML.LogCallbacks.StdOutFunc
      language: CSharp
      name:
        CSharp: StdOutFunc
        VB: StdOutFunc
      nameWithType:
        CSharp: LogCallbacks.StdOutFunc
        VB: LogCallbacks.StdOutFunc
      qualifiedName:
        CSharp: PLATEAU.CityGML.LogCallbacks.StdOutFunc
        VB: PLATEAU.CityGML.LogCallbacks.StdOutFunc
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: StdOutFunc
        path: ''
        startLine: 3383
      syntax:
        content:
          CSharp: public static readonly LogCallbackFuncType StdOutFunc
          VB: Public Shared ReadOnly StdOutFunc As LogCallbackFuncType
        return:
          type: PLATEAU.CityGML.LogCallbackFuncType
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: PLATEAU.CityGML.LogCallbacks.#ctor(PLATEAU.CityGML.LogCallbackFuncType,PLATEAU.CityGML.LogCallbackFuncType,PLATEAU.CityGML.LogCallbackFuncType)
      commentId: M:PLATEAU.CityGML.LogCallbacks.#ctor(PLATEAU.CityGML.LogCallbackFuncType,PLATEAU.CityGML.LogCallbackFuncType,PLATEAU.CityGML.LogCallbackFuncType)
      language: CSharp
      name:
        CSharp: LogCallbacks(LogCallbackFuncType, LogCallbackFuncType, LogCallbackFuncType)
        VB: LogCallbacks(LogCallbackFuncType, LogCallbackFuncType, LogCallbackFuncType)
      nameWithType:
        CSharp: LogCallbacks.LogCallbacks(LogCallbackFuncType, LogCallbackFuncType, LogCallbackFuncType)
        VB: LogCallbacks.LogCallbacks(LogCallbackFuncType, LogCallbackFuncType, LogCallbackFuncType)
      qualifiedName:
        CSharp: PLATEAU.CityGML.LogCallbacks.LogCallbacks(PLATEAU.CityGML.LogCallbackFuncType, PLATEAU.CityGML.LogCallbackFuncType, PLATEAU.CityGML.LogCallbackFuncType)
        VB: PLATEAU.CityGML.LogCallbacks.LogCallbacks(PLATEAU.CityGML.LogCallbackFuncType, PLATEAU.CityGML.LogCallbackFuncType, PLATEAU.CityGML.LogCallbackFuncType)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: .ctor
        path: ''
        startLine: 3385
      syntax:
        content:
          CSharp: public LogCallbacks(LogCallbackFuncType logError, LogCallbackFuncType logWarn, LogCallbackFuncType logInfo)
          VB: Public Sub New(logError As LogCallbackFuncType, logWarn As LogCallbackFuncType, logInfo As LogCallbackFuncType)
        parameters:
        - id: logError
          type: PLATEAU.CityGML.LogCallbackFuncType
        - id: logWarn
          type: PLATEAU.CityGML.LogCallbackFuncType
        - id: logInfo
          type: PLATEAU.CityGML.LogCallbackFuncType
      overload: PLATEAU.CityGML.LogCallbacks.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityGML.LogCallbacks.StdOut
      commentId: F:PLATEAU.CityGML.LogCallbacks.StdOut
      language: CSharp
      name:
        CSharp: StdOut
        VB: StdOut
      nameWithType:
        CSharp: LogCallbacks.StdOut
        VB: LogCallbacks.StdOut
      qualifiedName:
        CSharp: PLATEAU.CityGML.LogCallbacks.StdOut
        VB: PLATEAU.CityGML.LogCallbacks.StdOut
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: StdOut
        path: ''
        startLine: 3395
      summary: "\nDLLのログをC#の標準出力に転送するよう設定されたコールバックメソッドです。\n"
      example: []
      syntax:
        content:
          CSharp: public static readonly LogCallbacks StdOut
          VB: Public Shared ReadOnly StdOut As LogCallbacks
        return:
          type: PLATEAU.CityGML.LogCallbacks
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    references:
      PLATEAU.CityGML.DllLogger: 
  - id: PLATEAU.CityGML.DllLogger
    commentId: T:PLATEAU.CityGML.DllLogger
    language: CSharp
    name:
      CSharp: DllLogger
      VB: DllLogger
    nameWithType:
      CSharp: DllLogger
      VB: DllLogger
    qualifiedName:
      CSharp: PLATEAU.CityGML.DllLogger
      VB: PLATEAU.CityGML.DllLogger
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: DllLogger
      path: ''
      startLine: 3415
    summary: "\nDLL側のログをC#側にコールバックで転送するクラスです。\nC#側でログを表示するためのコールバックメソッドとログ詳細度を指定できます。\n"
    example: []
    syntax:
      content:
        CSharp: public class DllLogger
        VB: Public Class DllLogger
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PLATEAU.CityGML.DllLogger.#ctor(IntPtr)
      commentId: M:PLATEAU.CityGML.DllLogger.#ctor(IntPtr)
      language: CSharp
      name:
        CSharp: DllLogger(IntPtr)
        VB: DllLogger(IntPtr)
      nameWithType:
        CSharp: DllLogger.DllLogger(IntPtr)
        VB: DllLogger.DllLogger(IntPtr)
      qualifiedName:
        CSharp: PLATEAU.CityGML.DllLogger.DllLogger(IntPtr)
        VB: PLATEAU.CityGML.DllLogger.DllLogger(IntPtr)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: .ctor
        path: ''
        startLine: 3421
      syntax:
        content:
          CSharp: public DllLogger(IntPtr handle)
          VB: Public Sub New(handle As IntPtr)
        parameters:
        - id: handle
          type: PLATEAU.IntPtr
      overload: PLATEAU.CityGML.DllLogger.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityGML.DllLogger.SetCallbacksToStdOut
      commentId: M:PLATEAU.CityGML.DllLogger.SetCallbacksToStdOut
      language: CSharp
      name:
        CSharp: SetCallbacksToStdOut()
        VB: SetCallbacksToStdOut()
      nameWithType:
        CSharp: DllLogger.SetCallbacksToStdOut()
        VB: DllLogger.SetCallbacksToStdOut()
      qualifiedName:
        CSharp: PLATEAU.CityGML.DllLogger.SetCallbacksToStdOut()
        VB: PLATEAU.CityGML.DllLogger.SetCallbacksToStdOut()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: SetCallbacksToStdOut
        path: ''
        startLine: 3429
      summary: "\nDLLから受け取ったログメッセージを C#での標準出力に転送するよう設定します。\n"
      example: []
      syntax:
        content:
          CSharp: public void SetCallbacksToStdOut()
          VB: Public Sub SetCallbacksToStdOut
      overload: PLATEAU.CityGML.DllLogger.SetCallbacksToStdOut*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityGML.DllLogger.SetLogCallbacks(PLATEAU.CityGML.LogCallbacks)
      commentId: M:PLATEAU.CityGML.DllLogger.SetLogCallbacks(PLATEAU.CityGML.LogCallbacks)
      language: CSharp
      name:
        CSharp: SetLogCallbacks(LogCallbacks)
        VB: SetLogCallbacks(LogCallbacks)
      nameWithType:
        CSharp: DllLogger.SetLogCallbacks(LogCallbacks)
        VB: DllLogger.SetLogCallbacks(LogCallbacks)
      qualifiedName:
        CSharp: PLATEAU.CityGML.DllLogger.SetLogCallbacks(PLATEAU.CityGML.LogCallbacks)
        VB: PLATEAU.CityGML.DllLogger.SetLogCallbacks(PLATEAU.CityGML.LogCallbacks)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: SetLogCallbacks
        path: ''
        startLine: 3437
      summary: "\nDLL内でのログをコールバックによって受け取ることができるようにします。\n"
      example: []
      syntax:
        content:
          CSharp: public void SetLogCallbacks(LogCallbacks callbacks)
          VB: Public Sub SetLogCallbacks(callbacks As LogCallbacks)
        parameters:
        - id: callbacks
          type: PLATEAU.CityGML.LogCallbacks
      overload: PLATEAU.CityGML.DllLogger.SetLogCallbacks*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityGML.DllLogger.SetLogLevel(PLATEAU.CityGML.DllLogLevel)
      commentId: M:PLATEAU.CityGML.DllLogger.SetLogLevel(PLATEAU.CityGML.DllLogLevel)
      language: CSharp
      name:
        CSharp: SetLogLevel(DllLogLevel)
        VB: SetLogLevel(DllLogLevel)
      nameWithType:
        CSharp: DllLogger.SetLogLevel(DllLogLevel)
        VB: DllLogger.SetLogLevel(DllLogLevel)
      qualifiedName:
        CSharp: PLATEAU.CityGML.DllLogger.SetLogLevel(PLATEAU.CityGML.DllLogLevel)
        VB: PLATEAU.CityGML.DllLogger.SetLogLevel(PLATEAU.CityGML.DllLogLevel)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: SetLogLevel
        path: ''
        startLine: 3452
      summary: "\n指定したログレベル未満のログは無視するようにします。\n"
      example: []
      syntax:
        content:
          CSharp: public void SetLogLevel(DllLogLevel logLevel)
          VB: Public Sub SetLogLevel(logLevel As DllLogLevel)
        parameters:
        - id: logLevel
          type: PLATEAU.CityGML.DllLogLevel
      overload: PLATEAU.CityGML.DllLogger.SetLogLevel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: PLATEAU.CityGML.FeatureObject
    commentId: T:PLATEAU.CityGML.FeatureObject
    language: CSharp
    name:
      CSharp: FeatureObject
      VB: FeatureObject
    nameWithType:
      CSharp: FeatureObject
      VB: FeatureObject
    qualifiedName:
      CSharp: PLATEAU.CityGML.FeatureObject
      VB: PLATEAU.CityGML.FeatureObject
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: FeatureObject
      path: ''
      startLine: 3470
    summary: "\nCityGMLにおける全ての地物オブジェクトのベースクラスです。\n<xref href=\"PLATEAU.CityGML.FeatureObject.Envelope\" data-throw-if-not-resolved=\"false\"></xref> (オブジェクトの存在範囲を2点の座標で示したもの)を持ちます。\n"
    example: []
    syntax:
      content:
        CSharp: 'public class FeatureObject : Object'
        VB: >-
          Public Class FeatureObject

              Inherits Object
    inheritance:
    - System.Object
    - PLATEAU.CityGML.Object
    inheritedMembers:
    - PLATEAU.CityGML.Object.Handle
    - PLATEAU.CityGML.Object.ID
    - PLATEAU.CityGML.Object.AttributesMap
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PLATEAU.CityGML.FeatureObject.Envelope
      commentId: P:PLATEAU.CityGML.FeatureObject.Envelope
      language: CSharp
      name:
        CSharp: Envelope
        VB: Envelope
      nameWithType:
        CSharp: FeatureObject.Envelope
        VB: FeatureObject.Envelope
      qualifiedName:
        CSharp: PLATEAU.CityGML.FeatureObject.Envelope
        VB: PLATEAU.CityGML.FeatureObject.Envelope
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Envelope
        path: ''
        startLine: 3480
      summary: "\n建築物の範囲を double[6] で返します。\n"
      example: []
      syntax:
        content:
          CSharp: public double[] Envelope { get; }
          VB: Public ReadOnly Property Envelope As Double()
        parameters: []
        return:
          type: System.Double[]
          description: 戻り値 double[6] の配列の中身は座標 { lower_x, lower_y, lower_z, upper_x, upper_y, upper_z } です。
      overload: PLATEAU.CityGML.FeatureObject.Envelope*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.FeatureObject.SetEnvelope(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
      commentId: M:PLATEAU.CityGML.FeatureObject.SetEnvelope(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
      language: CSharp
      name:
        CSharp: SetEnvelope(Double, Double, Double, Double, Double, Double)
        VB: SetEnvelope(Double, Double, Double, Double, Double, Double)
      nameWithType:
        CSharp: FeatureObject.SetEnvelope(Double, Double, Double, Double, Double, Double)
        VB: FeatureObject.SetEnvelope(Double, Double, Double, Double, Double, Double)
      qualifiedName:
        CSharp: PLATEAU.CityGML.FeatureObject.SetEnvelope(System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)
        VB: PLATEAU.CityGML.FeatureObject.SetEnvelope(System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: SetEnvelope
        path: ''
        startLine: 3497
      summary: "\n建物の範囲を設定します。\n"
      example: []
      syntax:
        content:
          CSharp: public void SetEnvelope(double lowerX, double lowerY, double lowerZ, double upperX, double upperY, double upperZ)
          VB: Public Sub SetEnvelope(lowerX As Double, lowerY As Double, lowerZ As Double, upperX As Double, upperY As Double, upperZ As Double)
        parameters:
        - id: lowerX
          type: System.Double
        - id: lowerY
          type: System.Double
        - id: lowerZ
          type: System.Double
        - id: upperX
          type: System.Double
        - id: upperY
          type: System.Double
        - id: upperZ
          type: System.Double
      overload: PLATEAU.CityGML.FeatureObject.SetEnvelope*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    references:
      PLATEAU.CityGML.FeatureObject.Envelope: 
  - id: PLATEAU.CityGML.Geometry
    commentId: T:PLATEAU.CityGML.Geometry
    language: CSharp
    name:
      CSharp: Geometry
      VB: Geometry
    nameWithType:
      CSharp: Geometry
      VB: Geometry
    qualifiedName:
      CSharp: PLATEAU.CityGML.Geometry
      VB: PLATEAU.CityGML.Geometry
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: Geometry
      path: ''
      startLine: 3520
    summary: "\n建築物の形状と見た目の情報を保持します。\n<xref href=\"PLATEAU.CityGML.CityObject\" data-throw-if-not-resolved=\"false\"></xref> が<xref href=\"PLATEAU.CityGML.Geometry\" data-throw-if-not-resolved=\"false\"></xref>を保持します。\n<xref href=\"PLATEAU.CityGML.Geometry\" data-throw-if-not-resolved=\"false\"></xref> は <xref href=\"PLATEAU.CityGML.Polygon\" data-throw-if-not-resolved=\"false\"></xref> , 子<xref href=\"PLATEAU.CityGML.Geometry\" data-throw-if-not-resolved=\"false\"></xref> を保持します。\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Geometry : AppearanceTarget'
        VB: >-
          Public Class Geometry

              Inherits AppearanceTarget
    inheritance:
    - System.Object
    - PLATEAU.CityGML.Object
    - PLATEAU.CityGML.AppearanceTarget
    inheritedMembers:
    - PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitionsCount
    - PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition(System.Int32)
    - PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitions
    - PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition(System.String,System.Boolean)
    - PLATEAU.CityGML.AppearanceTarget.TextureThemesCountOfFront(System.Boolean)
    - PLATEAU.CityGML.AppearanceTarget.TextureThemeNames(System.Boolean)
    - PLATEAU.CityGML.AppearanceTarget.MaterialThemesCountByFront(System.Boolean)
    - PLATEAU.CityGML.AppearanceTarget.MaterialThemeNames(System.Boolean)
    - PLATEAU.CityGML.AppearanceTarget.GetMaterialTargetDefinitionByThemeName(System.String,System.Boolean)
    - PLATEAU.CityGML.Object.Handle
    - PLATEAU.CityGML.Object.ID
    - PLATEAU.CityGML.Object.AttributesMap
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PLATEAU.CityGML.Geometry.#ctor(IntPtr)
      commentId: M:PLATEAU.CityGML.Geometry.#ctor(IntPtr)
      language: CSharp
      name:
        CSharp: Geometry(IntPtr)
        VB: Geometry(IntPtr)
      nameWithType:
        CSharp: Geometry.Geometry(IntPtr)
        VB: Geometry.Geometry(IntPtr)
      qualifiedName:
        CSharp: PLATEAU.CityGML.Geometry.Geometry(IntPtr)
        VB: PLATEAU.CityGML.Geometry.Geometry(IntPtr)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: .ctor
        path: ''
        startLine: 3524
      syntax:
        content:
          CSharp: public Geometry(IntPtr handle)
          VB: Public Sub New(handle As IntPtr)
        parameters:
        - id: handle
          type: PLATEAU.IntPtr
      overload: PLATEAU.CityGML.Geometry.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityGML.Geometry.Type
      commentId: P:PLATEAU.CityGML.Geometry.Type
      language: CSharp
      name:
        CSharp: Type
        VB: Type
      nameWithType:
        CSharp: Geometry.Type
        VB: Geometry.Type
      qualifiedName:
        CSharp: PLATEAU.CityGML.Geometry.Type
        VB: PLATEAU.CityGML.Geometry.Type
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Type
        path: ''
        startLine: 3528
      syntax:
        content:
          CSharp: public GeometryType Type { get; }
          VB: Public ReadOnly Property Type As GeometryType
        parameters: []
        return:
          type: PLATEAU.CityGML.GeometryType
      overload: PLATEAU.CityGML.Geometry.Type*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.Geometry.ChildGeometryCount
      commentId: P:PLATEAU.CityGML.Geometry.ChildGeometryCount
      language: CSharp
      name:
        CSharp: ChildGeometryCount
        VB: ChildGeometryCount
      nameWithType:
        CSharp: Geometry.ChildGeometryCount
        VB: Geometry.ChildGeometryCount
      qualifiedName:
        CSharp: PLATEAU.CityGML.Geometry.ChildGeometryCount
        VB: PLATEAU.CityGML.Geometry.ChildGeometryCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: ChildGeometryCount
        path: ''
        startLine: 3531
      summary: '子の <xref href="PLATEAU.CityGML.Geometry" data-throw-if-not-resolved="false"></xref> の数を返します。 '
      example: []
      syntax:
        content:
          CSharp: public int ChildGeometryCount { get; }
          VB: Public ReadOnly Property ChildGeometryCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: PLATEAU.CityGML.Geometry.ChildGeometryCount*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        PLATEAU.CityGML.Geometry: 
    - id: PLATEAU.CityGML.Geometry.GetChildGeometry(System.Int32)
      commentId: M:PLATEAU.CityGML.Geometry.GetChildGeometry(System.Int32)
      language: CSharp
      name:
        CSharp: GetChildGeometry(Int32)
        VB: GetChildGeometry(Int32)
      nameWithType:
        CSharp: Geometry.GetChildGeometry(Int32)
        VB: Geometry.GetChildGeometry(Int32)
      qualifiedName:
        CSharp: PLATEAU.CityGML.Geometry.GetChildGeometry(System.Int32)
        VB: PLATEAU.CityGML.Geometry.GetChildGeometry(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: GetChildGeometry
        path: ''
        startLine: 3534
      summary: 'インデックス指定で子の <xref href="PLATEAU.CityGML.Geometry" data-throw-if-not-resolved="false"></xref> を1つ返します。 '
      example: []
      syntax:
        content:
          CSharp: public Geometry GetChildGeometry(int index)
          VB: Public Function GetChildGeometry(index As Integer) As Geometry
        parameters:
        - id: index
          type: System.Int32
        return:
          type: PLATEAU.CityGML.Geometry
      overload: PLATEAU.CityGML.Geometry.GetChildGeometry*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        PLATEAU.CityGML.Geometry: 
    - id: PLATEAU.CityGML.Geometry.ChildGeometries
      commentId: P:PLATEAU.CityGML.Geometry.ChildGeometries
      language: CSharp
      name:
        CSharp: ChildGeometries
        VB: ChildGeometries
      nameWithType:
        CSharp: Geometry.ChildGeometries
        VB: Geometry.ChildGeometries
      qualifiedName:
        CSharp: PLATEAU.CityGML.Geometry.ChildGeometries
        VB: PLATEAU.CityGML.Geometry.ChildGeometries
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: ChildGeometries
        path: ''
        startLine: 3546
      summary: '子の <xref href="PLATEAU.CityGML.Geometry" data-throw-if-not-resolved="false"></xref> をforeachやLinqで回したい時に利用できます。 '
      example: []
      syntax:
        content:
          CSharp: public IEnumerable<Geometry> ChildGeometries { get; }
          VB: Public ReadOnly Property ChildGeometries As IEnumerable(Of Geometry)
        parameters: []
        return:
          type: PLATEAU.IEnumerable{PLATEAU.CityGML.Geometry}
      overload: PLATEAU.CityGML.Geometry.ChildGeometries*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        PLATEAU.CityGML.Geometry: 
    - id: PLATEAU.CityGML.Geometry.GeometryDescendantsDFS
      commentId: P:PLATEAU.CityGML.Geometry.GeometryDescendantsDFS
      language: CSharp
      name:
        CSharp: GeometryDescendantsDFS
        VB: GeometryDescendantsDFS
      nameWithType:
        CSharp: Geometry.GeometryDescendantsDFS
        VB: Geometry.GeometryDescendantsDFS
      qualifiedName:
        CSharp: PLATEAU.CityGML.Geometry.GeometryDescendantsDFS
        VB: PLATEAU.CityGML.Geometry.GeometryDescendantsDFS
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: GeometryDescendantsDFS
        path: ''
        startLine: 3562
      summary: "\n子孫の <xref href=\"PLATEAU.CityGML.Geometry\" data-throw-if-not-resolved=\"false\"></xref> を再帰ですべてイテレートします。自分自身を含みます。\nイテレートの順番は DFS(深さ優先探索)です。\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerable<Geometry> GeometryDescendantsDFS { get; }
          VB: Public ReadOnly Property GeometryDescendantsDFS As IEnumerable(Of Geometry)
        parameters: []
        return:
          type: PLATEAU.IEnumerable{PLATEAU.CityGML.Geometry}
      overload: PLATEAU.CityGML.Geometry.GeometryDescendantsDFS*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        PLATEAU.CityGML.Geometry: 
    - id: PLATEAU.CityGML.Geometry.PolygonCount
      commentId: P:PLATEAU.CityGML.Geometry.PolygonCount
      language: CSharp
      name:
        CSharp: PolygonCount
        VB: PolygonCount
      nameWithType:
        CSharp: Geometry.PolygonCount
        VB: Geometry.PolygonCount
      qualifiedName:
        CSharp: PLATEAU.CityGML.Geometry.PolygonCount
        VB: PLATEAU.CityGML.Geometry.PolygonCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: PolygonCount
        path: ''
        startLine: 3588
      summary: '<xref href="PLATEAU.CityGML.Polygon" data-throw-if-not-resolved="false"></xref> の数を返します。 '
      example: []
      syntax:
        content:
          CSharp: public int PolygonCount { get; }
          VB: Public ReadOnly Property PolygonCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: PLATEAU.CityGML.Geometry.PolygonCount*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        PLATEAU.CityGML.Polygon: 
    - id: PLATEAU.CityGML.Geometry.GetPolygon(System.Int32)
      commentId: M:PLATEAU.CityGML.Geometry.GetPolygon(System.Int32)
      language: CSharp
      name:
        CSharp: GetPolygon(Int32)
        VB: GetPolygon(Int32)
      nameWithType:
        CSharp: Geometry.GetPolygon(Int32)
        VB: Geometry.GetPolygon(Int32)
      qualifiedName:
        CSharp: PLATEAU.CityGML.Geometry.GetPolygon(System.Int32)
        VB: PLATEAU.CityGML.Geometry.GetPolygon(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: GetPolygon
        path: ''
        startLine: 3591
      summary: 'インデックス指定で <xref href="PLATEAU.CityGML.Polygon" data-throw-if-not-resolved="false"></xref> を1つ返します。 '
      example: []
      syntax:
        content:
          CSharp: public Polygon GetPolygon(int index)
          VB: Public Function GetPolygon(index As Integer) As Polygon
        parameters:
        - id: index
          type: System.Int32
        return:
          type: PLATEAU.CityGML.Polygon
      overload: PLATEAU.CityGML.Geometry.GetPolygon*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        PLATEAU.CityGML.Polygon: 
    - id: PLATEAU.CityGML.Geometry.Polygons
      commentId: P:PLATEAU.CityGML.Geometry.Polygons
      language: CSharp
      name:
        CSharp: Polygons
        VB: Polygons
      nameWithType:
        CSharp: Geometry.Polygons
        VB: Geometry.Polygons
      qualifiedName:
        CSharp: PLATEAU.CityGML.Geometry.Polygons
        VB: PLATEAU.CityGML.Geometry.Polygons
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Polygons
        path: ''
        startLine: 3605
      summary: "\n<xref href=\"PLATEAU.CityGML.Polygon\" data-throw-if-not-resolved=\"false\"></xref> をforeachやLinqで回したい時に利用できます。\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerable<Polygon> Polygons { get; }
          VB: Public ReadOnly Property Polygons As IEnumerable(Of Polygon)
        parameters: []
        return:
          type: PLATEAU.IEnumerable{PLATEAU.CityGML.Polygon}
      overload: PLATEAU.CityGML.Geometry.Polygons*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        PLATEAU.CityGML.Polygon: 
    - id: PLATEAU.CityGML.Geometry.LOD
      commentId: P:PLATEAU.CityGML.Geometry.LOD
      language: CSharp
      name:
        CSharp: LOD
        VB: LOD
      nameWithType:
        CSharp: Geometry.LOD
        VB: Geometry.LOD
      qualifiedName:
        CSharp: PLATEAU.CityGML.Geometry.LOD
        VB: PLATEAU.CityGML.Geometry.LOD
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: LOD
        path: ''
        startLine: 3621
      summary: "\nLOD (Level Of Detail) を取得します。\nLOD は 0 がもっとも簡略化された形状であり、数字が上がるほど形状が詳細であることを意味します。\n"
      example: []
      syntax:
        content:
          CSharp: public int LOD { get; }
          VB: Public ReadOnly Property LOD As Integer
        parameters: []
        return:
          type: System.Int32
      overload: PLATEAU.CityGML.Geometry.LOD*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.Geometry.ToString
      commentId: M:PLATEAU.CityGML.Geometry.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: Geometry.ToString()
        VB: Geometry.ToString()
      qualifiedName:
        CSharp: PLATEAU.CityGML.Geometry.ToString()
        VB: PLATEAU.CityGML.Geometry.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: ToString
        path: ''
        startLine: 3632
      summary: 'デバッグ用に自身に関する情報を文字列で返します。 '
      example: []
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: PLATEAU.CityGML.Geometry.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: PLATEAU.CityGML.Geometry.LineStringCount
      commentId: P:PLATEAU.CityGML.Geometry.LineStringCount
      language: CSharp
      name:
        CSharp: LineStringCount
        VB: LineStringCount
      nameWithType:
        CSharp: Geometry.LineStringCount
        VB: Geometry.LineStringCount
      qualifiedName:
        CSharp: PLATEAU.CityGML.Geometry.LineStringCount
        VB: PLATEAU.CityGML.Geometry.LineStringCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: LineStringCount
        path: ''
        startLine: 3642
      summary: "\nLineString の数を返します。\nTODO LineString の取得は未実装です。 GMLファイルが LineString を含むケースが今のところ見当たらないため\n"
      example: []
      syntax:
        content:
          CSharp: public int LineStringCount { get; }
          VB: Public ReadOnly Property LineStringCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: PLATEAU.CityGML.Geometry.LineStringCount*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.Geometry.SRSName
      commentId: P:PLATEAU.CityGML.Geometry.SRSName
      language: CSharp
      name:
        CSharp: SRSName
        VB: SRSName
      nameWithType:
        CSharp: Geometry.SRSName
        VB: Geometry.SRSName
      qualifiedName:
        CSharp: PLATEAU.CityGML.Geometry.SRSName
        VB: PLATEAU.CityGML.Geometry.SRSName
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: SRSName
        path: ''
        startLine: 3657
      summary: "\nSRSName を取得します。\nSRSNameは典型的には次のようなURL形式の文字列になるはずです。\n例: &quot;http://www.opengis.net/def/crs/EPSG/0/6697&quot;\n"
      example: []
      syntax:
        content:
          CSharp: public string SRSName { get; }
          VB: Public ReadOnly Property SRSName As String
        parameters: []
        return:
          type: System.String
      overload: PLATEAU.CityGML.Geometry.SRSName*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    references:
      PLATEAU.CityGML.CityObject: 
      PLATEAU.CityGML.Geometry: 
      PLATEAU.CityGML.Polygon: 
  - id: PLATEAU.CityGML.LinearRing
    commentId: T:PLATEAU.CityGML.LinearRing
    language: CSharp
    name:
      CSharp: LinearRing
      VB: LinearRing
    nameWithType:
      CSharp: LinearRing
      VB: LinearRing
    qualifiedName:
      CSharp: PLATEAU.CityGML.LinearRing
      VB: PLATEAU.CityGML.LinearRing
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: LinearRing
      path: ''
      startLine: 3678
    summary: "\n多角形による形状表現です。\n頂点座標のリストを保持します。\n<xref href=\"PLATEAU.CityGML.Polygon\" data-throw-if-not-resolved=\"false\"></xref> が <xref href=\"PLATEAU.CityGML.LinearRing\" data-throw-if-not-resolved=\"false\"></xref> を保持します。（ただし条件付きで一部のみです。）\n"
    example: []
    syntax:
      content:
        CSharp: 'public class LinearRing : Object'
        VB: >-
          Public Class LinearRing

              Inherits Object
    inheritance:
    - System.Object
    - PLATEAU.CityGML.Object
    inheritedMembers:
    - PLATEAU.CityGML.Object.Handle
    - PLATEAU.CityGML.Object.ID
    - PLATEAU.CityGML.Object.AttributesMap
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PLATEAU.CityGML.LinearRing.VertexCount
      commentId: P:PLATEAU.CityGML.LinearRing.VertexCount
      language: CSharp
      name:
        CSharp: VertexCount
        VB: VertexCount
      nameWithType:
        CSharp: LinearRing.VertexCount
        VB: LinearRing.VertexCount
      qualifiedName:
        CSharp: PLATEAU.CityGML.LinearRing.VertexCount
        VB: PLATEAU.CityGML.LinearRing.VertexCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: VertexCount
        path: ''
        startLine: 3691
      summary: "\n頂点数を取得します。\n注意:\nGMLファイルのパース時の設定が tessellate = false のときに限り\n意味のある値を返します。\ntessellate = true でパースした場合、この値は 0 になります。\n"
      example: []
      syntax:
        content:
          CSharp: public int VertexCount { get; }
          VB: Public ReadOnly Property VertexCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: PLATEAU.CityGML.LinearRing.VertexCount*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.LinearRing.GetVertex(System.Int32)
      commentId: M:PLATEAU.CityGML.LinearRing.GetVertex(System.Int32)
      language: CSharp
      name:
        CSharp: GetVertex(Int32)
        VB: GetVertex(Int32)
      nameWithType:
        CSharp: LinearRing.GetVertex(Int32)
        VB: LinearRing.GetVertex(Int32)
      qualifiedName:
        CSharp: PLATEAU.CityGML.LinearRing.GetVertex(System.Int32)
        VB: PLATEAU.CityGML.LinearRing.GetVertex(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: GetVertex
        path: ''
        startLine: 3704
      summary: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">index</code> 番目の頂点座標を取得します。\n"
      example: []
      syntax:
        content:
          CSharp: public PlateauVector3d GetVertex(int index)
          VB: Public Function GetVertex(index As Integer) As PlateauVector3d
        parameters:
        - id: index
          type: System.Int32
        return:
          type: PLATEAU.CityGML.PlateauVector3d
      overload: PLATEAU.CityGML.LinearRing.GetVertex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    references:
      PLATEAU.CityGML.Polygon: 
      PLATEAU.CityGML.LinearRing: 
  - id: PLATEAU.CityGML.Material
    commentId: T:PLATEAU.CityGML.Material
    language: CSharp
    name:
      CSharp: Material
      VB: Material
    nameWithType:
      CSharp: Material
      VB: Material
    qualifiedName:
      CSharp: PLATEAU.CityGML.Material
      VB: PLATEAU.CityGML.Material
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: Material
      path: ''
      startLine: 3727
    summary: "\n未実装です。\nマテリアルを含むGMLの例が見当たらないため\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Material : Appearance'
        VB: >-
          Public Class Material

              Inherits Appearance
    inheritance:
    - System.Object
    - PLATEAU.CityGML.Object
    - PLATEAU.CityGML.Appearance
    inheritedMembers:
    - PLATEAU.CityGML.Appearance.Type
    - PLATEAU.CityGML.Appearance.IsFront
    - PLATEAU.CityGML.Appearance.Themes
    - PLATEAU.CityGML.Object.Handle
    - PLATEAU.CityGML.Object.ID
    - PLATEAU.CityGML.Object.AttributesMap
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: PLATEAU.CityGML.MaterialTargetDefinition
    commentId: T:PLATEAU.CityGML.MaterialTargetDefinition
    language: CSharp
    name:
      CSharp: MaterialTargetDefinition
      VB: MaterialTargetDefinition
    nameWithType:
      CSharp: MaterialTargetDefinition
      VB: MaterialTargetDefinition
    qualifiedName:
      CSharp: PLATEAU.CityGML.MaterialTargetDefinition
      VB: PLATEAU.CityGML.MaterialTargetDefinition
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: MaterialTargetDefinition
      path: ''
      startLine: 3743
    summary: "\n未実装です。\nマテリアルを含むGMLの例が見当たらないため\n"
    example: []
    syntax:
      content:
        CSharp: 'public class MaterialTargetDefinition : AppearanceTargetDefinition<Material>'
        VB: >-
          Public Class MaterialTargetDefinition

              Inherits AppearanceTargetDefinition(Of Material)
    inheritance:
    - System.Object
    - PLATEAU.CityGML.Object
    - PLATEAU.CityGML.AppearanceTargetDefinition{PLATEAU.CityGML.Material}
    inheritedMembers:
    - PLATEAU.CityGML.AppearanceTargetDefinition{PLATEAU.CityGML.Material}.Appearance
    - PLATEAU.CityGML.AppearanceTargetDefinition{PLATEAU.CityGML.Material}.TargetID
    - PLATEAU.CityGML.Object.Handle
    - PLATEAU.CityGML.Object.ID
    - PLATEAU.CityGML.Object.AttributesMap
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: PLATEAU.CityGML.PlateauVector3d
    commentId: T:PLATEAU.CityGML.PlateauVector3d
    language: CSharp
    name:
      CSharp: PlateauVector3d
      VB: PlateauVector3d
    nameWithType:
      CSharp: PlateauVector3d
      VB: PlateauVector3d
    qualifiedName:
      CSharp: PLATEAU.CityGML.PlateauVector3d
      VB: PLATEAU.CityGML.PlateauVector3d
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: PlateauVector3d
      path: ''
      startLine: 3758
    syntax:
      content:
        CSharp: public struct PlateauVector3d
        VB: Public Structure PlateauVector3d
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: PLATEAU.CityGML.PlateauVector3d.X
      commentId: F:PLATEAU.CityGML.PlateauVector3d.X
      language: CSharp
      name:
        CSharp: X
        VB: X
      nameWithType:
        CSharp: PlateauVector3d.X
        VB: PlateauVector3d.X
      qualifiedName:
        CSharp: PLATEAU.CityGML.PlateauVector3d.X
        VB: PLATEAU.CityGML.PlateauVector3d.X
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: X
        path: ''
        startLine: 3761
      syntax:
        content:
          CSharp: public double X
          VB: Public X As Double
        return:
          type: System.Double
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityGML.PlateauVector3d.Y
      commentId: F:PLATEAU.CityGML.PlateauVector3d.Y
      language: CSharp
      name:
        CSharp: Y
        VB: Y
      nameWithType:
        CSharp: PlateauVector3d.Y
        VB: PlateauVector3d.Y
      qualifiedName:
        CSharp: PLATEAU.CityGML.PlateauVector3d.Y
        VB: PLATEAU.CityGML.PlateauVector3d.Y
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Y
        path: ''
        startLine: 3762
      syntax:
        content:
          CSharp: public double Y
          VB: Public Y As Double
        return:
          type: System.Double
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityGML.PlateauVector3d.Z
      commentId: F:PLATEAU.CityGML.PlateauVector3d.Z
      language: CSharp
      name:
        CSharp: Z
        VB: Z
      nameWithType:
        CSharp: PlateauVector3d.Z
        VB: PlateauVector3d.Z
      qualifiedName:
        CSharp: PLATEAU.CityGML.PlateauVector3d.Z
        VB: PLATEAU.CityGML.PlateauVector3d.Z
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Z
        path: ''
        startLine: 3763
      syntax:
        content:
          CSharp: public double Z
          VB: Public Z As Double
        return:
          type: System.Double
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityGML.PlateauVector3d.#ctor(System.Double,System.Double,System.Double)
      commentId: M:PLATEAU.CityGML.PlateauVector3d.#ctor(System.Double,System.Double,System.Double)
      language: CSharp
      name:
        CSharp: PlateauVector3d(Double, Double, Double)
        VB: PlateauVector3d(Double, Double, Double)
      nameWithType:
        CSharp: PlateauVector3d.PlateauVector3d(Double, Double, Double)
        VB: PlateauVector3d.PlateauVector3d(Double, Double, Double)
      qualifiedName:
        CSharp: PLATEAU.CityGML.PlateauVector3d.PlateauVector3d(System.Double, System.Double, System.Double)
        VB: PLATEAU.CityGML.PlateauVector3d.PlateauVector3d(System.Double, System.Double, System.Double)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: .ctor
        path: ''
        startLine: 3765
      syntax:
        content:
          CSharp: public PlateauVector3d(double x, double y, double z)
          VB: Public Sub New(x As Double, y As Double, z As Double)
        parameters:
        - id: x
          type: System.Double
        - id: y
          type: System.Double
        - id: z
          type: System.Double
      overload: PLATEAU.CityGML.PlateauVector3d.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityGML.PlateauVector3d.ToString
      commentId: M:PLATEAU.CityGML.PlateauVector3d.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: PlateauVector3d.ToString()
        VB: PlateauVector3d.ToString()
      qualifiedName:
        CSharp: PLATEAU.CityGML.PlateauVector3d.ToString()
        VB: PLATEAU.CityGML.PlateauVector3d.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: ToString
        path: ''
        startLine: 3772
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: PLATEAU.CityGML.PlateauVector3d.ToString*
      overridden: System.ValueType.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: PLATEAU.CityGML.PlateauVector2f
    commentId: T:PLATEAU.CityGML.PlateauVector2f
    language: CSharp
    name:
      CSharp: PlateauVector2f
      VB: PlateauVector2f
    nameWithType:
      CSharp: PlateauVector2f
      VB: PlateauVector2f
    qualifiedName:
      CSharp: PLATEAU.CityGML.PlateauVector2f
      VB: PLATEAU.CityGML.PlateauVector2f
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: PlateauVector2f
      path: ''
      startLine: 3778
    syntax:
      content:
        CSharp: public struct PlateauVector2f
        VB: Public Structure PlateauVector2f
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: PLATEAU.CityGML.PlateauVector2f.X
      commentId: F:PLATEAU.CityGML.PlateauVector2f.X
      language: CSharp
      name:
        CSharp: X
        VB: X
      nameWithType:
        CSharp: PlateauVector2f.X
        VB: PlateauVector2f.X
      qualifiedName:
        CSharp: PLATEAU.CityGML.PlateauVector2f.X
        VB: PLATEAU.CityGML.PlateauVector2f.X
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: X
        path: ''
        startLine: 3781
      syntax:
        content:
          CSharp: public float X
          VB: Public X As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityGML.PlateauVector2f.Y
      commentId: F:PLATEAU.CityGML.PlateauVector2f.Y
      language: CSharp
      name:
        CSharp: Y
        VB: Y
      nameWithType:
        CSharp: PlateauVector2f.Y
        VB: PlateauVector2f.Y
      qualifiedName:
        CSharp: PLATEAU.CityGML.PlateauVector2f.Y
        VB: PLATEAU.CityGML.PlateauVector2f.Y
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Y
        path: ''
        startLine: 3782
      syntax:
        content:
          CSharp: public float Y
          VB: Public Y As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityGML.PlateauVector2f.#ctor(System.Single,System.Single)
      commentId: M:PLATEAU.CityGML.PlateauVector2f.#ctor(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: PlateauVector2f(Single, Single)
        VB: PlateauVector2f(Single, Single)
      nameWithType:
        CSharp: PlateauVector2f.PlateauVector2f(Single, Single)
        VB: PlateauVector2f.PlateauVector2f(Single, Single)
      qualifiedName:
        CSharp: PLATEAU.CityGML.PlateauVector2f.PlateauVector2f(System.Single, System.Single)
        VB: PLATEAU.CityGML.PlateauVector2f.PlateauVector2f(System.Single, System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: .ctor
        path: ''
        startLine: 3784
      syntax:
        content:
          CSharp: public PlateauVector2f(float x, float y)
          VB: Public Sub New(x As Single, y As Single)
        parameters:
        - id: x
          type: System.Single
        - id: y
          type: System.Single
      overload: PLATEAU.CityGML.PlateauVector2f.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityGML.PlateauVector2f.ToString
      commentId: M:PLATEAU.CityGML.PlateauVector2f.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: PlateauVector2f.ToString()
        VB: PlateauVector2f.ToString()
      qualifiedName:
        CSharp: PLATEAU.CityGML.PlateauVector2f.ToString()
        VB: PLATEAU.CityGML.PlateauVector2f.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: ToString
        path: ''
        startLine: 3790
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: PLATEAU.CityGML.PlateauVector2f.ToString*
      overridden: System.ValueType.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: PLATEAU.CityGML.CitygmlParserParams
    commentId: T:PLATEAU.CityGML.CitygmlParserParams
    language: CSharp
    name:
      CSharp: CitygmlParserParams
      VB: CitygmlParserParams
    nameWithType:
      CSharp: CitygmlParserParams
      VB: CitygmlParserParams
    qualifiedName:
      CSharp: PLATEAU.CityGML.CitygmlParserParams
      VB: PLATEAU.CityGML.CitygmlParserParams
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: CitygmlParserParams
      path: ''
      startLine: 3799
    summary: "\nGMLファイルのパース時の設定です。\n"
    example: []
    syntax:
      content:
        CSharp: public struct CitygmlParserParams
        VB: Public Structure CitygmlParserParams
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: PLATEAU.CityGML.CitygmlParserParams.Optimize
      commentId: F:PLATEAU.CityGML.CitygmlParserParams.Optimize
      language: CSharp
      name:
        CSharp: Optimize
        VB: Optimize
      nameWithType:
        CSharp: CitygmlParserParams.Optimize
        VB: CitygmlParserParams.Optimize
      qualifiedName:
        CSharp: PLATEAU.CityGML.CitygmlParserParams.Optimize
        VB: PLATEAU.CityGML.CitygmlParserParams.Optimize
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Optimize
        path: ''
        startLine: 3803
      syntax:
        content:
          CSharp: public bool Optimize
          VB: Public Optimize As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityGML.CitygmlParserParams.Tessellate
      commentId: F:PLATEAU.CityGML.CitygmlParserParams.Tessellate
      language: CSharp
      name:
        CSharp: Tessellate
        VB: Tessellate
      nameWithType:
        CSharp: CitygmlParserParams.Tessellate
        VB: CitygmlParserParams.Tessellate
      qualifiedName:
        CSharp: PLATEAU.CityGML.CitygmlParserParams.Tessellate
        VB: PLATEAU.CityGML.CitygmlParserParams.Tessellate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Tessellate
        path: ''
        startLine: 3808
      summary: "\n<xref href=\"PLATEAU.CityGML.CitygmlParserParams.Tessellate\" data-throw-if-not-resolved=\"false\"></xref> を false に設定すると、 <xref href=\"PLATEAU.CityGML.Polygon\" data-throw-if-not-resolved=\"false\"></xref> が頂点を保持する代わりに <xref href=\"PLATEAU.CityGML.LinearRing\" data-throw-if-not-resolved=\"false\"></xref> を保持することがあります。\n"
      example: []
      syntax:
        content:
          CSharp: public bool Tessellate
          VB: Public Tessellate As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        PLATEAU.CityGML.CitygmlParserParams.Tessellate: 
        PLATEAU.CityGML.Polygon: 
        PLATEAU.CityGML.LinearRing: 
    - id: PLATEAU.CityGML.CitygmlParserParams.#ctor(System.Boolean,System.Boolean)
      commentId: M:PLATEAU.CityGML.CitygmlParserParams.#ctor(System.Boolean,System.Boolean)
      language: CSharp
      name:
        CSharp: CitygmlParserParams(Boolean, Boolean)
        VB: CitygmlParserParams(Boolean, Boolean)
      nameWithType:
        CSharp: CitygmlParserParams.CitygmlParserParams(Boolean, Boolean)
        VB: CitygmlParserParams.CitygmlParserParams(Boolean, Boolean)
      qualifiedName:
        CSharp: PLATEAU.CityGML.CitygmlParserParams.CitygmlParserParams(System.Boolean, System.Boolean)
        VB: PLATEAU.CityGML.CitygmlParserParams.CitygmlParserParams(System.Boolean, System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: .ctor
        path: ''
        startLine: 3810
      syntax:
        content:
          CSharp: public CitygmlParserParams(bool optimize = true, bool tessellate = true)
          VB: Public Sub New(optimize As Boolean = True, tessellate As Boolean = True)
        parameters:
        - id: optimize
          type: System.Boolean
        - id: tessellate
          type: System.Boolean
      overload: PLATEAU.CityGML.CitygmlParserParams.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: PLATEAU.CityGML.AxesConversion
    commentId: T:PLATEAU.CityGML.AxesConversion
    language: CSharp
    name:
      CSharp: AxesConversion
      VB: AxesConversion
    nameWithType:
      CSharp: AxesConversion
      VB: AxesConversion
    qualifiedName:
      CSharp: PLATEAU.CityGML.AxesConversion
      VB: PLATEAU.CityGML.AxesConversion
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: AxesConversion
      path: ''
      startLine: 3817
    syntax:
      content:
        CSharp: public enum AxesConversion
        VB: Public Enum AxesConversion
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: PLATEAU.CityGML.AxesConversion.WNU
      commentId: F:PLATEAU.CityGML.AxesConversion.WNU
      language: CSharp
      name:
        CSharp: WNU
        VB: WNU
      nameWithType:
        CSharp: AxesConversion.WNU
        VB: AxesConversion.WNU
      qualifiedName:
        CSharp: PLATEAU.CityGML.AxesConversion.WNU
        VB: PLATEAU.CityGML.AxesConversion.WNU
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: WNU
        path: ''
        startLine: 3819
      syntax:
        content:
          CSharp: WNU = 0
          VB: WNU = 0
        return:
          type: PLATEAU.CityGML.AxesConversion
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.AxesConversion.RUF
      commentId: F:PLATEAU.CityGML.AxesConversion.RUF
      language: CSharp
      name:
        CSharp: RUF
        VB: RUF
      nameWithType:
        CSharp: AxesConversion.RUF
        VB: AxesConversion.RUF
      qualifiedName:
        CSharp: PLATEAU.CityGML.AxesConversion.RUF
        VB: PLATEAU.CityGML.AxesConversion.RUF
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: RUF
        path: ''
        startLine: 3820
      syntax:
        content:
          CSharp: RUF = 1
          VB: RUF = 1
        return:
          type: PLATEAU.CityGML.AxesConversion
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: PLATEAU.CityGML.MeshGranularity
    commentId: T:PLATEAU.CityGML.MeshGranularity
    language: CSharp
    name:
      CSharp: MeshGranularity
      VB: MeshGranularity
    nameWithType:
      CSharp: MeshGranularity
      VB: MeshGranularity
    qualifiedName:
      CSharp: PLATEAU.CityGML.MeshGranularity
      VB: PLATEAU.CityGML.MeshGranularity
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: MeshGranularity
      path: ''
      startLine: 3823
    syntax:
      content:
        CSharp: public enum MeshGranularity
        VB: Public Enum MeshGranularity
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: PLATEAU.CityGML.MeshGranularity.PerAtomicFeatureObject
      commentId: F:PLATEAU.CityGML.MeshGranularity.PerAtomicFeatureObject
      language: CSharp
      name:
        CSharp: PerAtomicFeatureObject
        VB: PerAtomicFeatureObject
      nameWithType:
        CSharp: MeshGranularity.PerAtomicFeatureObject
        VB: MeshGranularity.PerAtomicFeatureObject
      qualifiedName:
        CSharp: PLATEAU.CityGML.MeshGranularity.PerAtomicFeatureObject
        VB: PLATEAU.CityGML.MeshGranularity.PerAtomicFeatureObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: PerAtomicFeatureObject
        path: ''
        startLine: 3825
      syntax:
        content:
          CSharp: PerAtomicFeatureObject = 0
          VB: PerAtomicFeatureObject = 0
        return:
          type: PLATEAU.CityGML.MeshGranularity
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.MeshGranularity.PerPrimaryFeatureObject
      commentId: F:PLATEAU.CityGML.MeshGranularity.PerPrimaryFeatureObject
      language: CSharp
      name:
        CSharp: PerPrimaryFeatureObject
        VB: PerPrimaryFeatureObject
      nameWithType:
        CSharp: MeshGranularity.PerPrimaryFeatureObject
        VB: MeshGranularity.PerPrimaryFeatureObject
      qualifiedName:
        CSharp: PLATEAU.CityGML.MeshGranularity.PerPrimaryFeatureObject
        VB: PLATEAU.CityGML.MeshGranularity.PerPrimaryFeatureObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: PerPrimaryFeatureObject
        path: ''
        startLine: 3826
      syntax:
        content:
          CSharp: PerPrimaryFeatureObject = 1
          VB: PerPrimaryFeatureObject = 1
        return:
          type: PLATEAU.CityGML.MeshGranularity
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.MeshGranularity.PerCityModelArea
      commentId: F:PLATEAU.CityGML.MeshGranularity.PerCityModelArea
      language: CSharp
      name:
        CSharp: PerCityModelArea
        VB: PerCityModelArea
      nameWithType:
        CSharp: MeshGranularity.PerCityModelArea
        VB: MeshGranularity.PerCityModelArea
      qualifiedName:
        CSharp: PLATEAU.CityGML.MeshGranularity.PerCityModelArea
        VB: PLATEAU.CityGML.MeshGranularity.PerCityModelArea
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: PerCityModelArea
        path: ''
        startLine: 3827
      syntax:
        content:
          CSharp: PerCityModelArea = 2
          VB: PerCityModelArea = 2
        return:
          type: PLATEAU.CityGML.MeshGranularity
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: PLATEAU.CityGML.APIResult
    commentId: T:PLATEAU.CityGML.APIResult
    language: CSharp
    name:
      CSharp: APIResult
      VB: APIResult
    nameWithType:
      CSharp: APIResult
      VB: APIResult
    qualifiedName:
      CSharp: PLATEAU.CityGML.APIResult
      VB: PLATEAU.CityGML.APIResult
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: APIResult
      path: ''
      startLine: 3830
    syntax:
      content:
        CSharp: public enum APIResult
        VB: Public Enum APIResult
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: PLATEAU.CityGML.APIResult.Success
      commentId: F:PLATEAU.CityGML.APIResult.Success
      language: CSharp
      name:
        CSharp: Success
        VB: Success
      nameWithType:
        CSharp: APIResult.Success
        VB: APIResult.Success
      qualifiedName:
        CSharp: PLATEAU.CityGML.APIResult.Success
        VB: PLATEAU.CityGML.APIResult.Success
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Success
        path: ''
        startLine: 3832
      syntax:
        content:
          CSharp: Success = 0
          VB: Success = 0
        return:
          type: PLATEAU.CityGML.APIResult
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.APIResult.ErrorUnknown
      commentId: F:PLATEAU.CityGML.APIResult.ErrorUnknown
      language: CSharp
      name:
        CSharp: ErrorUnknown
        VB: ErrorUnknown
      nameWithType:
        CSharp: APIResult.ErrorUnknown
        VB: APIResult.ErrorUnknown
      qualifiedName:
        CSharp: PLATEAU.CityGML.APIResult.ErrorUnknown
        VB: PLATEAU.CityGML.APIResult.ErrorUnknown
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: ErrorUnknown
        path: ''
        startLine: 3833
      syntax:
        content:
          CSharp: ErrorUnknown = 1
          VB: ErrorUnknown = 1
        return:
          type: PLATEAU.CityGML.APIResult
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.APIResult.ErrorValueNotFound
      commentId: F:PLATEAU.CityGML.APIResult.ErrorValueNotFound
      language: CSharp
      name:
        CSharp: ErrorValueNotFound
        VB: ErrorValueNotFound
      nameWithType:
        CSharp: APIResult.ErrorValueNotFound
        VB: APIResult.ErrorValueNotFound
      qualifiedName:
        CSharp: PLATEAU.CityGML.APIResult.ErrorValueNotFound
        VB: PLATEAU.CityGML.APIResult.ErrorValueNotFound
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: ErrorValueNotFound
        path: ''
        startLine: 3834
      syntax:
        content:
          CSharp: ErrorValueNotFound = 2
          VB: ErrorValueNotFound = 2
        return:
          type: PLATEAU.CityGML.APIResult
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.APIResult.ErrorLoadingCityGml
      commentId: F:PLATEAU.CityGML.APIResult.ErrorLoadingCityGml
      language: CSharp
      name:
        CSharp: ErrorLoadingCityGml
        VB: ErrorLoadingCityGml
      nameWithType:
        CSharp: APIResult.ErrorLoadingCityGml
        VB: APIResult.ErrorLoadingCityGml
      qualifiedName:
        CSharp: PLATEAU.CityGML.APIResult.ErrorLoadingCityGml
        VB: PLATEAU.CityGML.APIResult.ErrorLoadingCityGml
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: ErrorLoadingCityGml
        path: ''
        startLine: 3835
      syntax:
        content:
          CSharp: ErrorLoadingCityGml = 3
          VB: ErrorLoadingCityGml = 3
        return:
          type: PLATEAU.CityGML.APIResult
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: PLATEAU.CityGML.DllLogLevel
    commentId: T:PLATEAU.CityGML.DllLogLevel
    language: CSharp
    name:
      CSharp: DllLogLevel
      VB: DllLogLevel
    nameWithType:
      CSharp: DllLogLevel
      VB: DllLogLevel
    qualifiedName:
      CSharp: PLATEAU.CityGML.DllLogLevel
      VB: PLATEAU.CityGML.DllLogLevel
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: DllLogLevel
      path: ''
      startLine: 3838
    syntax:
      content:
        CSharp: public enum DllLogLevel
        VB: Public Enum DllLogLevel
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: PLATEAU.CityGML.DllLogLevel.Error
      commentId: F:PLATEAU.CityGML.DllLogLevel.Error
      language: CSharp
      name:
        CSharp: Error
        VB: Error
      nameWithType:
        CSharp: DllLogLevel.Error
        VB: DllLogLevel.Error
      qualifiedName:
        CSharp: PLATEAU.CityGML.DllLogLevel.Error
        VB: PLATEAU.CityGML.DllLogLevel.Error
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Error
        path: ''
        startLine: 3840
      syntax:
        content:
          CSharp: Error = 4
          VB: Error = 4
        return:
          type: PLATEAU.CityGML.DllLogLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.DllLogLevel.Warning
      commentId: F:PLATEAU.CityGML.DllLogLevel.Warning
      language: CSharp
      name:
        CSharp: Warning
        VB: Warning
      nameWithType:
        CSharp: DllLogLevel.Warning
        VB: DllLogLevel.Warning
      qualifiedName:
        CSharp: PLATEAU.CityGML.DllLogLevel.Warning
        VB: PLATEAU.CityGML.DllLogLevel.Warning
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Warning
        path: ''
        startLine: 3841
      syntax:
        content:
          CSharp: Warning = 3
          VB: Warning = 3
        return:
          type: PLATEAU.CityGML.DllLogLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.DllLogLevel.Info
      commentId: F:PLATEAU.CityGML.DllLogLevel.Info
      language: CSharp
      name:
        CSharp: Info
        VB: Info
      nameWithType:
        CSharp: DllLogLevel.Info
        VB: DllLogLevel.Info
      qualifiedName:
        CSharp: PLATEAU.CityGML.DllLogLevel.Info
        VB: PLATEAU.CityGML.DllLogLevel.Info
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Info
        path: ''
        startLine: 3842
      syntax:
        content:
          CSharp: Info = 2
          VB: Info = 2
        return:
          type: PLATEAU.CityGML.DllLogLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.DllLogLevel.Debug
      commentId: F:PLATEAU.CityGML.DllLogLevel.Debug
      language: CSharp
      name:
        CSharp: Debug
        VB: Debug
      nameWithType:
        CSharp: DllLogLevel.Debug
        VB: DllLogLevel.Debug
      qualifiedName:
        CSharp: PLATEAU.CityGML.DllLogLevel.Debug
        VB: PLATEAU.CityGML.DllLogLevel.Debug
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Debug
        path: ''
        startLine: 3843
      syntax:
        content:
          CSharp: Debug = 1
          VB: Debug = 1
        return:
          type: PLATEAU.CityGML.DllLogLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.DllLogLevel.Trace
      commentId: F:PLATEAU.CityGML.DllLogLevel.Trace
      language: CSharp
      name:
        CSharp: Trace
        VB: Trace
      nameWithType:
        CSharp: DllLogLevel.Trace
        VB: DllLogLevel.Trace
      qualifiedName:
        CSharp: PLATEAU.CityGML.DllLogLevel.Trace
        VB: PLATEAU.CityGML.DllLogLevel.Trace
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Trace
        path: ''
        startLine: 3844
      syntax:
        content:
          CSharp: Trace = 0
          VB: Trace = 0
        return:
          type: PLATEAU.CityGML.DllLogLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: PLATEAU.CityGML.CityObjectType
    commentId: T:PLATEAU.CityGML.CityObjectType
    language: CSharp
    name:
      CSharp: CityObjectType
      VB: CityObjectType
    nameWithType:
      CSharp: CityObjectType
      VB: CityObjectType
    qualifiedName:
      CSharp: PLATEAU.CityGML.CityObjectType
      VB: PLATEAU.CityGML.CityObjectType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: CityObjectType
      path: ''
      startLine: 3848
    syntax:
      content:
        CSharp: 'public enum CityObjectType : ulong'
        VB: Public Enum CityObjectType As ULong
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: PLATEAU.CityGML.CityObjectType.COT_GenericCityObject
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_GenericCityObject
      language: CSharp
      name:
        CSharp: COT_GenericCityObject
        VB: COT_GenericCityObject
      nameWithType:
        CSharp: CityObjectType.COT_GenericCityObject
        VB: CityObjectType.COT_GenericCityObject
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_GenericCityObject
        VB: PLATEAU.CityGML.CityObjectType.COT_GenericCityObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_GenericCityObject
        path: ''
        startLine: 3850
      syntax:
        content:
          CSharp: COT_GenericCityObject = 1UL
          VB: COT_GenericCityObject = 1UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_Building
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_Building
      language: CSharp
      name:
        CSharp: COT_Building
        VB: COT_Building
      nameWithType:
        CSharp: CityObjectType.COT_Building
        VB: CityObjectType.COT_Building
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_Building
        VB: PLATEAU.CityGML.CityObjectType.COT_Building
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_Building
        path: ''
        startLine: 3851
      syntax:
        content:
          CSharp: COT_Building = 2UL
          VB: COT_Building = 2UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_Room
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_Room
      language: CSharp
      name:
        CSharp: COT_Room
        VB: COT_Room
      nameWithType:
        CSharp: CityObjectType.COT_Room
        VB: CityObjectType.COT_Room
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_Room
        VB: PLATEAU.CityGML.CityObjectType.COT_Room
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_Room
        path: ''
        startLine: 3852
      syntax:
        content:
          CSharp: COT_Room = 4UL
          VB: COT_Room = 4UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_BuildingInstallation
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_BuildingInstallation
      language: CSharp
      name:
        CSharp: COT_BuildingInstallation
        VB: COT_BuildingInstallation
      nameWithType:
        CSharp: CityObjectType.COT_BuildingInstallation
        VB: CityObjectType.COT_BuildingInstallation
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_BuildingInstallation
        VB: PLATEAU.CityGML.CityObjectType.COT_BuildingInstallation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_BuildingInstallation
        path: ''
        startLine: 3853
      syntax:
        content:
          CSharp: COT_BuildingInstallation = 8UL
          VB: COT_BuildingInstallation = 8UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_BuildingFurniture
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_BuildingFurniture
      language: CSharp
      name:
        CSharp: COT_BuildingFurniture
        VB: COT_BuildingFurniture
      nameWithType:
        CSharp: CityObjectType.COT_BuildingFurniture
        VB: CityObjectType.COT_BuildingFurniture
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_BuildingFurniture
        VB: PLATEAU.CityGML.CityObjectType.COT_BuildingFurniture
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_BuildingFurniture
        path: ''
        startLine: 3854
      syntax:
        content:
          CSharp: COT_BuildingFurniture = 16UL
          VB: COT_BuildingFurniture = 16UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_Door
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_Door
      language: CSharp
      name:
        CSharp: COT_Door
        VB: COT_Door
      nameWithType:
        CSharp: CityObjectType.COT_Door
        VB: CityObjectType.COT_Door
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_Door
        VB: PLATEAU.CityGML.CityObjectType.COT_Door
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_Door
        path: ''
        startLine: 3855
      syntax:
        content:
          CSharp: COT_Door = 32UL
          VB: COT_Door = 32UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_Window
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_Window
      language: CSharp
      name:
        CSharp: COT_Window
        VB: COT_Window
      nameWithType:
        CSharp: CityObjectType.COT_Window
        VB: CityObjectType.COT_Window
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_Window
        VB: PLATEAU.CityGML.CityObjectType.COT_Window
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_Window
        path: ''
        startLine: 3856
      syntax:
        content:
          CSharp: COT_Window = 64UL
          VB: COT_Window = 64UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_CityFurniture
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_CityFurniture
      language: CSharp
      name:
        CSharp: COT_CityFurniture
        VB: COT_CityFurniture
      nameWithType:
        CSharp: CityObjectType.COT_CityFurniture
        VB: CityObjectType.COT_CityFurniture
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_CityFurniture
        VB: PLATEAU.CityGML.CityObjectType.COT_CityFurniture
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_CityFurniture
        path: ''
        startLine: 3857
      syntax:
        content:
          CSharp: COT_CityFurniture = 128UL
          VB: COT_CityFurniture = 128UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_Track
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_Track
      language: CSharp
      name:
        CSharp: COT_Track
        VB: COT_Track
      nameWithType:
        CSharp: CityObjectType.COT_Track
        VB: CityObjectType.COT_Track
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_Track
        VB: PLATEAU.CityGML.CityObjectType.COT_Track
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_Track
        path: ''
        startLine: 3858
      syntax:
        content:
          CSharp: COT_Track = 256UL
          VB: COT_Track = 256UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_Road
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_Road
      language: CSharp
      name:
        CSharp: COT_Road
        VB: COT_Road
      nameWithType:
        CSharp: CityObjectType.COT_Road
        VB: CityObjectType.COT_Road
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_Road
        VB: PLATEAU.CityGML.CityObjectType.COT_Road
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_Road
        path: ''
        startLine: 3859
      syntax:
        content:
          CSharp: COT_Road = 512UL
          VB: COT_Road = 512UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_Railway
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_Railway
      language: CSharp
      name:
        CSharp: COT_Railway
        VB: COT_Railway
      nameWithType:
        CSharp: CityObjectType.COT_Railway
        VB: CityObjectType.COT_Railway
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_Railway
        VB: PLATEAU.CityGML.CityObjectType.COT_Railway
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_Railway
        path: ''
        startLine: 3860
      syntax:
        content:
          CSharp: COT_Railway = 1024UL
          VB: COT_Railway = 1024UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_Square
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_Square
      language: CSharp
      name:
        CSharp: COT_Square
        VB: COT_Square
      nameWithType:
        CSharp: CityObjectType.COT_Square
        VB: CityObjectType.COT_Square
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_Square
        VB: PLATEAU.CityGML.CityObjectType.COT_Square
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_Square
        path: ''
        startLine: 3861
      syntax:
        content:
          CSharp: COT_Square = 2048UL
          VB: COT_Square = 2048UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_PlantCover
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_PlantCover
      language: CSharp
      name:
        CSharp: COT_PlantCover
        VB: COT_PlantCover
      nameWithType:
        CSharp: CityObjectType.COT_PlantCover
        VB: CityObjectType.COT_PlantCover
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_PlantCover
        VB: PLATEAU.CityGML.CityObjectType.COT_PlantCover
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_PlantCover
        path: ''
        startLine: 3862
      syntax:
        content:
          CSharp: COT_PlantCover = 4096UL
          VB: COT_PlantCover = 4096UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_SolitaryVegetationObject
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_SolitaryVegetationObject
      language: CSharp
      name:
        CSharp: COT_SolitaryVegetationObject
        VB: COT_SolitaryVegetationObject
      nameWithType:
        CSharp: CityObjectType.COT_SolitaryVegetationObject
        VB: CityObjectType.COT_SolitaryVegetationObject
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_SolitaryVegetationObject
        VB: PLATEAU.CityGML.CityObjectType.COT_SolitaryVegetationObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_SolitaryVegetationObject
        path: ''
        startLine: 3863
      syntax:
        content:
          CSharp: COT_SolitaryVegetationObject = 8192UL
          VB: COT_SolitaryVegetationObject = 8192UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_WaterBody
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_WaterBody
      language: CSharp
      name:
        CSharp: COT_WaterBody
        VB: COT_WaterBody
      nameWithType:
        CSharp: CityObjectType.COT_WaterBody
        VB: CityObjectType.COT_WaterBody
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_WaterBody
        VB: PLATEAU.CityGML.CityObjectType.COT_WaterBody
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_WaterBody
        path: ''
        startLine: 3864
      syntax:
        content:
          CSharp: COT_WaterBody = 16384UL
          VB: COT_WaterBody = 16384UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_ReliefFeature
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_ReliefFeature
      language: CSharp
      name:
        CSharp: COT_ReliefFeature
        VB: COT_ReliefFeature
      nameWithType:
        CSharp: CityObjectType.COT_ReliefFeature
        VB: CityObjectType.COT_ReliefFeature
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_ReliefFeature
        VB: PLATEAU.CityGML.CityObjectType.COT_ReliefFeature
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_ReliefFeature
        path: ''
        startLine: 3865
      syntax:
        content:
          CSharp: COT_ReliefFeature = 32768UL
          VB: COT_ReliefFeature = 32768UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_ReliefComponent
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_ReliefComponent
      language: CSharp
      name:
        CSharp: COT_ReliefComponent
        VB: COT_ReliefComponent
      nameWithType:
        CSharp: CityObjectType.COT_ReliefComponent
        VB: CityObjectType.COT_ReliefComponent
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_ReliefComponent
        VB: PLATEAU.CityGML.CityObjectType.COT_ReliefComponent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_ReliefComponent
        path: ''
        startLine: 3866
      syntax:
        content:
          CSharp: COT_ReliefComponent = 34359738368UL
          VB: COT_ReliefComponent = 34359738368UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_TINRelief
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_TINRelief
      language: CSharp
      name:
        CSharp: COT_TINRelief
        VB: COT_TINRelief
      nameWithType:
        CSharp: CityObjectType.COT_TINRelief
        VB: CityObjectType.COT_TINRelief
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_TINRelief
        VB: PLATEAU.CityGML.CityObjectType.COT_TINRelief
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_TINRelief
        path: ''
        startLine: 3867
      syntax:
        content:
          CSharp: COT_TINRelief = 68719476736UL
          VB: COT_TINRelief = 68719476736UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_MassPointRelief
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_MassPointRelief
      language: CSharp
      name:
        CSharp: COT_MassPointRelief
        VB: COT_MassPointRelief
      nameWithType:
        CSharp: CityObjectType.COT_MassPointRelief
        VB: CityObjectType.COT_MassPointRelief
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_MassPointRelief
        VB: PLATEAU.CityGML.CityObjectType.COT_MassPointRelief
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_MassPointRelief
        path: ''
        startLine: 3868
      syntax:
        content:
          CSharp: COT_MassPointRelief = 137438953472UL
          VB: COT_MassPointRelief = 137438953472UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_BreaklineRelief
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_BreaklineRelief
      language: CSharp
      name:
        CSharp: COT_BreaklineRelief
        VB: COT_BreaklineRelief
      nameWithType:
        CSharp: CityObjectType.COT_BreaklineRelief
        VB: CityObjectType.COT_BreaklineRelief
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_BreaklineRelief
        VB: PLATEAU.CityGML.CityObjectType.COT_BreaklineRelief
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_BreaklineRelief
        path: ''
        startLine: 3869
      syntax:
        content:
          CSharp: COT_BreaklineRelief = 274877906944UL
          VB: COT_BreaklineRelief = 274877906944UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_RasterRelief
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_RasterRelief
      language: CSharp
      name:
        CSharp: COT_RasterRelief
        VB: COT_RasterRelief
      nameWithType:
        CSharp: CityObjectType.COT_RasterRelief
        VB: CityObjectType.COT_RasterRelief
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_RasterRelief
        VB: PLATEAU.CityGML.CityObjectType.COT_RasterRelief
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_RasterRelief
        path: ''
        startLine: 3870
      syntax:
        content:
          CSharp: COT_RasterRelief = 549755813888UL
          VB: COT_RasterRelief = 549755813888UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_LandUse
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_LandUse
      language: CSharp
      name:
        CSharp: COT_LandUse
        VB: COT_LandUse
      nameWithType:
        CSharp: CityObjectType.COT_LandUse
        VB: CityObjectType.COT_LandUse
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_LandUse
        VB: PLATEAU.CityGML.CityObjectType.COT_LandUse
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_LandUse
        path: ''
        startLine: 3871
      syntax:
        content:
          CSharp: COT_LandUse = 65536UL
          VB: COT_LandUse = 65536UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_Tunnel
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_Tunnel
      language: CSharp
      name:
        CSharp: COT_Tunnel
        VB: COT_Tunnel
      nameWithType:
        CSharp: CityObjectType.COT_Tunnel
        VB: CityObjectType.COT_Tunnel
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_Tunnel
        VB: PLATEAU.CityGML.CityObjectType.COT_Tunnel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_Tunnel
        path: ''
        startLine: 3872
      syntax:
        content:
          CSharp: COT_Tunnel = 131072UL
          VB: COT_Tunnel = 131072UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_Bridge
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_Bridge
      language: CSharp
      name:
        CSharp: COT_Bridge
        VB: COT_Bridge
      nameWithType:
        CSharp: CityObjectType.COT_Bridge
        VB: CityObjectType.COT_Bridge
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_Bridge
        VB: PLATEAU.CityGML.CityObjectType.COT_Bridge
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_Bridge
        path: ''
        startLine: 3873
      syntax:
        content:
          CSharp: COT_Bridge = 262144UL
          VB: COT_Bridge = 262144UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_BridgeConstructionElement
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_BridgeConstructionElement
      language: CSharp
      name:
        CSharp: COT_BridgeConstructionElement
        VB: COT_BridgeConstructionElement
      nameWithType:
        CSharp: CityObjectType.COT_BridgeConstructionElement
        VB: CityObjectType.COT_BridgeConstructionElement
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_BridgeConstructionElement
        VB: PLATEAU.CityGML.CityObjectType.COT_BridgeConstructionElement
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_BridgeConstructionElement
        path: ''
        startLine: 3874
      syntax:
        content:
          CSharp: COT_BridgeConstructionElement = 524288UL
          VB: COT_BridgeConstructionElement = 524288UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_BridgeInstallation
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_BridgeInstallation
      language: CSharp
      name:
        CSharp: COT_BridgeInstallation
        VB: COT_BridgeInstallation
      nameWithType:
        CSharp: CityObjectType.COT_BridgeInstallation
        VB: CityObjectType.COT_BridgeInstallation
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_BridgeInstallation
        VB: PLATEAU.CityGML.CityObjectType.COT_BridgeInstallation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_BridgeInstallation
        path: ''
        startLine: 3875
      syntax:
        content:
          CSharp: COT_BridgeInstallation = 1048576UL
          VB: COT_BridgeInstallation = 1048576UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_BridgePart
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_BridgePart
      language: CSharp
      name:
        CSharp: COT_BridgePart
        VB: COT_BridgePart
      nameWithType:
        CSharp: CityObjectType.COT_BridgePart
        VB: CityObjectType.COT_BridgePart
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_BridgePart
        VB: PLATEAU.CityGML.CityObjectType.COT_BridgePart
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_BridgePart
        path: ''
        startLine: 3876
      syntax:
        content:
          CSharp: COT_BridgePart = 2097152UL
          VB: COT_BridgePart = 2097152UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_BuildingPart
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_BuildingPart
      language: CSharp
      name:
        CSharp: COT_BuildingPart
        VB: COT_BuildingPart
      nameWithType:
        CSharp: CityObjectType.COT_BuildingPart
        VB: CityObjectType.COT_BuildingPart
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_BuildingPart
        VB: PLATEAU.CityGML.CityObjectType.COT_BuildingPart
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_BuildingPart
        path: ''
        startLine: 3877
      syntax:
        content:
          CSharp: COT_BuildingPart = 4194304UL
          VB: COT_BuildingPart = 4194304UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_WallSurface
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_WallSurface
      language: CSharp
      name:
        CSharp: COT_WallSurface
        VB: COT_WallSurface
      nameWithType:
        CSharp: CityObjectType.COT_WallSurface
        VB: CityObjectType.COT_WallSurface
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_WallSurface
        VB: PLATEAU.CityGML.CityObjectType.COT_WallSurface
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_WallSurface
        path: ''
        startLine: 3879
      syntax:
        content:
          CSharp: COT_WallSurface = 8388608UL
          VB: COT_WallSurface = 8388608UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_RoofSurface
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_RoofSurface
      language: CSharp
      name:
        CSharp: COT_RoofSurface
        VB: COT_RoofSurface
      nameWithType:
        CSharp: CityObjectType.COT_RoofSurface
        VB: CityObjectType.COT_RoofSurface
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_RoofSurface
        VB: PLATEAU.CityGML.CityObjectType.COT_RoofSurface
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_RoofSurface
        path: ''
        startLine: 3880
      syntax:
        content:
          CSharp: COT_RoofSurface = 16777216UL
          VB: COT_RoofSurface = 16777216UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_GroundSurface
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_GroundSurface
      language: CSharp
      name:
        CSharp: COT_GroundSurface
        VB: COT_GroundSurface
      nameWithType:
        CSharp: CityObjectType.COT_GroundSurface
        VB: CityObjectType.COT_GroundSurface
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_GroundSurface
        VB: PLATEAU.CityGML.CityObjectType.COT_GroundSurface
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_GroundSurface
        path: ''
        startLine: 3881
      syntax:
        content:
          CSharp: COT_GroundSurface = 33554432UL
          VB: COT_GroundSurface = 33554432UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_ClosureSurface
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_ClosureSurface
      language: CSharp
      name:
        CSharp: COT_ClosureSurface
        VB: COT_ClosureSurface
      nameWithType:
        CSharp: CityObjectType.COT_ClosureSurface
        VB: CityObjectType.COT_ClosureSurface
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_ClosureSurface
        VB: PLATEAU.CityGML.CityObjectType.COT_ClosureSurface
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_ClosureSurface
        path: ''
        startLine: 3882
      syntax:
        content:
          CSharp: COT_ClosureSurface = 67108864UL
          VB: COT_ClosureSurface = 67108864UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_FloorSurface
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_FloorSurface
      language: CSharp
      name:
        CSharp: COT_FloorSurface
        VB: COT_FloorSurface
      nameWithType:
        CSharp: CityObjectType.COT_FloorSurface
        VB: CityObjectType.COT_FloorSurface
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_FloorSurface
        VB: PLATEAU.CityGML.CityObjectType.COT_FloorSurface
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_FloorSurface
        path: ''
        startLine: 3883
      syntax:
        content:
          CSharp: COT_FloorSurface = 134217728UL
          VB: COT_FloorSurface = 134217728UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_InteriorWallSurface
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_InteriorWallSurface
      language: CSharp
      name:
        CSharp: COT_InteriorWallSurface
        VB: COT_InteriorWallSurface
      nameWithType:
        CSharp: CityObjectType.COT_InteriorWallSurface
        VB: CityObjectType.COT_InteriorWallSurface
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_InteriorWallSurface
        VB: PLATEAU.CityGML.CityObjectType.COT_InteriorWallSurface
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_InteriorWallSurface
        path: ''
        startLine: 3884
      syntax:
        content:
          CSharp: COT_InteriorWallSurface = 268435456UL
          VB: COT_InteriorWallSurface = 268435456UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_CeilingSurface
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_CeilingSurface
      language: CSharp
      name:
        CSharp: COT_CeilingSurface
        VB: COT_CeilingSurface
      nameWithType:
        CSharp: CityObjectType.COT_CeilingSurface
        VB: CityObjectType.COT_CeilingSurface
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_CeilingSurface
        VB: PLATEAU.CityGML.CityObjectType.COT_CeilingSurface
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_CeilingSurface
        path: ''
        startLine: 3885
      syntax:
        content:
          CSharp: COT_CeilingSurface = 536870912UL
          VB: COT_CeilingSurface = 536870912UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_CityObjectGroup
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_CityObjectGroup
      language: CSharp
      name:
        CSharp: COT_CityObjectGroup
        VB: COT_CityObjectGroup
      nameWithType:
        CSharp: CityObjectType.COT_CityObjectGroup
        VB: CityObjectType.COT_CityObjectGroup
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_CityObjectGroup
        VB: PLATEAU.CityGML.CityObjectType.COT_CityObjectGroup
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_CityObjectGroup
        path: ''
        startLine: 3886
      syntax:
        content:
          CSharp: COT_CityObjectGroup = 1073741824UL
          VB: COT_CityObjectGroup = 1073741824UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_OuterCeilingSurface
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_OuterCeilingSurface
      language: CSharp
      name:
        CSharp: COT_OuterCeilingSurface
        VB: COT_OuterCeilingSurface
      nameWithType:
        CSharp: CityObjectType.COT_OuterCeilingSurface
        VB: CityObjectType.COT_OuterCeilingSurface
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_OuterCeilingSurface
        VB: PLATEAU.CityGML.CityObjectType.COT_OuterCeilingSurface
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_OuterCeilingSurface
        path: ''
        startLine: 3887
      syntax:
        content:
          CSharp: COT_OuterCeilingSurface = 2147483648UL
          VB: COT_OuterCeilingSurface = 2147483648UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_OuterFloorSurface
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_OuterFloorSurface
      language: CSharp
      name:
        CSharp: COT_OuterFloorSurface
        VB: COT_OuterFloorSurface
      nameWithType:
        CSharp: CityObjectType.COT_OuterFloorSurface
        VB: CityObjectType.COT_OuterFloorSurface
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_OuterFloorSurface
        VB: PLATEAU.CityGML.CityObjectType.COT_OuterFloorSurface
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_OuterFloorSurface
        path: ''
        startLine: 3888
      syntax:
        content:
          CSharp: COT_OuterFloorSurface = 4294967296UL
          VB: COT_OuterFloorSurface = 4294967296UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_TransportationObject
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_TransportationObject
      language: CSharp
      name:
        CSharp: COT_TransportationObject
        VB: COT_TransportationObject
      nameWithType:
        CSharp: CityObjectType.COT_TransportationObject
        VB: CityObjectType.COT_TransportationObject
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_TransportationObject
        VB: PLATEAU.CityGML.CityObjectType.COT_TransportationObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_TransportationObject
        path: ''
        startLine: 3893
      syntax:
        content:
          CSharp: COT_TransportationObject = 8589934592UL
          VB: COT_TransportationObject = 8589934592UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_IntBuildingInstallation
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_IntBuildingInstallation
      language: CSharp
      name:
        CSharp: COT_IntBuildingInstallation
        VB: COT_IntBuildingInstallation
      nameWithType:
        CSharp: CityObjectType.COT_IntBuildingInstallation
        VB: CityObjectType.COT_IntBuildingInstallation
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_IntBuildingInstallation
        VB: PLATEAU.CityGML.CityObjectType.COT_IntBuildingInstallation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_IntBuildingInstallation
        path: ''
        startLine: 3896
      syntax:
        content:
          CSharp: COT_IntBuildingInstallation = 17179869184UL
          VB: COT_IntBuildingInstallation = 17179869184UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.CityObjectType.COT_All
      commentId: F:PLATEAU.CityGML.CityObjectType.COT_All
      language: CSharp
      name:
        CSharp: COT_All
        VB: COT_All
      nameWithType:
        CSharp: CityObjectType.COT_All
        VB: CityObjectType.COT_All
      qualifiedName:
        CSharp: PLATEAU.CityGML.CityObjectType.COT_All
        VB: PLATEAU.CityGML.CityObjectType.COT_All
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: COT_All
        path: ''
        startLine: 3898
      syntax:
        content:
          CSharp: COT_All = 18446744073709551615UL
          VB: COT_All = 18446744073709551615UL
        return:
          type: PLATEAU.CityGML.CityObjectType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: PLATEAU.CityGML.TextureWrapMode
    commentId: T:PLATEAU.CityGML.TextureWrapMode
    language: CSharp
    name:
      CSharp: TextureWrapMode
      VB: TextureWrapMode
    nameWithType:
      CSharp: TextureWrapMode
      VB: TextureWrapMode
    qualifiedName:
      CSharp: PLATEAU.CityGML.TextureWrapMode
      VB: PLATEAU.CityGML.TextureWrapMode
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: TextureWrapMode
      path: ''
      startLine: 3901
    syntax:
      content:
        CSharp: public enum TextureWrapMode
        VB: Public Enum TextureWrapMode
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: PLATEAU.CityGML.TextureWrapMode.WM_None
      commentId: F:PLATEAU.CityGML.TextureWrapMode.WM_None
      language: CSharp
      name:
        CSharp: WM_None
        VB: WM_None
      nameWithType:
        CSharp: TextureWrapMode.WM_None
        VB: TextureWrapMode.WM_None
      qualifiedName:
        CSharp: PLATEAU.CityGML.TextureWrapMode.WM_None
        VB: PLATEAU.CityGML.TextureWrapMode.WM_None
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: WM_None
        path: ''
        startLine: 3903
      syntax:
        content:
          CSharp: WM_None = 0
          VB: WM_None = 0
        return:
          type: PLATEAU.CityGML.TextureWrapMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.TextureWrapMode.WM_Wrap
      commentId: F:PLATEAU.CityGML.TextureWrapMode.WM_Wrap
      language: CSharp
      name:
        CSharp: WM_Wrap
        VB: WM_Wrap
      nameWithType:
        CSharp: TextureWrapMode.WM_Wrap
        VB: TextureWrapMode.WM_Wrap
      qualifiedName:
        CSharp: PLATEAU.CityGML.TextureWrapMode.WM_Wrap
        VB: PLATEAU.CityGML.TextureWrapMode.WM_Wrap
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: WM_Wrap
        path: ''
        startLine: 3904
      syntax:
        content:
          CSharp: WM_Wrap = 1
          VB: WM_Wrap = 1
        return:
          type: PLATEAU.CityGML.TextureWrapMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.TextureWrapMode.WM_Mirror
      commentId: F:PLATEAU.CityGML.TextureWrapMode.WM_Mirror
      language: CSharp
      name:
        CSharp: WM_Mirror
        VB: WM_Mirror
      nameWithType:
        CSharp: TextureWrapMode.WM_Mirror
        VB: TextureWrapMode.WM_Mirror
      qualifiedName:
        CSharp: PLATEAU.CityGML.TextureWrapMode.WM_Mirror
        VB: PLATEAU.CityGML.TextureWrapMode.WM_Mirror
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: WM_Mirror
        path: ''
        startLine: 3905
      syntax:
        content:
          CSharp: WM_Mirror = 2
          VB: WM_Mirror = 2
        return:
          type: PLATEAU.CityGML.TextureWrapMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.TextureWrapMode.WM_Clamp
      commentId: F:PLATEAU.CityGML.TextureWrapMode.WM_Clamp
      language: CSharp
      name:
        CSharp: WM_Clamp
        VB: WM_Clamp
      nameWithType:
        CSharp: TextureWrapMode.WM_Clamp
        VB: TextureWrapMode.WM_Clamp
      qualifiedName:
        CSharp: PLATEAU.CityGML.TextureWrapMode.WM_Clamp
        VB: PLATEAU.CityGML.TextureWrapMode.WM_Clamp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: WM_Clamp
        path: ''
        startLine: 3906
      syntax:
        content:
          CSharp: WM_Clamp = 3
          VB: WM_Clamp = 3
        return:
          type: PLATEAU.CityGML.TextureWrapMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.TextureWrapMode.WM_Border
      commentId: F:PLATEAU.CityGML.TextureWrapMode.WM_Border
      language: CSharp
      name:
        CSharp: WM_Border
        VB: WM_Border
      nameWithType:
        CSharp: TextureWrapMode.WM_Border
        VB: TextureWrapMode.WM_Border
      qualifiedName:
        CSharp: PLATEAU.CityGML.TextureWrapMode.WM_Border
        VB: PLATEAU.CityGML.TextureWrapMode.WM_Border
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: WM_Border
        path: ''
        startLine: 3907
      syntax:
        content:
          CSharp: WM_Border = 4
          VB: WM_Border = 4
        return:
          type: PLATEAU.CityGML.TextureWrapMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: PLATEAU.CityGML.GeometryType
    commentId: T:PLATEAU.CityGML.GeometryType
    language: CSharp
    name:
      CSharp: GeometryType
      VB: GeometryType
    nameWithType:
      CSharp: GeometryType
      VB: GeometryType
    qualifiedName:
      CSharp: PLATEAU.CityGML.GeometryType
      VB: PLATEAU.CityGML.GeometryType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: GeometryType
      path: ''
      startLine: 3910
    syntax:
      content:
        CSharp: 'public enum GeometryType : ulong'
        VB: Public Enum GeometryType As ULong
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: PLATEAU.CityGML.GeometryType.GT_Unknown
      commentId: F:PLATEAU.CityGML.GeometryType.GT_Unknown
      language: CSharp
      name:
        CSharp: GT_Unknown
        VB: GT_Unknown
      nameWithType:
        CSharp: GeometryType.GT_Unknown
        VB: GeometryType.GT_Unknown
      qualifiedName:
        CSharp: PLATEAU.CityGML.GeometryType.GT_Unknown
        VB: PLATEAU.CityGML.GeometryType.GT_Unknown
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: GT_Unknown
        path: ''
        startLine: 3912
      syntax:
        content:
          CSharp: GT_Unknown = 1UL
          VB: GT_Unknown = 1UL
        return:
          type: PLATEAU.CityGML.GeometryType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.GeometryType.GT_Roof
      commentId: F:PLATEAU.CityGML.GeometryType.GT_Roof
      language: CSharp
      name:
        CSharp: GT_Roof
        VB: GT_Roof
      nameWithType:
        CSharp: GeometryType.GT_Roof
        VB: GeometryType.GT_Roof
      qualifiedName:
        CSharp: PLATEAU.CityGML.GeometryType.GT_Roof
        VB: PLATEAU.CityGML.GeometryType.GT_Roof
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: GT_Roof
        path: ''
        startLine: 3913
      syntax:
        content:
          CSharp: GT_Roof = 2UL
          VB: GT_Roof = 2UL
        return:
          type: PLATEAU.CityGML.GeometryType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.GeometryType.GT_Wall
      commentId: F:PLATEAU.CityGML.GeometryType.GT_Wall
      language: CSharp
      name:
        CSharp: GT_Wall
        VB: GT_Wall
      nameWithType:
        CSharp: GeometryType.GT_Wall
        VB: GeometryType.GT_Wall
      qualifiedName:
        CSharp: PLATEAU.CityGML.GeometryType.GT_Wall
        VB: PLATEAU.CityGML.GeometryType.GT_Wall
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: GT_Wall
        path: ''
        startLine: 3914
      syntax:
        content:
          CSharp: GT_Wall = 4UL
          VB: GT_Wall = 4UL
        return:
          type: PLATEAU.CityGML.GeometryType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.GeometryType.GT_Ground
      commentId: F:PLATEAU.CityGML.GeometryType.GT_Ground
      language: CSharp
      name:
        CSharp: GT_Ground
        VB: GT_Ground
      nameWithType:
        CSharp: GeometryType.GT_Ground
        VB: GeometryType.GT_Ground
      qualifiedName:
        CSharp: PLATEAU.CityGML.GeometryType.GT_Ground
        VB: PLATEAU.CityGML.GeometryType.GT_Ground
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: GT_Ground
        path: ''
        startLine: 3915
      syntax:
        content:
          CSharp: GT_Ground = 8UL
          VB: GT_Ground = 8UL
        return:
          type: PLATEAU.CityGML.GeometryType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.GeometryType.GT_Closure
      commentId: F:PLATEAU.CityGML.GeometryType.GT_Closure
      language: CSharp
      name:
        CSharp: GT_Closure
        VB: GT_Closure
      nameWithType:
        CSharp: GeometryType.GT_Closure
        VB: GeometryType.GT_Closure
      qualifiedName:
        CSharp: PLATEAU.CityGML.GeometryType.GT_Closure
        VB: PLATEAU.CityGML.GeometryType.GT_Closure
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: GT_Closure
        path: ''
        startLine: 3916
      syntax:
        content:
          CSharp: GT_Closure = 16UL
          VB: GT_Closure = 16UL
        return:
          type: PLATEAU.CityGML.GeometryType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.GeometryType.GT_Floor
      commentId: F:PLATEAU.CityGML.GeometryType.GT_Floor
      language: CSharp
      name:
        CSharp: GT_Floor
        VB: GT_Floor
      nameWithType:
        CSharp: GeometryType.GT_Floor
        VB: GeometryType.GT_Floor
      qualifiedName:
        CSharp: PLATEAU.CityGML.GeometryType.GT_Floor
        VB: PLATEAU.CityGML.GeometryType.GT_Floor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: GT_Floor
        path: ''
        startLine: 3917
      syntax:
        content:
          CSharp: GT_Floor = 32UL
          VB: GT_Floor = 32UL
        return:
          type: PLATEAU.CityGML.GeometryType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.GeometryType.GT_InteriorWall
      commentId: F:PLATEAU.CityGML.GeometryType.GT_InteriorWall
      language: CSharp
      name:
        CSharp: GT_InteriorWall
        VB: GT_InteriorWall
      nameWithType:
        CSharp: GeometryType.GT_InteriorWall
        VB: GeometryType.GT_InteriorWall
      qualifiedName:
        CSharp: PLATEAU.CityGML.GeometryType.GT_InteriorWall
        VB: PLATEAU.CityGML.GeometryType.GT_InteriorWall
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: GT_InteriorWall
        path: ''
        startLine: 3918
      syntax:
        content:
          CSharp: GT_InteriorWall = 64UL
          VB: GT_InteriorWall = 64UL
        return:
          type: PLATEAU.CityGML.GeometryType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.GeometryType.GT_Ceiling
      commentId: F:PLATEAU.CityGML.GeometryType.GT_Ceiling
      language: CSharp
      name:
        CSharp: GT_Ceiling
        VB: GT_Ceiling
      nameWithType:
        CSharp: GeometryType.GT_Ceiling
        VB: GeometryType.GT_Ceiling
      qualifiedName:
        CSharp: PLATEAU.CityGML.GeometryType.GT_Ceiling
        VB: PLATEAU.CityGML.GeometryType.GT_Ceiling
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: GT_Ceiling
        path: ''
        startLine: 3919
      syntax:
        content:
          CSharp: GT_Ceiling = 128UL
          VB: GT_Ceiling = 128UL
        return:
          type: PLATEAU.CityGML.GeometryType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.GeometryType.GT_OuterCeiling
      commentId: F:PLATEAU.CityGML.GeometryType.GT_OuterCeiling
      language: CSharp
      name:
        CSharp: GT_OuterCeiling
        VB: GT_OuterCeiling
      nameWithType:
        CSharp: GeometryType.GT_OuterCeiling
        VB: GeometryType.GT_OuterCeiling
      qualifiedName:
        CSharp: PLATEAU.CityGML.GeometryType.GT_OuterCeiling
        VB: PLATEAU.CityGML.GeometryType.GT_OuterCeiling
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: GT_OuterCeiling
        path: ''
        startLine: 3920
      syntax:
        content:
          CSharp: GT_OuterCeiling = 256UL
          VB: GT_OuterCeiling = 256UL
        return:
          type: PLATEAU.CityGML.GeometryType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.GeometryType.GT_OuterFloor
      commentId: F:PLATEAU.CityGML.GeometryType.GT_OuterFloor
      language: CSharp
      name:
        CSharp: GT_OuterFloor
        VB: GT_OuterFloor
      nameWithType:
        CSharp: GeometryType.GT_OuterFloor
        VB: GeometryType.GT_OuterFloor
      qualifiedName:
        CSharp: PLATEAU.CityGML.GeometryType.GT_OuterFloor
        VB: PLATEAU.CityGML.GeometryType.GT_OuterFloor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: GT_OuterFloor
        path: ''
        startLine: 3921
      syntax:
        content:
          CSharp: GT_OuterFloor = 512UL
          VB: GT_OuterFloor = 512UL
        return:
          type: PLATEAU.CityGML.GeometryType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.GeometryType.GT_Tin
      commentId: F:PLATEAU.CityGML.GeometryType.GT_Tin
      language: CSharp
      name:
        CSharp: GT_Tin
        VB: GT_Tin
      nameWithType:
        CSharp: GeometryType.GT_Tin
        VB: GeometryType.GT_Tin
      qualifiedName:
        CSharp: PLATEAU.CityGML.GeometryType.GT_Tin
        VB: PLATEAU.CityGML.GeometryType.GT_Tin
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: GT_Tin
        path: ''
        startLine: 3922
      syntax:
        content:
          CSharp: GT_Tin = 1024UL
          VB: GT_Tin = 1024UL
        return:
          type: PLATEAU.CityGML.GeometryType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: PLATEAU.CityGML.AttributeType
    commentId: T:PLATEAU.CityGML.AttributeType
    language: CSharp
    name:
      CSharp: AttributeType
      VB: AttributeType
    nameWithType:
      CSharp: AttributeType
      VB: AttributeType
    qualifiedName:
      CSharp: PLATEAU.CityGML.AttributeType
      VB: PLATEAU.CityGML.AttributeType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: AttributeType
      path: ''
      startLine: 3930
    summary: "\n属性の値の想定形式です。\n形式が String, Double, Integer, Data, Uri, Measure である場合、内部的にはデータは string です。\nAttributeSet である場合、内部的にはデータは <xref href=\"PLATEAU.CityGML.AttributesMap\" data-throw-if-not-resolved=\"false\"></xref> への参照です。\n"
    example: []
    syntax:
      content:
        CSharp: public enum AttributeType
        VB: Public Enum AttributeType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: PLATEAU.CityGML.AttributeType.String
      commentId: F:PLATEAU.CityGML.AttributeType.String
      language: CSharp
      name:
        CSharp: String
        VB: String
      nameWithType:
        CSharp: AttributeType.String
        VB: AttributeType.String
      qualifiedName:
        CSharp: PLATEAU.CityGML.AttributeType.String
        VB: PLATEAU.CityGML.AttributeType.String
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: String
        path: ''
        startLine: 3932
      syntax:
        content:
          CSharp: String = 0
          VB: String = 0
        return:
          type: PLATEAU.CityGML.AttributeType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.AttributeType.Double
      commentId: F:PLATEAU.CityGML.AttributeType.Double
      language: CSharp
      name:
        CSharp: Double
        VB: Double
      nameWithType:
        CSharp: AttributeType.Double
        VB: AttributeType.Double
      qualifiedName:
        CSharp: PLATEAU.CityGML.AttributeType.Double
        VB: PLATEAU.CityGML.AttributeType.Double
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Double
        path: ''
        startLine: 3933
      syntax:
        content:
          CSharp: Double = 1
          VB: Double = 1
        return:
          type: PLATEAU.CityGML.AttributeType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.AttributeType.Integer
      commentId: F:PLATEAU.CityGML.AttributeType.Integer
      language: CSharp
      name:
        CSharp: Integer
        VB: Integer
      nameWithType:
        CSharp: AttributeType.Integer
        VB: AttributeType.Integer
      qualifiedName:
        CSharp: PLATEAU.CityGML.AttributeType.Integer
        VB: PLATEAU.CityGML.AttributeType.Integer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Integer
        path: ''
        startLine: 3934
      syntax:
        content:
          CSharp: Integer = 2
          VB: Integer = 2
        return:
          type: PLATEAU.CityGML.AttributeType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.AttributeType.Data
      commentId: F:PLATEAU.CityGML.AttributeType.Data
      language: CSharp
      name:
        CSharp: Data
        VB: Data
      nameWithType:
        CSharp: AttributeType.Data
        VB: AttributeType.Data
      qualifiedName:
        CSharp: PLATEAU.CityGML.AttributeType.Data
        VB: PLATEAU.CityGML.AttributeType.Data
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Data
        path: ''
        startLine: 3935
      syntax:
        content:
          CSharp: Data = 3
          VB: Data = 3
        return:
          type: PLATEAU.CityGML.AttributeType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.AttributeType.Uri
      commentId: F:PLATEAU.CityGML.AttributeType.Uri
      language: CSharp
      name:
        CSharp: Uri
        VB: Uri
      nameWithType:
        CSharp: AttributeType.Uri
        VB: AttributeType.Uri
      qualifiedName:
        CSharp: PLATEAU.CityGML.AttributeType.Uri
        VB: PLATEAU.CityGML.AttributeType.Uri
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Uri
        path: ''
        startLine: 3936
      syntax:
        content:
          CSharp: Uri = 4
          VB: Uri = 4
        return:
          type: PLATEAU.CityGML.AttributeType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.AttributeType.Measure
      commentId: F:PLATEAU.CityGML.AttributeType.Measure
      language: CSharp
      name:
        CSharp: Measure
        VB: Measure
      nameWithType:
        CSharp: AttributeType.Measure
        VB: AttributeType.Measure
      qualifiedName:
        CSharp: PLATEAU.CityGML.AttributeType.Measure
        VB: PLATEAU.CityGML.AttributeType.Measure
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Measure
        path: ''
        startLine: 3937
      syntax:
        content:
          CSharp: Measure = 5
          VB: Measure = 5
        return:
          type: PLATEAU.CityGML.AttributeType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityGML.AttributeType.AttributeSet
      commentId: F:PLATEAU.CityGML.AttributeType.AttributeSet
      language: CSharp
      name:
        CSharp: AttributeSet
        VB: AttributeSet
      nameWithType:
        CSharp: AttributeType.AttributeSet
        VB: AttributeType.AttributeSet
      qualifiedName:
        CSharp: PLATEAU.CityGML.AttributeType.AttributeSet
        VB: PLATEAU.CityGML.AttributeType.AttributeSet
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: AttributeSet
        path: ''
        startLine: 3938
      syntax:
        content:
          CSharp: AttributeSet = 6
          VB: AttributeSet = 6
        return:
          type: PLATEAU.CityGML.AttributeType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    references:
      PLATEAU.CityGML.AttributesMap: 
  - id: PLATEAU.CityGML.LogCallbackFuncType
    commentId: T:PLATEAU.CityGML.LogCallbackFuncType
    language: CSharp
    name:
      CSharp: LogCallbackFuncType
      VB: LogCallbackFuncType
    nameWithType:
      CSharp: LogCallbackFuncType
      VB: LogCallbackFuncType
    qualifiedName:
      CSharp: PLATEAU.CityGML.LogCallbackFuncType
      VB: PLATEAU.CityGML.LogCallbackFuncType
    type: Delegate
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: LogCallbackFuncType
      path: ''
      startLine: 3941
    syntax:
      content:
        CSharp: public delegate void LogCallbackFuncType(IntPtr textPtr);
        VB: Public Delegate Sub LogCallbackFuncType(textPtr As IntPtr)
      parameters:
      - id: textPtr
        type: PLATEAU.IntPtr
    modifiers:
      CSharp:
      - public
      - delegate
      VB:
      - Public
      - Delegate
    items: []
  - id: PLATEAU.CityGML.Object
    commentId: T:PLATEAU.CityGML.Object
    language: CSharp
    name:
      CSharp: Object
      VB: Object
    nameWithType:
      CSharp: Object
      VB: Object
    qualifiedName:
      CSharp: PLATEAU.CityGML.Object
      VB: PLATEAU.CityGML.Object
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: Object
      path: ''
      startLine: 4497
    summary: "\nCityGMLにおける全てのオブジェクトのベースクラスです。\nユニークIDと0個以上の属性ペアを持ち、属性ペアはすべて <xref href=\"PLATEAU.CityGML.AttributesMap\" data-throw-if-not-resolved=\"false\"></xref> に格納されています。\n"
    example: []
    syntax:
      content:
        CSharp: public class Object
        VB: Public Class Object
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PLATEAU.CityGML.Object.Handle
      commentId: P:PLATEAU.CityGML.Object.Handle
      language: CSharp
      name:
        CSharp: Handle
        VB: Handle
      nameWithType:
        CSharp: Object.Handle
        VB: Object.Handle
      qualifiedName:
        CSharp: PLATEAU.CityGML.Object.Handle
        VB: PLATEAU.CityGML.Object.Handle
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Handle
        path: ''
        startLine: 4511
      summary: "\nセーフハンドルを取得します。\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr Handle { get; }
          VB: Public ReadOnly Property Handle As IntPtr
        parameters: []
        return:
          type: PLATEAU.IntPtr
      overload: PLATEAU.CityGML.Object.Handle*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.Object.ID
      commentId: P:PLATEAU.CityGML.Object.ID
      language: CSharp
      name:
        CSharp: ID
        VB: ID
      nameWithType:
        CSharp: Object.ID
        VB: Object.ID
      qualifiedName:
        CSharp: PLATEAU.CityGML.Object.ID
        VB: PLATEAU.CityGML.Object.ID
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: ID
        path: ''
        startLine: 4516
      summary: "\nオブジェクトのユニークIDを取得します。\n"
      example: []
      syntax:
        content:
          CSharp: public string ID { get; }
          VB: Public ReadOnly Property ID As String
        parameters: []
        return:
          type: System.String
      overload: PLATEAU.CityGML.Object.ID*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.Object.AttributesMap
      commentId: P:PLATEAU.CityGML.Object.AttributesMap
      language: CSharp
      name:
        CSharp: AttributesMap
        VB: AttributesMap
      nameWithType:
        CSharp: Object.AttributesMap
        VB: Object.AttributesMap
      qualifiedName:
        CSharp: PLATEAU.CityGML.Object.AttributesMap
        VB: PLATEAU.CityGML.Object.AttributesMap
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: AttributesMap
        path: ''
        startLine: 4534
      summary: '属性の辞書を取得します。 '
      example: []
      syntax:
        content:
          CSharp: public AttributesMap AttributesMap { get; }
          VB: Public ReadOnly Property AttributesMap As AttributesMap
        parameters: []
        return:
          type: PLATEAU.CityGML.AttributesMap
          description: <xref href="PLATEAU.CityGML.AttributesMap" data-throw-if-not-resolved="false"></xref> 型で返します。
      overload: PLATEAU.CityGML.Object.AttributesMap*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        PLATEAU.CityGML.AttributesMap: 
    references:
      PLATEAU.CityGML.AttributesMap: 
  - id: PLATEAU.CityGML.Polygon
    commentId: T:PLATEAU.CityGML.Polygon
    language: CSharp
    name:
      CSharp: Polygon
      VB: Polygon
    nameWithType:
      CSharp: Polygon
      VB: Polygon
    qualifiedName:
      CSharp: PLATEAU.CityGML.Polygon
      VB: PLATEAU.CityGML.Polygon
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: Polygon
      path: ''
      startLine: 4564
    summary: "\n建築物の形状におけるポリゴンです。\nVertices , Indices を保持します。\nただし、GMLファイルのパース時に <xref href=\"PLATEAU.CityGML.CitygmlParserParams.Tessellate\" data-throw-if-not-resolved=\"false\"></xref> を false に設定した時に限り、\nVertices, Indices の代わりに <xref href=\"PLATEAU.CityGML.Polygon.ExteriorRing\" data-throw-if-not-resolved=\"false\"></xref> , <xref href=\"PLATEAU.CityGML.Polygon.InteriorRings\" data-throw-if-not-resolved=\"false\"></xref> を保持することがあります。\nVertex と Ring を両方保持する場合もあれば、片方だけの場合もあります。\n<xref href=\"PLATEAU.CityGML.Polygon\" data-throw-if-not-resolved=\"false\"></xref> は <xref href=\"PLATEAU.CityGML.Geometry\" data-throw-if-not-resolved=\"false\"></xref> によって保持されます。\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Polygon : AppearanceTarget'
        VB: >-
          Public Class Polygon

              Inherits AppearanceTarget
    inheritance:
    - System.Object
    - PLATEAU.CityGML.Object
    - PLATEAU.CityGML.AppearanceTarget
    inheritedMembers:
    - PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitionsCount
    - PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition(System.Int32)
    - PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitions
    - PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition(System.String,System.Boolean)
    - PLATEAU.CityGML.AppearanceTarget.TextureThemesCountOfFront(System.Boolean)
    - PLATEAU.CityGML.AppearanceTarget.TextureThemeNames(System.Boolean)
    - PLATEAU.CityGML.AppearanceTarget.MaterialThemesCountByFront(System.Boolean)
    - PLATEAU.CityGML.AppearanceTarget.MaterialThemeNames(System.Boolean)
    - PLATEAU.CityGML.AppearanceTarget.GetMaterialTargetDefinitionByThemeName(System.String,System.Boolean)
    - PLATEAU.CityGML.Object.Handle
    - PLATEAU.CityGML.Object.ID
    - PLATEAU.CityGML.Object.AttributesMap
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PLATEAU.CityGML.Polygon.DoHaveVertices
      commentId: P:PLATEAU.CityGML.Polygon.DoHaveVertices
      language: CSharp
      name:
        CSharp: DoHaveVertices
        VB: DoHaveVertices
      nameWithType:
        CSharp: Polygon.DoHaveVertices
        VB: Polygon.DoHaveVertices
      qualifiedName:
        CSharp: PLATEAU.CityGML.Polygon.DoHaveVertices
        VB: PLATEAU.CityGML.Polygon.DoHaveVertices
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: DoHaveVertices
        path: ''
        startLine: 4574
      summary: 'ポリゴンとしての頂点を持っているか '
      example: []
      syntax:
        content:
          CSharp: public bool DoHaveVertices { get; }
          VB: Public ReadOnly Property DoHaveVertices As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: PLATEAU.CityGML.Polygon.DoHaveVertices*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.Polygon.DoHaveRings
      commentId: P:PLATEAU.CityGML.Polygon.DoHaveRings
      language: CSharp
      name:
        CSharp: DoHaveRings
        VB: DoHaveRings
      nameWithType:
        CSharp: Polygon.DoHaveRings
        VB: Polygon.DoHaveRings
      qualifiedName:
        CSharp: PLATEAU.CityGML.Polygon.DoHaveRings
        VB: PLATEAU.CityGML.Polygon.DoHaveRings
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: DoHaveRings
        path: ''
        startLine: 4576
      summary: '多角形の形状情報としての <xref href="PLATEAU.CityGML.LinearRing" data-throw-if-not-resolved="false"></xref>(Exterior または Interior)を持っているか '
      example: []
      syntax:
        content:
          CSharp: public bool DoHaveRings { get; }
          VB: Public ReadOnly Property DoHaveRings As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: PLATEAU.CityGML.Polygon.DoHaveRings*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        PLATEAU.CityGML.LinearRing: 
    - id: PLATEAU.CityGML.Polygon.VertexCount
      commentId: P:PLATEAU.CityGML.Polygon.VertexCount
      language: CSharp
      name:
        CSharp: VertexCount
        VB: VertexCount
      nameWithType:
        CSharp: Polygon.VertexCount
        VB: Polygon.VertexCount
      qualifiedName:
        CSharp: PLATEAU.CityGML.Polygon.VertexCount
        VB: PLATEAU.CityGML.Polygon.VertexCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: VertexCount
        path: ''
        startLine: 4581
      summary: "\n頂点数を返します。\n"
      example: []
      syntax:
        content:
          CSharp: public int VertexCount { get; }
          VB: Public ReadOnly Property VertexCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: PLATEAU.CityGML.Polygon.VertexCount*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.Polygon.GetVertex(System.Int32)
      commentId: M:PLATEAU.CityGML.Polygon.GetVertex(System.Int32)
      language: CSharp
      name:
        CSharp: GetVertex(Int32)
        VB: GetVertex(Int32)
      nameWithType:
        CSharp: Polygon.GetVertex(Int32)
        VB: Polygon.GetVertex(Int32)
      qualifiedName:
        CSharp: PLATEAU.CityGML.Polygon.GetVertex(System.Int32)
        VB: PLATEAU.CityGML.Polygon.GetVertex(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: GetVertex
        path: ''
        startLine: 4593
      summary: "\n頂点番号を受け取り、その頂点の座標を返します。\n"
      example: []
      syntax:
        content:
          CSharp: public PlateauVector3d GetVertex(int index)
          VB: Public Function GetVertex(index As Integer) As PlateauVector3d
        parameters:
        - id: index
          type: System.Int32
        return:
          type: PLATEAU.CityGML.PlateauVector3d
      overload: PLATEAU.CityGML.Polygon.GetVertex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityGML.Polygon.IndicesCount
      commentId: P:PLATEAU.CityGML.Polygon.IndicesCount
      language: CSharp
      name:
        CSharp: IndicesCount
        VB: IndicesCount
      nameWithType:
        CSharp: Polygon.IndicesCount
        VB: Polygon.IndicesCount
      qualifiedName:
        CSharp: PLATEAU.CityGML.Polygon.IndicesCount
        VB: PLATEAU.CityGML.Polygon.IndicesCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: IndicesCount
        path: ''
        startLine: 4605
      syntax:
        content:
          CSharp: public int IndicesCount { get; }
          VB: Public ReadOnly Property IndicesCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: PLATEAU.CityGML.Polygon.IndicesCount*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.Polygon.GetIndexOfIndices(System.Int32)
      commentId: M:PLATEAU.CityGML.Polygon.GetIndexOfIndices(System.Int32)
      language: CSharp
      name:
        CSharp: GetIndexOfIndices(Int32)
        VB: GetIndexOfIndices(Int32)
      nameWithType:
        CSharp: Polygon.GetIndexOfIndices(Int32)
        VB: Polygon.GetIndexOfIndices(Int32)
      qualifiedName:
        CSharp: PLATEAU.CityGML.Polygon.GetIndexOfIndices(System.Int32)
        VB: PLATEAU.CityGML.Polygon.GetIndexOfIndices(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: GetIndexOfIndices
        path: ''
        startLine: 4615
      syntax:
        content:
          CSharp: public int GetIndexOfIndices(int indexOfIndicesList)
          VB: Public Function GetIndexOfIndices(indexOfIndicesList As Integer) As Integer
        parameters:
        - id: indexOfIndicesList
          type: System.Int32
        return:
          type: System.Int32
      overload: PLATEAU.CityGML.Polygon.GetIndexOfIndices*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityGML.Polygon.Indices
      commentId: P:PLATEAU.CityGML.Polygon.Indices
      language: CSharp
      name:
        CSharp: Indices
        VB: Indices
      nameWithType:
        CSharp: Polygon.Indices
        VB: Polygon.Indices
      qualifiedName:
        CSharp: PLATEAU.CityGML.Polygon.Indices
        VB: PLATEAU.CityGML.Polygon.Indices
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Indices
        path: ''
        startLine: 4622
      syntax:
        content:
          CSharp: public IEnumerable<int> Indices { get; }
          VB: Public ReadOnly Property Indices As IEnumerable(Of Integer)
        parameters: []
        return:
          type: PLATEAU.IEnumerable{System.Int32}
      overload: PLATEAU.CityGML.Polygon.Indices*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.Polygon.ExteriorRing
      commentId: P:PLATEAU.CityGML.Polygon.ExteriorRing
      language: CSharp
      name:
        CSharp: ExteriorRing
        VB: ExteriorRing
      nameWithType:
        CSharp: Polygon.ExteriorRing
        VB: Polygon.ExteriorRing
      qualifiedName:
        CSharp: PLATEAU.CityGML.Polygon.ExteriorRing
        VB: PLATEAU.CityGML.Polygon.ExteriorRing
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: ExteriorRing
        path: ''
        startLine: 4639
      summary: "\n建物の外周の形状です。\nGMLファイルのパース時の設定で <xref href=\"PLATEAU.CityGML.CitygmlParserParams.Tessellate\" data-throw-if-not-resolved=\"false\"></xref> が true の場合、この情報は保持されません。\nfalse の場合、 <xref href=\"PLATEAU.CityGML.Polygon.ExteriorRing\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"PLATEAU.CityGML.Polygon.InteriorRings\" data-throw-if-not-resolved=\"false\"></xref>が保持される場合があります。\n"
      example: []
      syntax:
        content:
          CSharp: public LinearRing ExteriorRing { get; }
          VB: Public ReadOnly Property ExteriorRing As LinearRing
        parameters: []
        return:
          type: PLATEAU.CityGML.LinearRing
      overload: PLATEAU.CityGML.Polygon.ExteriorRing*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        PLATEAU.CityGML.CitygmlParserParams.Tessellate: 
        PLATEAU.CityGML.Polygon.ExteriorRing: 
        PLATEAU.CityGML.Polygon.InteriorRings: 
    - id: PLATEAU.CityGML.Polygon.InteriorRingCount
      commentId: P:PLATEAU.CityGML.Polygon.InteriorRingCount
      language: CSharp
      name:
        CSharp: InteriorRingCount
        VB: InteriorRingCount
      nameWithType:
        CSharp: Polygon.InteriorRingCount
        VB: Polygon.InteriorRingCount
      qualifiedName:
        CSharp: PLATEAU.CityGML.Polygon.InteriorRingCount
        VB: PLATEAU.CityGML.Polygon.InteriorRingCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: InteriorRingCount
        path: ''
        startLine: 4654
      summary: "\n建物の形状の多角形表現のうち、内側にある多角形の数です。\n"
      example: []
      syntax:
        content:
          CSharp: public int InteriorRingCount { get; }
          VB: Public ReadOnly Property InteriorRingCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: PLATEAU.CityGML.Polygon.InteriorRingCount*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.Polygon.GetInteriorRing(System.Int32)
      commentId: M:PLATEAU.CityGML.Polygon.GetInteriorRing(System.Int32)
      language: CSharp
      name:
        CSharp: GetInteriorRing(Int32)
        VB: GetInteriorRing(Int32)
      nameWithType:
        CSharp: Polygon.GetInteriorRing(Int32)
        VB: Polygon.GetInteriorRing(Int32)
      qualifiedName:
        CSharp: PLATEAU.CityGML.Polygon.GetInteriorRing(System.Int32)
        VB: PLATEAU.CityGML.Polygon.GetInteriorRing(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: GetInteriorRing
        path: ''
        startLine: 4661
      summary: "\n建物の形状の多角形表現のうち、内側にある多角形の1つをインデックス指定で返します。\n"
      example: []
      syntax:
        content:
          CSharp: public LinearRing GetInteriorRing(int index)
          VB: Public Function GetInteriorRing(index As Integer) As LinearRing
        parameters:
        - id: index
          type: System.Int32
        return:
          type: PLATEAU.CityGML.LinearRing
      overload: PLATEAU.CityGML.Polygon.GetInteriorRing*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityGML.Polygon.InteriorRings
      commentId: P:PLATEAU.CityGML.Polygon.InteriorRings
      language: CSharp
      name:
        CSharp: InteriorRings
        VB: InteriorRings
      nameWithType:
        CSharp: Polygon.InteriorRings
        VB: Polygon.InteriorRings
      qualifiedName:
        CSharp: PLATEAU.CityGML.Polygon.InteriorRings
        VB: PLATEAU.CityGML.Polygon.InteriorRings
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: InteriorRings
        path: ''
        startLine: 4675
      summary: "\nInteriorRing を foreach や Linq で回したい時に利用できます。\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerable<LinearRing> InteriorRings { get; }
          VB: Public ReadOnly Property InteriorRings As IEnumerable(Of LinearRing)
        parameters: []
        return:
          type: PLATEAU.IEnumerable{PLATEAU.CityGML.LinearRing}
      overload: PLATEAU.CityGML.Polygon.InteriorRings*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    references:
      PLATEAU.CityGML.CitygmlParserParams.Tessellate: 
      PLATEAU.CityGML.Polygon.ExteriorRing: 
      PLATEAU.CityGML.Polygon.InteriorRings: 
      PLATEAU.CityGML.Polygon: 
      PLATEAU.CityGML.Geometry: 
  - id: PLATEAU.CityGML.Texture
    commentId: T:PLATEAU.CityGML.Texture
    language: CSharp
    name:
      CSharp: Texture
      VB: Texture
    nameWithType:
      CSharp: Texture
      VB: Texture
    qualifiedName:
      CSharp: PLATEAU.CityGML.Texture
      VB: PLATEAU.CityGML.Texture
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: Texture
      path: ''
      startLine: 4699
    summary: "\nテクスチャ情報です。\n<xref href=\"PLATEAU.CityGML.Texture.Url\" data-throw-if-not-resolved=\"false\"></xref> と <xref href=\"PLATEAU.CityGML.TextureWrapMode\" data-throw-if-not-resolved=\"false\"></xref> を保持します。\n<xref href=\"PLATEAU.CityGML.TextureTargetDefinition\" data-throw-if-not-resolved=\"false\"></xref> によって保持されます。\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Texture : Appearance'
        VB: >-
          Public Class Texture

              Inherits Appearance
    inheritance:
    - System.Object
    - PLATEAU.CityGML.Object
    - PLATEAU.CityGML.Appearance
    inheritedMembers:
    - PLATEAU.CityGML.Appearance.Type
    - PLATEAU.CityGML.Appearance.IsFront
    - PLATEAU.CityGML.Appearance.Themes
    - PLATEAU.CityGML.Object.Handle
    - PLATEAU.CityGML.Object.ID
    - PLATEAU.CityGML.Object.AttributesMap
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PLATEAU.CityGML.Texture.Url
      commentId: P:PLATEAU.CityGML.Texture.Url
      language: CSharp
      name:
        CSharp: Url
        VB: Url
      nameWithType:
        CSharp: Texture.Url
        VB: Texture.Url
      qualifiedName:
        CSharp: PLATEAU.CityGML.Texture.Url
        VB: PLATEAU.CityGML.Texture.Url
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Url
        path: ''
        startLine: 4706
      summary: 'テクスチャのURLを返します。 '
      example: []
      syntax:
        content:
          CSharp: public string Url { get; }
          VB: Public ReadOnly Property Url As String
        parameters: []
        return:
          type: System.String
      overload: PLATEAU.CityGML.Texture.Url*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.Texture.WrapMode
      commentId: P:PLATEAU.CityGML.Texture.WrapMode
      language: CSharp
      name:
        CSharp: WrapMode
        VB: WrapMode
      nameWithType:
        CSharp: Texture.WrapMode
        VB: Texture.WrapMode
      qualifiedName:
        CSharp: PLATEAU.CityGML.Texture.WrapMode
        VB: PLATEAU.CityGML.Texture.WrapMode
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: WrapMode
        path: ''
        startLine: 4710
      syntax:
        content:
          CSharp: public TextureWrapMode WrapMode { get; }
          VB: Public ReadOnly Property WrapMode As TextureWrapMode
        parameters: []
        return:
          type: PLATEAU.CityGML.TextureWrapMode
      overload: PLATEAU.CityGML.Texture.WrapMode*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    references:
      PLATEAU.CityGML.Texture.Url: 
      PLATEAU.CityGML.TextureWrapMode: 
      PLATEAU.CityGML.TextureTargetDefinition: 
  - id: PLATEAU.CityGML.TextureCoordinates
    commentId: T:PLATEAU.CityGML.TextureCoordinates
    language: CSharp
    name:
      CSharp: TextureCoordinates
      VB: TextureCoordinates
    nameWithType:
      CSharp: TextureCoordinates
      VB: TextureCoordinates
    qualifiedName:
      CSharp: PLATEAU.CityGML.TextureCoordinates
      VB: PLATEAU.CityGML.TextureCoordinates
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: TextureCoordinates
      path: ''
      startLine: 4724
    summary: "\nテクスチャのマッピングに関する情報です。\nテクスチャ座標と <xref href=\"PLATEAU.CityGML.LinearRing\" data-throw-if-not-resolved=\"false\"></xref> の頂点を紐付けます。\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TextureCoordinates : Object'
        VB: >-
          Public Class TextureCoordinates

              Inherits Object
    inheritance:
    - System.Object
    - PLATEAU.CityGML.Object
    inheritedMembers:
    - PLATEAU.CityGML.Object.Handle
    - PLATEAU.CityGML.Object.ID
    - PLATEAU.CityGML.Object.AttributesMap
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PLATEAU.CityGML.TextureCoordinates.Vec2CoordsCount
      commentId: P:PLATEAU.CityGML.TextureCoordinates.Vec2CoordsCount
      language: CSharp
      name:
        CSharp: Vec2CoordsCount
        VB: Vec2CoordsCount
      nameWithType:
        CSharp: TextureCoordinates.Vec2CoordsCount
        VB: TextureCoordinates.Vec2CoordsCount
      qualifiedName:
        CSharp: PLATEAU.CityGML.TextureCoordinates.Vec2CoordsCount
        VB: PLATEAU.CityGML.TextureCoordinates.Vec2CoordsCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: Vec2CoordsCount
        path: ''
        startLine: 4735
      summary: "\n保持するテクスチャ座標の数です。\n<xref href=\"PLATEAU.CityGML.LinearRing\" data-throw-if-not-resolved=\"false\"></xref> の頂点とテクスチャ座標が1対1で対応するので、\nこの値は <xref href=\"PLATEAU.CityGML.LinearRing\" data-throw-if-not-resolved=\"false\"></xref> の頂点数と同じになります。\n"
      example: []
      syntax:
        content:
          CSharp: public int Vec2CoordsCount { get; }
          VB: Public ReadOnly Property Vec2CoordsCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: PLATEAU.CityGML.TextureCoordinates.Vec2CoordsCount*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        PLATEAU.CityGML.LinearRing: 
    - id: PLATEAU.CityGML.TextureCoordinates.GetVec2Coord(System.Int32)
      commentId: M:PLATEAU.CityGML.TextureCoordinates.GetVec2Coord(System.Int32)
      language: CSharp
      name:
        CSharp: GetVec2Coord(Int32)
        VB: GetVec2Coord(Int32)
      nameWithType:
        CSharp: TextureCoordinates.GetVec2Coord(Int32)
        VB: TextureCoordinates.GetVec2Coord(Int32)
      qualifiedName:
        CSharp: PLATEAU.CityGML.TextureCoordinates.GetVec2Coord(System.Int32)
        VB: PLATEAU.CityGML.TextureCoordinates.GetVec2Coord(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: GetVec2Coord
        path: ''
        startLine: 4749
      summary: "\n<xref href=\"PLATEAU.CityGML.LinearRing\" data-throw-if-not-resolved=\"false\"></xref> の <code data-dev-comment-type=\"paramref\" class=\"paramref\">index</code> 番目の頂点に対応する\nテクスチャ座標を返します。\n"
      example: []
      syntax:
        content:
          CSharp: public PlateauVector2f GetVec2Coord(int index)
          VB: Public Function GetVec2Coord(index As Integer) As PlateauVector2f
        parameters:
        - id: index
          type: System.Int32
        return:
          type: PLATEAU.CityGML.PlateauVector2f
      overload: PLATEAU.CityGML.TextureCoordinates.GetVec2Coord*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        PLATEAU.CityGML.LinearRing: 
    - id: PLATEAU.CityGML.TextureCoordinates.TargetLinearRingId
      commentId: P:PLATEAU.CityGML.TextureCoordinates.TargetLinearRingId
      language: CSharp
      name:
        CSharp: TargetLinearRingId
        VB: TargetLinearRingId
      nameWithType:
        CSharp: TextureCoordinates.TargetLinearRingId
        VB: TextureCoordinates.TargetLinearRingId
      qualifiedName:
        CSharp: PLATEAU.CityGML.TextureCoordinates.TargetLinearRingId
        VB: PLATEAU.CityGML.TextureCoordinates.TargetLinearRingId
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: TargetLinearRingId
        path: ''
        startLine: 4759
      summary: "\nこのテクスチャマッピングの対象となる <xref href=\"PLATEAU.CityGML.LinearRing\" data-throw-if-not-resolved=\"false\"></xref> のIDを返します。\n"
      example: []
      syntax:
        content:
          CSharp: public string TargetLinearRingId { get; }
          VB: Public ReadOnly Property TargetLinearRingId As String
        parameters: []
        return:
          type: System.String
      overload: PLATEAU.CityGML.TextureCoordinates.TargetLinearRingId*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        PLATEAU.CityGML.LinearRing: 
    - id: PLATEAU.CityGML.TextureCoordinates.IsRingTarget(PLATEAU.CityGML.LinearRing)
      commentId: M:PLATEAU.CityGML.TextureCoordinates.IsRingTarget(PLATEAU.CityGML.LinearRing)
      language: CSharp
      name:
        CSharp: IsRingTarget(LinearRing)
        VB: IsRingTarget(LinearRing)
      nameWithType:
        CSharp: TextureCoordinates.IsRingTarget(LinearRing)
        VB: TextureCoordinates.IsRingTarget(LinearRing)
      qualifiedName:
        CSharp: PLATEAU.CityGML.TextureCoordinates.IsRingTarget(PLATEAU.CityGML.LinearRing)
        VB: PLATEAU.CityGML.TextureCoordinates.IsRingTarget(PLATEAU.CityGML.LinearRing)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: IsRingTarget
        path: ''
        startLine: 4767
      summary: "\n引数で与えられた <xref href=\"PLATEAU.CityGML.LinearRing\" data-throw-if-not-resolved=\"false\"></xref> が\nこのテクスチャマッピングの対象かどうか判定します。\n"
      example: []
      syntax:
        content:
          CSharp: public bool IsRingTarget(LinearRing ring)
          VB: Public Function IsRingTarget(ring As LinearRing) As Boolean
        parameters:
        - id: ring
          type: PLATEAU.CityGML.LinearRing
        return:
          type: System.Boolean
      overload: PLATEAU.CityGML.TextureCoordinates.IsRingTarget*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        PLATEAU.CityGML.LinearRing: 
    references:
      PLATEAU.CityGML.LinearRing: 
  - id: PLATEAU.CityGML.TextureTargetDefinition
    commentId: T:PLATEAU.CityGML.TextureTargetDefinition
    language: CSharp
    name:
      CSharp: TextureTargetDefinition
      VB: TextureTargetDefinition
    nameWithType:
      CSharp: TextureTargetDefinition
      VB: TextureTargetDefinition
    qualifiedName:
      CSharp: PLATEAU.CityGML.TextureTargetDefinition
      VB: PLATEAU.CityGML.TextureTargetDefinition
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityGML
    source:
      id: TextureTargetDefinition
      path: ''
      startLine: 4787
    summary: "\nテクスチャとテクスチャマッピングを紐付けます。\n<xref href=\"PLATEAU.CityGML.AppearanceTargetDefinition%601.Appearance\" data-throw-if-not-resolved=\"false\"></xref> でテクスチャ情報を取得できます。\n<xref href=\"PLATEAU.CityGML.TextureTargetDefinition.GetCoordinate(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref>(i) で i番目のテクスチャマッピング (<xref href=\"PLATEAU.CityGML.TextureCoordinates\" data-throw-if-not-resolved=\"false\"></xref>) を取得できます。\n<xref href=\"PLATEAU.CityGML.AppearanceTarget\" data-throw-if-not-resolved=\"false\"></xref> によって保持されます。\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TextureTargetDefinition : AppearanceTargetDefinition<Texture>'
        VB: >-
          Public Class TextureTargetDefinition

              Inherits AppearanceTargetDefinition(Of Texture)
    inheritance:
    - System.Object
    - PLATEAU.CityGML.Object
    - PLATEAU.CityGML.AppearanceTargetDefinition{PLATEAU.CityGML.Texture}
    inheritedMembers:
    - PLATEAU.CityGML.AppearanceTargetDefinition{PLATEAU.CityGML.Texture}.Appearance
    - PLATEAU.CityGML.AppearanceTargetDefinition{PLATEAU.CityGML.Texture}.TargetID
    - PLATEAU.CityGML.Object.Handle
    - PLATEAU.CityGML.Object.ID
    - PLATEAU.CityGML.Object.AttributesMap
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PLATEAU.CityGML.TextureTargetDefinition.#ctor(IntPtr)
      commentId: M:PLATEAU.CityGML.TextureTargetDefinition.#ctor(IntPtr)
      language: CSharp
      name:
        CSharp: TextureTargetDefinition(IntPtr)
        VB: TextureTargetDefinition(IntPtr)
      nameWithType:
        CSharp: TextureTargetDefinition.TextureTargetDefinition(IntPtr)
        VB: TextureTargetDefinition.TextureTargetDefinition(IntPtr)
      qualifiedName:
        CSharp: PLATEAU.CityGML.TextureTargetDefinition.TextureTargetDefinition(IntPtr)
        VB: PLATEAU.CityGML.TextureTargetDefinition.TextureTargetDefinition(IntPtr)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: .ctor
        path: ''
        startLine: 4791
      syntax:
        content:
          CSharp: public TextureTargetDefinition(IntPtr handle)
          VB: Public Sub New(handle As IntPtr)
        parameters:
        - id: handle
          type: PLATEAU.IntPtr
      overload: PLATEAU.CityGML.TextureTargetDefinition.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityGML.TextureTargetDefinition.TexCoordinatesCount
      commentId: P:PLATEAU.CityGML.TextureTargetDefinition.TexCoordinatesCount
      language: CSharp
      name:
        CSharp: TexCoordinatesCount
        VB: TexCoordinatesCount
      nameWithType:
        CSharp: TextureTargetDefinition.TexCoordinatesCount
        VB: TextureTargetDefinition.TexCoordinatesCount
      qualifiedName:
        CSharp: PLATEAU.CityGML.TextureTargetDefinition.TexCoordinatesCount
        VB: PLATEAU.CityGML.TextureTargetDefinition.TexCoordinatesCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: TexCoordinatesCount
        path: ''
        startLine: 4798
      summary: "\n保持するテクスチャマッピングの数です。\n"
      example: []
      syntax:
        content:
          CSharp: public int TexCoordinatesCount { get; }
          VB: Public ReadOnly Property TexCoordinatesCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: PLATEAU.CityGML.TextureTargetDefinition.TexCoordinatesCount*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityGML.TextureTargetDefinition.GetCoordinate(System.Int32)
      commentId: M:PLATEAU.CityGML.TextureTargetDefinition.GetCoordinate(System.Int32)
      language: CSharp
      name:
        CSharp: GetCoordinate(Int32)
        VB: GetCoordinate(Int32)
      nameWithType:
        CSharp: TextureTargetDefinition.GetCoordinate(Int32)
        VB: TextureTargetDefinition.GetCoordinate(Int32)
      qualifiedName:
        CSharp: PLATEAU.CityGML.TextureTargetDefinition.GetCoordinate(System.Int32)
        VB: PLATEAU.CityGML.TextureTargetDefinition.GetCoordinate(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityGML
      source:
        id: GetCoordinate
        path: ''
        startLine: 4811
      summary: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">index</code> 番目のテクスチャマッピングを取得します。\n"
      example: []
      syntax:
        content:
          CSharp: public TextureCoordinates GetCoordinate(int index)
          VB: Public Function GetCoordinate(index As Integer) As TextureCoordinates
        parameters:
        - id: index
          type: System.Int32
        return:
          type: PLATEAU.CityGML.TextureCoordinates
      overload: PLATEAU.CityGML.TextureTargetDefinition.GetCoordinate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    references:
      PLATEAU.CityGML.AppearanceTargetDefinition`1.Appearance: 
      PLATEAU.CityGML.TextureTargetDefinition.GetCoordinate(System.Int32): 
      PLATEAU.CityGML.TextureCoordinates: 
      PLATEAU.CityGML.AppearanceTarget: 
- id: PLATEAU.IO
  commentId: N:PLATEAU.IO
  language: CSharp
  name:
    CSharp: PLATEAU.IO
    VB: PLATEAU.IO
  nameWithType:
    CSharp: PLATEAU.IO
    VB: PLATEAU.IO
  qualifiedName:
    CSharp: PLATEAU.IO
    VB: PLATEAU.IO
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: PLATEAU.IO.ObjWriter
    commentId: T:PLATEAU.IO.ObjWriter
    language: CSharp
    name:
      CSharp: ObjWriter
      VB: ObjWriter
    nameWithType:
      CSharp: ObjWriter
      VB: ObjWriter
    qualifiedName:
      CSharp: PLATEAU.IO.ObjWriter
      VB: PLATEAU.IO.ObjWriter
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.IO
    source:
      id: ObjWriter
      path: ''
      startLine: 5124
    summary: "\nThe <xref href=\"PLATEAU.IO.ObjWriter\" data-throw-if-not-resolved=\"false\"></xref> class exports .obj file from .gml.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ObjWriter : IDisposable'
        VB: >-
          Public Class ObjWriter

              Inherits IDisposable
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PLATEAU.IO.ObjWriter.ReferencePoint
      commentId: P:PLATEAU.IO.ObjWriter.ReferencePoint
      language: CSharp
      name:
        CSharp: ReferencePoint
        VB: ReferencePoint
      nameWithType:
        CSharp: ObjWriter.ReferencePoint
        VB: ObjWriter.ReferencePoint
      qualifiedName:
        CSharp: PLATEAU.IO.ObjWriter.ReferencePoint
        VB: PLATEAU.IO.ObjWriter.ReferencePoint
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.IO
      source:
        id: ReferencePoint
        path: ''
        startLine: 5132
      summary: "\n書き出されるメッシュの平面直角座標系での基準点を取得または設定します。\n"
      example: []
      syntax:
        content:
          CSharp: public PlateauVector3d ReferencePoint { get; set; }
          VB: Public Property ReferencePoint As PlateauVector3d
        parameters: []
        return:
          type: PLATEAU.PlateauVector3d
      overload: PLATEAU.IO.ObjWriter.ReferencePoint*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: PLATEAU.IO.ObjWriter.#ctor(DllLogLevel)
      commentId: M:PLATEAU.IO.ObjWriter.#ctor(DllLogLevel)
      language: CSharp
      name:
        CSharp: ObjWriter(DllLogLevel)
        VB: ObjWriter(DllLogLevel)
      nameWithType:
        CSharp: ObjWriter.ObjWriter(DllLogLevel)
        VB: ObjWriter.ObjWriter(DllLogLevel)
      qualifiedName:
        CSharp: PLATEAU.IO.ObjWriter.ObjWriter(DllLogLevel)
        VB: PLATEAU.IO.ObjWriter.ObjWriter(DllLogLevel)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.IO
      source:
        id: .ctor
        path: ''
        startLine: 5150
      summary: "\n<xref href=\"PLATEAU.IO.ObjWriter\" data-throw-if-not-resolved=\"false\"></xref>クラスのインスタンスを初期化します。\n"
      example: []
      syntax:
        content:
          CSharp: public ObjWriter(DllLogLevel logLevel = null)
          VB: Public Sub New(logLevel As DllLogLevel = Nothing)
        parameters:
        - id: logLevel
          type: PLATEAU.DllLogLevel
      overload: PLATEAU.IO.ObjWriter.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        PLATEAU.IO.ObjWriter: 
    - id: PLATEAU.IO.ObjWriter.Finalize
      commentId: M:PLATEAU.IO.ObjWriter.Finalize
      language: CSharp
      name:
        CSharp: Finalize()
        VB: Finalize()
      nameWithType:
        CSharp: ObjWriter.Finalize()
        VB: ObjWriter.Finalize()
      qualifiedName:
        CSharp: PLATEAU.IO.ObjWriter.Finalize()
        VB: PLATEAU.IO.ObjWriter.Finalize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.IO
      source:
        id: Finalize
        path: ''
        startLine: 5160
      syntax:
        content:
          CSharp: protected void Finalize()
          VB: Protected Sub Finalize
      overload: PLATEAU.IO.ObjWriter.Finalize*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: PLATEAU.IO.ObjWriter.Handle
      commentId: P:PLATEAU.IO.ObjWriter.Handle
      language: CSharp
      name:
        CSharp: Handle
        VB: Handle
      nameWithType:
        CSharp: ObjWriter.Handle
        VB: ObjWriter.Handle
      qualifiedName:
        CSharp: PLATEAU.IO.ObjWriter.Handle
        VB: PLATEAU.IO.ObjWriter.Handle
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.IO
      source:
        id: Handle
        path: ''
        startLine: 5168
      summary: "\nセーフハンドルを取得します。\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr Handle { get; }
          VB: Public ReadOnly Property Handle As IntPtr
        parameters: []
        return:
          type: PLATEAU.IntPtr
      overload: PLATEAU.IO.ObjWriter.Handle*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.IO.ObjWriter.Dispose
      commentId: M:PLATEAU.IO.ObjWriter.Dispose
      language: CSharp
      name:
        CSharp: Dispose()
        VB: Dispose()
      nameWithType:
        CSharp: ObjWriter.Dispose()
        VB: ObjWriter.Dispose()
      qualifiedName:
        CSharp: PLATEAU.IO.ObjWriter.Dispose()
        VB: PLATEAU.IO.ObjWriter.Dispose()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.IO
      source:
        id: Dispose
        path: ''
        startLine: 5170
      syntax:
        content:
          CSharp: public void Dispose()
          VB: Public Sub Dispose
      overload: PLATEAU.IO.ObjWriter.Dispose*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.IO.ObjWriter.Write(System.String,CityModel,System.String)
      commentId: M:PLATEAU.IO.ObjWriter.Write(System.String,CityModel,System.String)
      language: CSharp
      name:
        CSharp: Write(String, CityModel, String)
        VB: Write(String, CityModel, String)
      nameWithType:
        CSharp: ObjWriter.Write(String, CityModel, String)
        VB: ObjWriter.Write(String, CityModel, String)
      qualifiedName:
        CSharp: PLATEAU.IO.ObjWriter.Write(System.String, CityModel, System.String)
        VB: PLATEAU.IO.ObjWriter.Write(System.String, CityModel, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.IO
      source:
        id: Write
        path: ''
        startLine: 5186
      summary: "\n.gmlを.objに変換します。\n"
      example: []
      syntax:
        content:
          CSharp: public void Write(string objPath, CityModel cityModel, string gmlPath)
          VB: Public Sub Write(objPath As String, cityModel As CityModel, gmlPath As String)
        parameters:
        - id: objPath
          type: System.String
          description: ''
        - id: cityModel
          type: PLATEAU.CityModel
          description: ''
        - id: gmlPath
          type: System.String
          description: ''
      overload: PLATEAU.IO.ObjWriter.Write*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.IO.ObjWriter.GetDllLogger
      commentId: M:PLATEAU.IO.ObjWriter.GetDllLogger
      language: CSharp
      name:
        CSharp: GetDllLogger()
        VB: GetDllLogger()
      nameWithType:
        CSharp: ObjWriter.GetDllLogger()
        VB: ObjWriter.GetDllLogger()
      qualifiedName:
        CSharp: PLATEAU.IO.ObjWriter.GetDllLogger()
        VB: PLATEAU.IO.ObjWriter.GetDllLogger()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.IO
      source:
        id: GetDllLogger
        path: ''
        startLine: 5196
      summary: "\n変換時のDLLのログ出力の細かさを変更するには、\n変換前にこのメソッドで <see cref=\"!:DllLogger\"></see> を取得して設定を変更します。\n"
      example: []
      syntax:
        content:
          CSharp: public DllLogger GetDllLogger()
          VB: Public Function GetDllLogger As DllLogger
        return:
          type: PLATEAU.DllLogger
      overload: PLATEAU.IO.ObjWriter.GetDllLogger*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.IO.ObjWriter.SetMeshGranularity(MeshGranularity)
      commentId: M:PLATEAU.IO.ObjWriter.SetMeshGranularity(MeshGranularity)
      language: CSharp
      name:
        CSharp: SetMeshGranularity(MeshGranularity)
        VB: SetMeshGranularity(MeshGranularity)
      nameWithType:
        CSharp: ObjWriter.SetMeshGranularity(MeshGranularity)
        VB: ObjWriter.SetMeshGranularity(MeshGranularity)
      qualifiedName:
        CSharp: PLATEAU.IO.ObjWriter.SetMeshGranularity(MeshGranularity)
        VB: PLATEAU.IO.ObjWriter.SetMeshGranularity(MeshGranularity)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.IO
      source:
        id: SetMeshGranularity
        path: ''
        startLine: 5209
      summary: "\nMeshGranularity（objの結合単位）を設定します。\n"
      example: []
      syntax:
        content:
          CSharp: public void SetMeshGranularity(MeshGranularity value)
          VB: Public Sub SetMeshGranularity(value As MeshGranularity)
        parameters:
        - id: value
          type: PLATEAU.MeshGranularity
      overload: PLATEAU.IO.ObjWriter.SetMeshGranularity*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.IO.ObjWriter.GetMeshGranularity
      commentId: M:PLATEAU.IO.ObjWriter.GetMeshGranularity
      language: CSharp
      name:
        CSharp: GetMeshGranularity()
        VB: GetMeshGranularity()
      nameWithType:
        CSharp: ObjWriter.GetMeshGranularity()
        VB: ObjWriter.GetMeshGranularity()
      qualifiedName:
        CSharp: PLATEAU.IO.ObjWriter.GetMeshGranularity()
        VB: PLATEAU.IO.ObjWriter.GetMeshGranularity()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.IO
      source:
        id: GetMeshGranularity
        path: ''
        startLine: 5218
      summary: "\n現在のMeshGranularity（objの結合単位）を返します。\n"
      example: []
      syntax:
        content:
          CSharp: public MeshGranularity GetMeshGranularity()
          VB: Public Function GetMeshGranularity As MeshGranularity
        return:
          type: PLATEAU.MeshGranularity
      overload: PLATEAU.IO.ObjWriter.GetMeshGranularity*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.IO.ObjWriter.SetDestAxes(AxesConversion)
      commentId: M:PLATEAU.IO.ObjWriter.SetDestAxes(AxesConversion)
      language: CSharp
      name:
        CSharp: SetDestAxes(AxesConversion)
        VB: SetDestAxes(AxesConversion)
      nameWithType:
        CSharp: ObjWriter.SetDestAxes(AxesConversion)
        VB: ObjWriter.SetDestAxes(AxesConversion)
      qualifiedName:
        CSharp: PLATEAU.IO.ObjWriter.SetDestAxes(AxesConversion)
        VB: PLATEAU.IO.ObjWriter.SetDestAxes(AxesConversion)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.IO
      source:
        id: SetDestAxes
        path: ''
        startLine: 5228
      summary: "\n座標軸を設定します。\n"
      example: []
      syntax:
        content:
          CSharp: public void SetDestAxes(AxesConversion value)
          VB: Public Sub SetDestAxes(value As AxesConversion)
        parameters:
        - id: value
          type: PLATEAU.AxesConversion
      overload: PLATEAU.IO.ObjWriter.SetDestAxes*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.IO.ObjWriter.GetDestAxes
      commentId: M:PLATEAU.IO.ObjWriter.GetDestAxes
      language: CSharp
      name:
        CSharp: GetDestAxes()
        VB: GetDestAxes()
      nameWithType:
        CSharp: ObjWriter.GetDestAxes()
        VB: ObjWriter.GetDestAxes()
      qualifiedName:
        CSharp: PLATEAU.IO.ObjWriter.GetDestAxes()
        VB: PLATEAU.IO.ObjWriter.GetDestAxes()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.IO
      source:
        id: GetDestAxes
        path: ''
        startLine: 5237
      summary: "\n現在の座標軸設定を返します。\n"
      example: []
      syntax:
        content:
          CSharp: public AxesConversion GetDestAxes()
          VB: Public Function GetDestAxes As AxesConversion
        return:
          type: PLATEAU.AxesConversion
      overload: PLATEAU.IO.ObjWriter.GetDestAxes*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.IO.ObjWriter.SetValidReferencePoint(CityModel)
      commentId: M:PLATEAU.IO.ObjWriter.SetValidReferencePoint(CityModel)
      language: CSharp
      name:
        CSharp: SetValidReferencePoint(CityModel)
        VB: SetValidReferencePoint(CityModel)
      nameWithType:
        CSharp: ObjWriter.SetValidReferencePoint(CityModel)
        VB: ObjWriter.SetValidReferencePoint(CityModel)
      qualifiedName:
        CSharp: PLATEAU.IO.ObjWriter.SetValidReferencePoint(CityModel)
        VB: PLATEAU.IO.ObjWriter.SetValidReferencePoint(CityModel)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.IO
      source:
        id: SetValidReferencePoint
        path: ''
        startLine: 5248
      summary: "\n<xref href=\"PLATEAU.IO.ObjWriter.ReferencePoint\" data-throw-if-not-resolved=\"false\"></xref>を<code data-dev-comment-type=\"paramref\" class=\"paramref\">cityModel</code>の Envelope の中心に設定します。\n"
      example: []
      syntax:
        content:
          CSharp: public void SetValidReferencePoint(CityModel cityModel)
          VB: Public Sub SetValidReferencePoint(cityModel As CityModel)
        parameters:
        - id: cityModel
          type: PLATEAU.CityModel
          description: ''
      overload: PLATEAU.IO.ObjWriter.SetValidReferencePoint*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        PLATEAU.IO.ObjWriter.ReferencePoint: 
    references:
      PLATEAU.IO.ObjWriter: 
- id: PLATEAU.Behaviour
  commentId: N:PLATEAU.Behaviour
  language: CSharp
  name:
    CSharp: PLATEAU.Behaviour
    VB: PLATEAU.Behaviour
  nameWithType:
    CSharp: PLATEAU.Behaviour
    VB: PLATEAU.Behaviour
  qualifiedName:
    CSharp: PLATEAU.Behaviour
    VB: PLATEAU.Behaviour
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: PLATEAU.Behaviour.CityBehaviour
    commentId: T:PLATEAU.Behaviour.CityBehaviour
    language: CSharp
    name:
      CSharp: CityBehaviour
      VB: CityBehaviour
    nameWithType:
      CSharp: CityBehaviour
      VB: CityBehaviour
    qualifiedName:
      CSharp: PLATEAU.Behaviour.CityBehaviour
      VB: PLATEAU.Behaviour.CityBehaviour
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.Behaviour
    source:
      id: CityBehaviour
      path: ''
      startLine: 5276
    summary: "\nゲームオブジェクトの名称からPlateauの <see cref=\"!:CityObject\"></see> を返す MonoBehaviour です。\n実行には <xref href=\"PLATEAU.Behaviour.CityBehaviour.CityMetaData\" data-throw-if-not-resolved=\"false\"></xref> を保持する必要があります。\n"
    example: []
    syntax:
      content:
        CSharp: 'public class CityBehaviour : MonoBehaviour'
        VB: >-
          Public Class CityBehaviour

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PLATEAU.Behaviour.CityBehaviour.CityMetaData
      commentId: P:PLATEAU.Behaviour.CityBehaviour.CityMetaData
      language: CSharp
      name:
        CSharp: CityMetaData
        VB: CityMetaData
      nameWithType:
        CSharp: CityBehaviour.CityMetaData
        VB: CityBehaviour.CityMetaData
      qualifiedName:
        CSharp: PLATEAU.Behaviour.CityBehaviour.CityMetaData
        VB: PLATEAU.Behaviour.CityBehaviour.CityMetaData
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.Behaviour
      source:
        id: CityMetaData
        path: ''
        startLine: 5281
      syntax:
        content:
          CSharp: public CityMetaData CityMetaData { get; set; }
          VB: Public Property CityMetaData As CityMetaData
        parameters: []
        return:
          type: PLATEAU.CityMetaData
      overload: PLATEAU.Behaviour.CityBehaviour.CityMetaData*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: PLATEAU.Behaviour.CityBehaviour.LoadSemantics(System.String)
      commentId: M:PLATEAU.Behaviour.CityBehaviour.LoadSemantics(System.String)
      language: CSharp
      name:
        CSharp: LoadSemantics(String)
        VB: LoadSemantics(String)
      nameWithType:
        CSharp: CityBehaviour.LoadSemantics(String)
        VB: CityBehaviour.LoadSemantics(String)
      qualifiedName:
        CSharp: PLATEAU.Behaviour.CityBehaviour.LoadSemantics(System.String)
        VB: PLATEAU.Behaviour.CityBehaviour.LoadSemantics(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.Behaviour
      source:
        id: LoadSemantics
        path: ''
        startLine: 5292
      summary: "\nゲームオブジェクト名 → <see cref=\"!:CityObject\"></see>\n"
      example: []
      syntax:
        content:
          CSharp: public CityObject LoadSemantics(string gameObjName)
          VB: Public Function LoadSemantics(gameObjName As String) As CityObject
        parameters:
        - id: gameObjName
          type: System.String
          description: ゲームオブジェクト名
        return:
          type: PLATEAU.CityObject
          description: 引数に対応する<see cref="!:CityObject"></see>
      overload: PLATEAU.Behaviour.CityBehaviour.LoadSemantics*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    references:
      PLATEAU.Behaviour.CityBehaviour.CityMetaData: 
- id: PLATEAU.CityMeta
  commentId: N:PLATEAU.CityMeta
  language: CSharp
  name:
    CSharp: PLATEAU.CityMeta
    VB: PLATEAU.CityMeta
  nameWithType:
    CSharp: PLATEAU.CityMeta
    VB: PLATEAU.CityMeta
  qualifiedName:
    CSharp: PLATEAU.CityMeta
    VB: PLATEAU.CityMeta
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: PLATEAU.CityMeta.CityImporterConfig
    commentId: T:PLATEAU.CityMeta.CityImporterConfig
    language: CSharp
    name:
      CSharp: CityImporterConfig
      VB: CityImporterConfig
    nameWithType:
      CSharp: CityImporterConfig
      VB: CityImporterConfig
    qualifiedName:
      CSharp: PLATEAU.CityMeta.CityImporterConfig
      VB: PLATEAU.CityMeta.CityImporterConfig
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityMeta
    source:
      id: CityImporterConfig
      path: ''
      startLine: 5320
    summary: "\nPlateau元データをインポートする時の設定です。\n"
    example: []
    syntax:
      content:
        CSharp: public class CityImporterConfig
        VB: Public Class CityImporterConfig
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PLATEAU.CityMeta.CityImporterConfig.gmlSearcherConfig
      commentId: F:PLATEAU.CityMeta.CityImporterConfig.gmlSearcherConfig
      language: CSharp
      name:
        CSharp: gmlSearcherConfig
        VB: gmlSearcherConfig
      nameWithType:
        CSharp: CityImporterConfig.gmlSearcherConfig
        VB: CityImporterConfig.gmlSearcherConfig
      qualifiedName:
        CSharp: PLATEAU.CityMeta.CityImporterConfig.gmlSearcherConfig
        VB: PLATEAU.CityMeta.CityImporterConfig.gmlSearcherConfig
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: gmlSearcherConfig
        path: ''
        startLine: 5324
      summary: 'インポート時の対象gmlファイルの絞り込みの設定 '
      example: []
      syntax:
        content:
          CSharp: public GmlSearcherConfig gmlSearcherConfig
          VB: Public gmlSearcherConfig As GmlSearcherConfig
        return:
          type: PLATEAU.CityMeta.GmlSearcherConfig
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityMeta.CityImporterConfig.sourceUdxFolderPath
      commentId: F:PLATEAU.CityMeta.CityImporterConfig.sourceUdxFolderPath
      language: CSharp
      name:
        CSharp: sourceUdxFolderPath
        VB: sourceUdxFolderPath
      nameWithType:
        CSharp: CityImporterConfig.sourceUdxFolderPath
        VB: CityImporterConfig.sourceUdxFolderPath
      qualifiedName:
        CSharp: PLATEAU.CityMeta.CityImporterConfig.sourceUdxFolderPath
        VB: PLATEAU.CityMeta.CityImporterConfig.sourceUdxFolderPath
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: sourceUdxFolderPath
        path: ''
        startLine: 5327
      summary: 'インポート元ファイルのパスです。通常 StreamingAssets内を指します。 '
      example: []
      syntax:
        content:
          CSharp: public string sourceUdxFolderPath
          VB: Public sourceUdxFolderPath As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityMeta.CityImporterConfig.exportFolderPath
      commentId: F:PLATEAU.CityMeta.CityImporterConfig.exportFolderPath
      language: CSharp
      name:
        CSharp: exportFolderPath
        VB: exportFolderPath
      nameWithType:
        CSharp: CityImporterConfig.exportFolderPath
        VB: CityImporterConfig.exportFolderPath
      qualifiedName:
        CSharp: PLATEAU.CityMeta.CityImporterConfig.exportFolderPath
        VB: PLATEAU.CityMeta.CityImporterConfig.exportFolderPath
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: exportFolderPath
        path: ''
        startLine: 5330
      summary: 'インポートの出力先 '
      example: []
      syntax:
        content:
          CSharp: public string exportFolderPath
          VB: Public exportFolderPath As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityMeta.CityImporterConfig.optimizeFlag
      commentId: F:PLATEAU.CityMeta.CityImporterConfig.optimizeFlag
      language: CSharp
      name:
        CSharp: optimizeFlag
        VB: optimizeFlag
      nameWithType:
        CSharp: CityImporterConfig.optimizeFlag
        VB: CityImporterConfig.optimizeFlag
      qualifiedName:
        CSharp: PLATEAU.CityMeta.CityImporterConfig.optimizeFlag
        VB: PLATEAU.CityMeta.CityImporterConfig.optimizeFlag
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: optimizeFlag
        path: ''
        startLine: 5333
      summary: 'インポート時に最適化するかどうか '
      example: []
      syntax:
        content:
          CSharp: public bool optimizeFlag
          VB: Public optimizeFlag As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityMeta.CityImporterConfig.meshGranularity
      commentId: F:PLATEAU.CityMeta.CityImporterConfig.meshGranularity
      language: CSharp
      name:
        CSharp: meshGranularity
        VB: meshGranularity
      nameWithType:
        CSharp: CityImporterConfig.meshGranularity
        VB: CityImporterConfig.meshGranularity
      qualifiedName:
        CSharp: PLATEAU.CityMeta.CityImporterConfig.meshGranularity
        VB: PLATEAU.CityMeta.CityImporterConfig.meshGranularity
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: meshGranularity
        path: ''
        startLine: 5336
      summary: 'オブジェクト分けの粒度 '
      example: []
      syntax:
        content:
          CSharp: public MeshGranularity meshGranularity
          VB: Public meshGranularity As MeshGranularity
        return:
          type: PLATEAU.MeshGranularity
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityMeta.CityImporterConfig.referencePoint
      commentId: F:PLATEAU.CityMeta.CityImporterConfig.referencePoint
      language: CSharp
      name:
        CSharp: referencePoint
        VB: referencePoint
      nameWithType:
        CSharp: CityImporterConfig.referencePoint
        VB: CityImporterConfig.referencePoint
      qualifiedName:
        CSharp: PLATEAU.CityMeta.CityImporterConfig.referencePoint
        VB: PLATEAU.CityMeta.CityImporterConfig.referencePoint
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: referencePoint
        path: ''
        startLine: 5339
      summary: 'メッシュ変換の基準座標 '
      example: []
      syntax:
        content:
          CSharp: public Vector3 referencePoint
          VB: Public referencePoint As Vector3
        return:
          type: PLATEAU.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityMeta.CityImporterConfig.logLevel
      commentId: F:PLATEAU.CityMeta.CityImporterConfig.logLevel
      language: CSharp
      name:
        CSharp: logLevel
        VB: logLevel
      nameWithType:
        CSharp: CityImporterConfig.logLevel
        VB: CityImporterConfig.logLevel
      qualifiedName:
        CSharp: PLATEAU.CityMeta.CityImporterConfig.logLevel
        VB: PLATEAU.CityMeta.CityImporterConfig.logLevel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: logLevel
        path: ''
        startLine: 5342
      summary: 'インポート時のログレベル '
      example: []
      syntax:
        content:
          CSharp: public DllLogLevel logLevel
          VB: Public logLevel As DllLogLevel
        return:
          type: PLATEAU.DllLogLevel
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: PLATEAU.CityMeta.CityMetaData
    commentId: T:PLATEAU.CityMeta.CityMetaData
    language: CSharp
    name:
      CSharp: CityMetaData
      VB: CityMetaData
    nameWithType:
      CSharp: CityMetaData
      VB: CityMetaData
    qualifiedName:
      CSharp: PLATEAU.CityMeta.CityMetaData
      VB: PLATEAU.CityMeta.CityMetaData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityMeta
    source:
      id: CityMetaData
      path: ''
      startLine: 5357
    summary: "\nPlateau元データのインポート時に ScriptableObject として保存されるメタデータです。<br />\n・PlateauオブジェクトのIDから、対応する gml ファイルを検索する辞書である <xref href=\"PLATEAU.CityMeta.CityMetaData.idToGmlTable\" data-throw-if-not-resolved=\"false\"></xref> を保持します。\nこの情報の用途は、Unityシーン内のオブジェクトから対応する gml をロードして Plateau の情報を取得する処理の起点となります。<br />\n・インポート時の設定を保持します。\nこれにより、この ScriptableObject をプロジェクトビューから選択したときに「再変換」画面を出すことができます。\n\n"
    example: []
    syntax:
      content:
        CSharp: 'public class CityMetaData : ScriptableObject'
        VB: >-
          Public Class CityMetaData

              Inherits ScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PLATEAU.CityMeta.CityMetaData.idToGmlTable
      commentId: F:PLATEAU.CityMeta.CityMetaData.idToGmlTable
      language: CSharp
      name:
        CSharp: idToGmlTable
        VB: idToGmlTable
      nameWithType:
        CSharp: CityMetaData.idToGmlTable
        VB: CityMetaData.idToGmlTable
      qualifiedName:
        CSharp: PLATEAU.CityMeta.CityMetaData.idToGmlTable
        VB: PLATEAU.CityMeta.CityMetaData.idToGmlTable
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: idToGmlTable
        path: ''
        startLine: 5359
      syntax:
        content:
          CSharp: public IdToGmlTable idToGmlTable
          VB: Public idToGmlTable As IdToGmlTable
        return:
          type: PLATEAU.CityMeta.IdToGmlTable
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityMeta.CityMetaData.cityImporterConfig
      commentId: F:PLATEAU.CityMeta.CityMetaData.cityImporterConfig
      language: CSharp
      name:
        CSharp: cityImporterConfig
        VB: cityImporterConfig
      nameWithType:
        CSharp: CityMetaData.cityImporterConfig
        VB: CityMetaData.cityImporterConfig
      qualifiedName:
        CSharp: PLATEAU.CityMeta.CityMetaData.cityImporterConfig
        VB: PLATEAU.CityMeta.CityMetaData.cityImporterConfig
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: cityImporterConfig
        path: ''
        startLine: 5360
      syntax:
        content:
          CSharp: public CityImporterConfig cityImporterConfig
          VB: Public cityImporterConfig As CityImporterConfig
        return:
          type: PLATEAU.CityMeta.CityImporterConfig
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityMeta.CityMetaData.DoGmlTableContainsKey(System.String)
      commentId: M:PLATEAU.CityMeta.CityMetaData.DoGmlTableContainsKey(System.String)
      language: CSharp
      name:
        CSharp: DoGmlTableContainsKey(String)
        VB: DoGmlTableContainsKey(String)
      nameWithType:
        CSharp: CityMetaData.DoGmlTableContainsKey(String)
        VB: CityMetaData.DoGmlTableContainsKey(String)
      qualifiedName:
        CSharp: PLATEAU.CityMeta.CityMetaData.DoGmlTableContainsKey(System.String)
        VB: PLATEAU.CityMeta.CityMetaData.DoGmlTableContainsKey(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: DoGmlTableContainsKey
        path: ''
        startLine: 5362
      syntax:
        content:
          CSharp: public bool DoGmlTableContainsKey(string cityObjId)
          VB: Public Function DoGmlTableContainsKey(cityObjId As String) As Boolean
        parameters:
        - id: cityObjId
          type: System.String
        return:
          type: System.Boolean
      overload: PLATEAU.CityMeta.CityMetaData.DoGmlTableContainsKey*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityMeta.CityMetaData.AddToGmlTable(System.String,System.String)
      commentId: M:PLATEAU.CityMeta.CityMetaData.AddToGmlTable(System.String,System.String)
      language: CSharp
      name:
        CSharp: AddToGmlTable(String, String)
        VB: AddToGmlTable(String, String)
      nameWithType:
        CSharp: CityMetaData.AddToGmlTable(String, String)
        VB: CityMetaData.AddToGmlTable(String, String)
      qualifiedName:
        CSharp: PLATEAU.CityMeta.CityMetaData.AddToGmlTable(System.String, System.String)
        VB: PLATEAU.CityMeta.CityMetaData.AddToGmlTable(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: AddToGmlTable
        path: ''
        startLine: 5367
      syntax:
        content:
          CSharp: public void AddToGmlTable(string cityObjId, string gmlName)
          VB: Public Sub AddToGmlTable(cityObjId As String, gmlName As String)
        parameters:
        - id: cityObjId
          type: System.String
        - id: gmlName
          type: System.String
      overload: PLATEAU.CityMeta.CityMetaData.AddToGmlTable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityMeta.CityMetaData.TryGetValueFromGmlTable(System.String,System.String@)
      commentId: M:PLATEAU.CityMeta.CityMetaData.TryGetValueFromGmlTable(System.String,System.String@)
      language: CSharp
      name:
        CSharp: TryGetValueFromGmlTable(String, out String)
        VB: TryGetValueFromGmlTable(String, ByRef String)
      nameWithType:
        CSharp: CityMetaData.TryGetValueFromGmlTable(String, out String)
        VB: CityMetaData.TryGetValueFromGmlTable(String, ByRef String)
      qualifiedName:
        CSharp: PLATEAU.CityMeta.CityMetaData.TryGetValueFromGmlTable(System.String, out System.String)
        VB: PLATEAU.CityMeta.CityMetaData.TryGetValueFromGmlTable(System.String, ByRef System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: TryGetValueFromGmlTable
        path: ''
        startLine: 5372
      syntax:
        content:
          CSharp: public bool TryGetValueFromGmlTable(string cityObjId, out string gmlFileName)
          VB: Public Function TryGetValueFromGmlTable(cityObjId As String, ByRef gmlFileName As String) As Boolean
        parameters:
        - id: cityObjId
          type: System.String
        - id: gmlFileName
          type: System.String
        return:
          type: System.Boolean
      overload: PLATEAU.CityMeta.CityMetaData.TryGetValueFromGmlTable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityMeta.CityMetaData.DoClearIdToGmlTable
      commentId: M:PLATEAU.CityMeta.CityMetaData.DoClearIdToGmlTable
      language: CSharp
      name:
        CSharp: DoClearIdToGmlTable()
        VB: DoClearIdToGmlTable()
      nameWithType:
        CSharp: CityMetaData.DoClearIdToGmlTable()
        VB: CityMetaData.DoClearIdToGmlTable()
      qualifiedName:
        CSharp: PLATEAU.CityMeta.CityMetaData.DoClearIdToGmlTable()
        VB: PLATEAU.CityMeta.CityMetaData.DoClearIdToGmlTable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: DoClearIdToGmlTable
        path: ''
        startLine: 5377
      syntax:
        content:
          CSharp: public void DoClearIdToGmlTable()
          VB: Public Sub DoClearIdToGmlTable
      overload: PLATEAU.CityMeta.CityMetaData.DoClearIdToGmlTable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    references:
      PLATEAU.CityMeta.CityMetaData.idToGmlTable: 
  - id: PLATEAU.CityMeta.GmlSearcherConfig
    commentId: T:PLATEAU.CityMeta.GmlSearcherConfig
    language: CSharp
    name:
      CSharp: GmlSearcherConfig
      VB: GmlSearcherConfig
    nameWithType:
      CSharp: GmlSearcherConfig
      VB: GmlSearcherConfig
    qualifiedName:
      CSharp: PLATEAU.CityMeta.GmlSearcherConfig
      VB: PLATEAU.CityMeta.GmlSearcherConfig
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityMeta
    source:
      id: GmlSearcherConfig
      path: ''
      startLine: 5396
    summary: "\nGmlSearcher の設定です。\n対象gmlファイル選択において、地域IDと地物タイプの絞り込み設定を保持します。\n"
    example: []
    syntax:
      content:
        CSharp: public class GmlSearcherConfig
        VB: Public Class GmlSearcherConfig
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PLATEAU.CityMeta.GmlSearcherConfig.areaIds
      commentId: F:PLATEAU.CityMeta.GmlSearcherConfig.areaIds
      language: CSharp
      name:
        CSharp: areaIds
        VB: areaIds
      nameWithType:
        CSharp: GmlSearcherConfig.areaIds
        VB: GmlSearcherConfig.areaIds
      qualifiedName:
        CSharp: PLATEAU.CityMeta.GmlSearcherConfig.areaIds
        VB: PLATEAU.CityMeta.GmlSearcherConfig.areaIds
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: areaIds
        path: ''
        startLine: 5400
      summary: '見つかったエリアIDの一覧です。 '
      example: []
      syntax:
        content:
          CSharp: public int[] areaIds
          VB: Public areaIds As Integer()
        return:
          type: System.Int32[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityMeta.GmlSearcherConfig.isAreaIdTarget
      commentId: F:PLATEAU.CityMeta.GmlSearcherConfig.isAreaIdTarget
      language: CSharp
      name:
        CSharp: isAreaIdTarget
        VB: isAreaIdTarget
      nameWithType:
        CSharp: GmlSearcherConfig.isAreaIdTarget
        VB: GmlSearcherConfig.isAreaIdTarget
      qualifiedName:
        CSharp: PLATEAU.CityMeta.GmlSearcherConfig.isAreaIdTarget
        VB: PLATEAU.CityMeta.GmlSearcherConfig.isAreaIdTarget
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: isAreaIdTarget
        path: ''
        startLine: 5403
      summary: '<xref href="PLATEAU.CityMeta.GmlSearcherConfig.areaIds" data-throw-if-not-resolved="false"></xref> の i番目を変換対象とするかどうかです。 '
      example: []
      syntax:
        content:
          CSharp: public bool[] isAreaIdTarget
          VB: Public isAreaIdTarget As Boolean()
        return:
          type: System.Boolean[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        PLATEAU.CityMeta.GmlSearcherConfig.areaIds: 
    - id: PLATEAU.CityMeta.GmlSearcherConfig.gmlTypeTarget
      commentId: F:PLATEAU.CityMeta.GmlSearcherConfig.gmlTypeTarget
      language: CSharp
      name:
        CSharp: gmlTypeTarget
        VB: gmlTypeTarget
      nameWithType:
        CSharp: GmlSearcherConfig.gmlTypeTarget
        VB: GmlSearcherConfig.gmlTypeTarget
      qualifiedName:
        CSharp: PLATEAU.CityMeta.GmlSearcherConfig.gmlTypeTarget
        VB: PLATEAU.CityMeta.GmlSearcherConfig.gmlTypeTarget
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: gmlTypeTarget
        path: ''
        startLine: 5406
      summary: '地物タイプの絞り込み情報です。 '
      example: []
      syntax:
        content:
          CSharp: public GmlTypeTarget gmlTypeTarget
          VB: Public gmlTypeTarget As GmlTypeTarget
        return:
          type: PLATEAU.CityMeta.GmlTypeTarget
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: PLATEAU.CityMeta.GmlType
    commentId: T:PLATEAU.CityMeta.GmlType
    language: CSharp
    name:
      CSharp: GmlType
      VB: GmlType
    nameWithType:
      CSharp: GmlType
      VB: GmlType
    qualifiedName:
      CSharp: PLATEAU.CityMeta.GmlType
      VB: PLATEAU.CityMeta.GmlType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityMeta
    source:
      id: GmlType
      path: ''
      startLine: 5433
    summary: "\n地物タイプです。\ngml元データのファイル構造における udx/(地物タイプ) の(地物タイプ)に対応します。\n"
    example: []
    syntax:
      content:
        CSharp: public enum GmlType
        VB: Public Enum GmlType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: PLATEAU.CityMeta.GmlType.Building
      commentId: F:PLATEAU.CityMeta.GmlType.Building
      language: CSharp
      name:
        CSharp: Building
        VB: Building
      nameWithType:
        CSharp: GmlType.Building
        VB: GmlType.Building
      qualifiedName:
        CSharp: PLATEAU.CityMeta.GmlType.Building
        VB: PLATEAU.CityMeta.GmlType.Building
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: Building
        path: ''
        startLine: 5436
      summary: '建築物 '
      example: []
      syntax:
        content:
          CSharp: Building = 0
          VB: Building = 0
        return:
          type: PLATEAU.CityMeta.GmlType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityMeta.GmlType.Transport
      commentId: F:PLATEAU.CityMeta.GmlType.Transport
      language: CSharp
      name:
        CSharp: Transport
        VB: Transport
      nameWithType:
        CSharp: GmlType.Transport
        VB: GmlType.Transport
      qualifiedName:
        CSharp: PLATEAU.CityMeta.GmlType.Transport
        VB: PLATEAU.CityMeta.GmlType.Transport
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: Transport
        path: ''
        startLine: 5438
      summary: '道路 '
      example: []
      syntax:
        content:
          CSharp: Transport = 1
          VB: Transport = 1
        return:
          type: PLATEAU.CityMeta.GmlType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityMeta.GmlType.Vegetation
      commentId: F:PLATEAU.CityMeta.GmlType.Vegetation
      language: CSharp
      name:
        CSharp: Vegetation
        VB: Vegetation
      nameWithType:
        CSharp: GmlType.Vegetation
        VB: GmlType.Vegetation
      qualifiedName:
        CSharp: PLATEAU.CityMeta.GmlType.Vegetation
        VB: PLATEAU.CityMeta.GmlType.Vegetation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: Vegetation
        path: ''
        startLine: 5440
      summary: '植生 '
      example: []
      syntax:
        content:
          CSharp: Vegetation = 2
          VB: Vegetation = 2
        return:
          type: PLATEAU.CityMeta.GmlType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityMeta.GmlType.CityFurniture
      commentId: F:PLATEAU.CityMeta.GmlType.CityFurniture
      language: CSharp
      name:
        CSharp: CityFurniture
        VB: CityFurniture
      nameWithType:
        CSharp: GmlType.CityFurniture
        VB: GmlType.CityFurniture
      qualifiedName:
        CSharp: PLATEAU.CityMeta.GmlType.CityFurniture
        VB: PLATEAU.CityMeta.GmlType.CityFurniture
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: CityFurniture
        path: ''
        startLine: 5442
      summary: '都市設備 '
      example: []
      syntax:
        content:
          CSharp: CityFurniture = 3
          VB: CityFurniture = 3
        return:
          type: PLATEAU.CityMeta.GmlType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityMeta.GmlType.DigitalElevationModel
      commentId: F:PLATEAU.CityMeta.GmlType.DigitalElevationModel
      language: CSharp
      name:
        CSharp: DigitalElevationModel
        VB: DigitalElevationModel
      nameWithType:
        CSharp: GmlType.DigitalElevationModel
        VB: GmlType.DigitalElevationModel
      qualifiedName:
        CSharp: PLATEAU.CityMeta.GmlType.DigitalElevationModel
        VB: PLATEAU.CityMeta.GmlType.DigitalElevationModel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: DigitalElevationModel
        path: ''
        startLine: 5444
      summary: '起伏（地形情報） '
      example: []
      syntax:
        content:
          CSharp: DigitalElevationModel = 4
          VB: DigitalElevationModel = 4
        return:
          type: PLATEAU.CityMeta.GmlType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PLATEAU.CityMeta.GmlType.Etc
      commentId: F:PLATEAU.CityMeta.GmlType.Etc
      language: CSharp
      name:
        CSharp: Etc
        VB: Etc
      nameWithType:
        CSharp: GmlType.Etc
        VB: GmlType.Etc
      qualifiedName:
        CSharp: PLATEAU.CityMeta.GmlType.Etc
        VB: PLATEAU.CityMeta.GmlType.Etc
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: Etc
        path: ''
        startLine: 5446
      summary: 'その他 '
      example: []
      syntax:
        content:
          CSharp: Etc = 5
          VB: Etc = 5
        return:
          type: PLATEAU.CityMeta.GmlType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: PLATEAU.CityMeta.GmlTypeConvert
    commentId: T:PLATEAU.CityMeta.GmlTypeConvert
    language: CSharp
    name:
      CSharp: GmlTypeConvert
      VB: GmlTypeConvert
    nameWithType:
      CSharp: GmlTypeConvert
      VB: GmlTypeConvert
    qualifiedName:
      CSharp: PLATEAU.CityMeta.GmlTypeConvert
      VB: PLATEAU.CityMeta.GmlTypeConvert
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityMeta
    source:
      id: GmlTypeConvert
      path: ''
      startLine: 5452
    summary: "\n<xref href=\"PLATEAU.CityMeta.GmlType\" data-throw-if-not-resolved=\"false\"></xref> の Enum 型、 接頭辞（フォルダ名）、ディスプレイ文字列　を変換します。\n"
    example: []
    syntax:
      content:
        CSharp: public static class GmlTypeConvert
        VB: Public Module GmlTypeConvert
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: PLATEAU.CityMeta.GmlTypeConvert.ToPrefix(PLATEAU.CityMeta.GmlType)
      commentId: M:PLATEAU.CityMeta.GmlTypeConvert.ToPrefix(PLATEAU.CityMeta.GmlType)
      language: CSharp
      name:
        CSharp: ToPrefix(GmlType)
        VB: ToPrefix(GmlType)
      nameWithType:
        CSharp: GmlTypeConvert.ToPrefix(GmlType)
        VB: GmlTypeConvert.ToPrefix(GmlType)
      qualifiedName:
        CSharp: PLATEAU.CityMeta.GmlTypeConvert.ToPrefix(PLATEAU.CityMeta.GmlType)
        VB: PLATEAU.CityMeta.GmlTypeConvert.ToPrefix(PLATEAU.CityMeta.GmlType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: ToPrefix
        path: ''
        startLine: 5486
      summary: "\n<xref href=\"PLATEAU.CityMeta.GmlType\" data-throw-if-not-resolved=\"false\"></xref> を接頭辞に変換する拡張メソッドです。\n接頭辞はフォルダ名などに使われます。\nただし、<xref href=\"PLATEAU.CityMeta.GmlType.Etc\" data-throw-if-not-resolved=\"false\"></xref> は接頭辞がないので例外を投げます。\n"
      example: []
      syntax:
        content:
          CSharp: public static string ToPrefix(this GmlType t)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ToPrefix(t As GmlType) As String
        parameters:
        - id: t
          type: PLATEAU.CityMeta.GmlType
          description: 地物タイプ Enum型
        return:
          type: System.String
          description: 地物タイプ string型(接頭辞)
      overload: PLATEAU.CityMeta.GmlTypeConvert.ToPrefix*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        PLATEAU.CityMeta.GmlType: 
        PLATEAU.CityMeta.GmlType.Etc: 
    - id: PLATEAU.CityMeta.GmlTypeConvert.ToEnum(System.String)
      commentId: M:PLATEAU.CityMeta.GmlTypeConvert.ToEnum(System.String)
      language: CSharp
      name:
        CSharp: ToEnum(String)
        VB: ToEnum(String)
      nameWithType:
        CSharp: GmlTypeConvert.ToEnum(String)
        VB: GmlTypeConvert.ToEnum(String)
      qualifiedName:
        CSharp: PLATEAU.CityMeta.GmlTypeConvert.ToEnum(System.String)
        VB: PLATEAU.CityMeta.GmlTypeConvert.ToEnum(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: ToEnum
        path: ''
        startLine: 5507
      summary: "\n接頭辞から <xref href=\"PLATEAU.CityMeta.GmlType\" data-throw-if-not-resolved=\"false\"></xref> を返します。\n辞書にない接頭辞の場合は <xref href=\"PLATEAU.CityMeta.GmlType.Etc\" data-throw-if-not-resolved=\"false\"></xref> を返します。\n"
      example: []
      syntax:
        content:
          CSharp: public static GmlType ToEnum(string prefix)
          VB: Public Shared Function ToEnum(prefix As String) As GmlType
        parameters:
        - id: prefix
          type: System.String
          description: 地物タイプ string型(接頭辞)
        return:
          type: PLATEAU.CityMeta.GmlType
          description: 地物タイプ Enum型
      overload: PLATEAU.CityMeta.GmlTypeConvert.ToEnum*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        PLATEAU.CityMeta.GmlType: 
        PLATEAU.CityMeta.GmlType.Etc: 
    - id: PLATEAU.CityMeta.GmlTypeConvert.ToDisplay(PLATEAU.CityMeta.GmlType)
      commentId: M:PLATEAU.CityMeta.GmlTypeConvert.ToDisplay(PLATEAU.CityMeta.GmlType)
      language: CSharp
      name:
        CSharp: ToDisplay(GmlType)
        VB: ToDisplay(GmlType)
      nameWithType:
        CSharp: GmlTypeConvert.ToDisplay(GmlType)
        VB: GmlTypeConvert.ToDisplay(GmlType)
      qualifiedName:
        CSharp: PLATEAU.CityMeta.GmlTypeConvert.ToDisplay(PLATEAU.CityMeta.GmlType)
        VB: PLATEAU.CityMeta.GmlTypeConvert.ToDisplay(PLATEAU.CityMeta.GmlType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: ToDisplay
        path: ''
        startLine: 5525
      summary: "\n<xref href=\"PLATEAU.CityMeta.GmlType\" data-throw-if-not-resolved=\"false\"></xref> を人間にとって分かりやすい文字に変換します。\n"
      example: []
      syntax:
        content:
          CSharp: public static string ToDisplay(GmlType t)
          VB: Public Shared Function ToDisplay(t As GmlType) As String
        parameters:
        - id: t
          type: PLATEAU.CityMeta.GmlType
          description: 地物タイプ Enum型
        return:
          type: System.String
          description: 説明形式の文字
      overload: PLATEAU.CityMeta.GmlTypeConvert.ToDisplay*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        PLATEAU.CityMeta.GmlType: 
    references:
      PLATEAU.CityMeta.GmlType: 
  - id: PLATEAU.CityMeta.GmlTypeTarget
    commentId: T:PLATEAU.CityMeta.GmlTypeTarget
    language: CSharp
    name:
      CSharp: GmlTypeTarget
      VB: GmlTypeTarget
    nameWithType:
      CSharp: GmlTypeTarget
      VB: GmlTypeTarget
    qualifiedName:
      CSharp: PLATEAU.CityMeta.GmlTypeTarget
      VB: PLATEAU.CityMeta.GmlTypeTarget
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityMeta
    source:
      id: GmlTypeTarget
      path: ''
      startLine: 5558
    summary: "\n<p>\n街モデルのインポート時、インポート対象を 地物タイプ と 地域ID で絞り込むことができますが、\nそのうち 地物タイプ での絞り込み設定を保持するのがこのクラスの役割です。</p>\n<p>\n例: udx/bldg 下のgmlは対象にするが、udx/veg 下のgmlは対象にしない、など。</p>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class GmlTypeTarget : ISerializationCallbackReceiver'
        VB: >-
          Public Class GmlTypeTarget

              Inherits ISerializationCallbackReceiver
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PLATEAU.CityMeta.GmlTypeTarget.TargetDict
      commentId: P:PLATEAU.CityMeta.GmlTypeTarget.TargetDict
      language: CSharp
      name:
        CSharp: TargetDict
        VB: TargetDict
      nameWithType:
        CSharp: GmlTypeTarget.TargetDict
        VB: GmlTypeTarget.TargetDict
      qualifiedName:
        CSharp: PLATEAU.CityMeta.GmlTypeTarget.TargetDict
        VB: PLATEAU.CityMeta.GmlTypeTarget.TargetDict
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: TargetDict
        path: ''
        startLine: 5562
      summary: 'GmlTypeごとに、変換対象とするかどうかの辞書です。 '
      example: []
      syntax:
        content:
          CSharp: public Dictionary<GmlType, bool> TargetDict { get; set; }
          VB: Public Property TargetDict As Dictionary(Of GmlType, Boolean)
        parameters: []
        return:
          type: PLATEAU.Dictionary{PLATEAU.CityMeta.GmlType,System.Boolean}
      overload: PLATEAU.CityMeta.GmlTypeTarget.TargetDict*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: PLATEAU.CityMeta.GmlTypeTarget.#ctor
      commentId: M:PLATEAU.CityMeta.GmlTypeTarget.#ctor
      language: CSharp
      name:
        CSharp: GmlTypeTarget()
        VB: GmlTypeTarget()
      nameWithType:
        CSharp: GmlTypeTarget.GmlTypeTarget()
        VB: GmlTypeTarget.GmlTypeTarget()
      qualifiedName:
        CSharp: PLATEAU.CityMeta.GmlTypeTarget.GmlTypeTarget()
        VB: PLATEAU.CityMeta.GmlTypeTarget.GmlTypeTarget()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: .ctor
        path: ''
        startLine: 5568
      syntax:
        content:
          CSharp: public GmlTypeTarget()
          VB: Public Sub New
      overload: PLATEAU.CityMeta.GmlTypeTarget.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityMeta.GmlTypeTarget.IsTypeTarget(PLATEAU.CityMeta.GmlType)
      commentId: M:PLATEAU.CityMeta.GmlTypeTarget.IsTypeTarget(PLATEAU.CityMeta.GmlType)
      language: CSharp
      name:
        CSharp: IsTypeTarget(GmlType)
        VB: IsTypeTarget(GmlType)
      nameWithType:
        CSharp: GmlTypeTarget.IsTypeTarget(GmlType)
        VB: GmlTypeTarget.IsTypeTarget(GmlType)
      qualifiedName:
        CSharp: PLATEAU.CityMeta.GmlTypeTarget.IsTypeTarget(PLATEAU.CityMeta.GmlType)
        VB: PLATEAU.CityMeta.GmlTypeTarget.IsTypeTarget(PLATEAU.CityMeta.GmlType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: IsTypeTarget
        path: ''
        startLine: 5582
      summary: "\n与えられたタイプが変換対象かどうかを返します。\n"
      example: []
      syntax:
        content:
          CSharp: public bool IsTypeTarget(GmlType t)
          VB: Public Function IsTypeTarget(t As GmlType) As Boolean
        parameters:
        - id: t
          type: PLATEAU.CityMeta.GmlType
          description: 対象タイプ
        return:
          type: System.Boolean
          description: 変換対象かどうか
      overload: PLATEAU.CityMeta.GmlTypeTarget.IsTypeTarget*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityMeta.GmlTypeTarget.SetAll(System.Boolean)
      commentId: M:PLATEAU.CityMeta.GmlTypeTarget.SetAll(System.Boolean)
      language: CSharp
      name:
        CSharp: SetAll(Boolean)
        VB: SetAll(Boolean)
      nameWithType:
        CSharp: GmlTypeTarget.SetAll(Boolean)
        VB: GmlTypeTarget.SetAll(Boolean)
      qualifiedName:
        CSharp: PLATEAU.CityMeta.GmlTypeTarget.SetAll(System.Boolean)
        VB: PLATEAU.CityMeta.GmlTypeTarget.SetAll(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: SetAll
        path: ''
        startLine: 5588
      summary: 'すべて true または すべて false にします。 '
      example: []
      syntax:
        content:
          CSharp: public void SetAll(bool val)
          VB: Public Sub SetAll(val As Boolean)
        parameters:
        - id: val
          type: System.Boolean
      overload: PLATEAU.CityMeta.GmlTypeTarget.SetAll*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: PLATEAU.CityMeta.IdToGmlTable
    commentId: T:PLATEAU.CityMeta.IdToGmlTable
    language: CSharp
    name:
      CSharp: IdToGmlTable
      VB: IdToGmlTable
    nameWithType:
      CSharp: IdToGmlTable
      VB: IdToGmlTable
    qualifiedName:
      CSharp: PLATEAU.CityMeta.IdToGmlTable
      VB: PLATEAU.CityMeta.IdToGmlTable
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.CityMeta
    source:
      id: IdToGmlTable
      path: ''
      startLine: 5627
    summary: "\n<see cref=\"!:CityObject\"></see> のIDから、対応するGMLのファイル名を検索できる辞書データです。\n<xref href=\"PLATEAU.CityMeta.CityMetaData\" data-throw-if-not-resolved=\"false\"></xref> によって保持されます。\n"
    example: []
    syntax:
      content:
        CSharp: 'public class IdToGmlTable : ISerializationCallbackReceiver'
        VB: >-
          Public Class IdToGmlTable

              Inherits ISerializationCallbackReceiver
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PLATEAU.CityMeta.IdToGmlTable.Add(System.String,System.String)
      commentId: M:PLATEAU.CityMeta.IdToGmlTable.Add(System.String,System.String)
      language: CSharp
      name:
        CSharp: Add(String, String)
        VB: Add(String, String)
      nameWithType:
        CSharp: IdToGmlTable.Add(String, String)
        VB: IdToGmlTable.Add(String, String)
      qualifiedName:
        CSharp: PLATEAU.CityMeta.IdToGmlTable.Add(System.String, System.String)
        VB: PLATEAU.CityMeta.IdToGmlTable.Add(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: Add
        path: ''
        startLine: 5651
      syntax:
        content:
          CSharp: public void Add(string id, string gmlFileName)
          VB: Public Sub Add(id As String, gmlFileName As String)
        parameters:
        - id: id
          type: System.String
        - id: gmlFileName
          type: System.String
      overload: PLATEAU.CityMeta.IdToGmlTable.Add*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityMeta.IdToGmlTable.Add(KeyValuePair{System.String,System.String})
      commentId: M:PLATEAU.CityMeta.IdToGmlTable.Add(KeyValuePair{System.String,System.String})
      language: CSharp
      name:
        CSharp: Add(KeyValuePair<String, String>)
        VB: Add(KeyValuePair(Of String, String))
      nameWithType:
        CSharp: IdToGmlTable.Add(KeyValuePair<String, String>)
        VB: IdToGmlTable.Add(KeyValuePair(Of String, String))
      qualifiedName:
        CSharp: PLATEAU.CityMeta.IdToGmlTable.Add(KeyValuePair<System.String, System.String>)
        VB: PLATEAU.CityMeta.IdToGmlTable.Add(KeyValuePair(Of System.String, System.String))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: Add
        path: ''
        startLine: 5656
      syntax:
        content:
          CSharp: public void Add(KeyValuePair<string, string> item)
          VB: Public Sub Add(item As KeyValuePair(Of String, String))
        parameters:
        - id: item
          type: PLATEAU.KeyValuePair{System.String,System.String}
      overload: PLATEAU.CityMeta.IdToGmlTable.Add*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityMeta.IdToGmlTable.ContainsKey(System.String)
      commentId: M:PLATEAU.CityMeta.IdToGmlTable.ContainsKey(System.String)
      language: CSharp
      name:
        CSharp: ContainsKey(String)
        VB: ContainsKey(String)
      nameWithType:
        CSharp: IdToGmlTable.ContainsKey(String)
        VB: IdToGmlTable.ContainsKey(String)
      qualifiedName:
        CSharp: PLATEAU.CityMeta.IdToGmlTable.ContainsKey(System.String)
        VB: PLATEAU.CityMeta.IdToGmlTable.ContainsKey(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: ContainsKey
        path: ''
        startLine: 5661
      syntax:
        content:
          CSharp: public bool ContainsKey(string key)
          VB: Public Function ContainsKey(key As String) As Boolean
        parameters:
        - id: key
          type: System.String
        return:
          type: System.Boolean
      overload: PLATEAU.CityMeta.IdToGmlTable.ContainsKey*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityMeta.IdToGmlTable.TryGetValue(System.String,System.String@)
      commentId: M:PLATEAU.CityMeta.IdToGmlTable.TryGetValue(System.String,System.String@)
      language: CSharp
      name:
        CSharp: TryGetValue(String, out String)
        VB: TryGetValue(String, ByRef String)
      nameWithType:
        CSharp: IdToGmlTable.TryGetValue(String, out String)
        VB: IdToGmlTable.TryGetValue(String, ByRef String)
      qualifiedName:
        CSharp: PLATEAU.CityMeta.IdToGmlTable.TryGetValue(System.String, out System.String)
        VB: PLATEAU.CityMeta.IdToGmlTable.TryGetValue(System.String, ByRef System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: TryGetValue
        path: ''
        startLine: 5662
      syntax:
        content:
          CSharp: public bool TryGetValue(string key, out string value)
          VB: Public Function TryGetValue(key As String, ByRef value As String) As Boolean
        parameters:
        - id: key
          type: System.String
        - id: value
          type: System.String
        return:
          type: System.Boolean
      overload: PLATEAU.CityMeta.IdToGmlTable.TryGetValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityMeta.IdToGmlTable.Item(System.String)
      commentId: P:PLATEAU.CityMeta.IdToGmlTable.Item(System.String)
      language: CSharp
      name:
        CSharp: Item[String]
        VB: Item(String)
      nameWithType:
        CSharp: IdToGmlTable.Item[String]
        VB: IdToGmlTable.Item(String)
      qualifiedName:
        CSharp: PLATEAU.CityMeta.IdToGmlTable.Item[System.String]
        VB: PLATEAU.CityMeta.IdToGmlTable.Item(System.String)
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: this[]
        path: ''
        startLine: 5667
      syntax:
        content:
          CSharp: public string this[string key] { get; set; }
          VB: Public Property Item(key As String) As String
        parameters:
        - id: key
          type: System.String
        return:
          type: System.String
      overload: PLATEAU.CityMeta.IdToGmlTable.Item*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: PLATEAU.CityMeta.IdToGmlTable.Keys
      commentId: P:PLATEAU.CityMeta.IdToGmlTable.Keys
      language: CSharp
      name:
        CSharp: Keys
        VB: Keys
      nameWithType:
        CSharp: IdToGmlTable.Keys
        VB: IdToGmlTable.Keys
      qualifiedName:
        CSharp: PLATEAU.CityMeta.IdToGmlTable.Keys
        VB: PLATEAU.CityMeta.IdToGmlTable.Keys
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: Keys
        path: ''
        startLine: 5673
      syntax:
        content:
          CSharp: public ICollection<string> Keys { get; }
          VB: Public ReadOnly Property Keys As ICollection(Of String)
        parameters: []
        return:
          type: PLATEAU.ICollection{System.String}
      overload: PLATEAU.CityMeta.IdToGmlTable.Keys*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityMeta.IdToGmlTable.Clear
      commentId: M:PLATEAU.CityMeta.IdToGmlTable.Clear
      language: CSharp
      name:
        CSharp: Clear()
        VB: Clear()
      nameWithType:
        CSharp: IdToGmlTable.Clear()
        VB: IdToGmlTable.Clear()
      qualifiedName:
        CSharp: PLATEAU.CityMeta.IdToGmlTable.Clear()
        VB: PLATEAU.CityMeta.IdToGmlTable.Clear()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: Clear
        path: ''
        startLine: 5675
      syntax:
        content:
          CSharp: public void Clear()
          VB: Public Sub Clear
      overload: PLATEAU.CityMeta.IdToGmlTable.Clear*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PLATEAU.CityMeta.IdToGmlTable.Count
      commentId: P:PLATEAU.CityMeta.IdToGmlTable.Count
      language: CSharp
      name:
        CSharp: Count
        VB: Count
      nameWithType:
        CSharp: IdToGmlTable.Count
        VB: IdToGmlTable.Count
      qualifiedName:
        CSharp: PLATEAU.CityMeta.IdToGmlTable.Count
        VB: PLATEAU.CityMeta.IdToGmlTable.Count
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: Count
        path: ''
        startLine: 5680
      syntax:
        content:
          CSharp: public int Count { get; }
          VB: Public ReadOnly Property Count As Integer
        parameters: []
        return:
          type: System.Int32
      overload: PLATEAU.CityMeta.IdToGmlTable.Count*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: PLATEAU.CityMeta.IdToGmlTable.GetEnumerator
      commentId: M:PLATEAU.CityMeta.IdToGmlTable.GetEnumerator
      language: CSharp
      name:
        CSharp: GetEnumerator()
        VB: GetEnumerator()
      nameWithType:
        CSharp: IdToGmlTable.GetEnumerator()
        VB: IdToGmlTable.GetEnumerator()
      qualifiedName:
        CSharp: PLATEAU.CityMeta.IdToGmlTable.GetEnumerator()
        VB: PLATEAU.CityMeta.IdToGmlTable.GetEnumerator()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.CityMeta
      source:
        id: GetEnumerator
        path: ''
        startLine: 5681
      syntax:
        content:
          CSharp: public IEnumerator<KeyValuePair<string, string>> GetEnumerator()
          VB: Public Function GetEnumerator As IEnumerator(Of KeyValuePair(Of String, String))
        return:
          type: PLATEAU.IEnumerator{KeyValuePair{System.String,System.String}}
      overload: PLATEAU.CityMeta.IdToGmlTable.GetEnumerator*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    references:
      PLATEAU.CityMeta.CityMetaData: 
- id: PLATEAU.SemanticsLoad
  commentId: N:PLATEAU.SemanticsLoad
  language: CSharp
  name:
    CSharp: PLATEAU.SemanticsLoad
    VB: PLATEAU.SemanticsLoad
  nameWithType:
    CSharp: PLATEAU.SemanticsLoad
    VB: PLATEAU.SemanticsLoad
  qualifiedName:
    CSharp: PLATEAU.SemanticsLoad
    VB: PLATEAU.SemanticsLoad
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: PLATEAU.SemanticsLoad.SemanticsLoader
    commentId: T:PLATEAU.SemanticsLoad.SemanticsLoader
    language: CSharp
    name:
      CSharp: SemanticsLoader
      VB: SemanticsLoader
    nameWithType:
      CSharp: SemanticsLoader
      VB: SemanticsLoader
    qualifiedName:
      CSharp: PLATEAU.SemanticsLoad.SemanticsLoader
      VB: PLATEAU.SemanticsLoad.SemanticsLoader
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: PLATEAU.SemanticsLoad
    source:
      id: SemanticsLoader
      path: ''
      startLine: 5702
    summary: "\nUnityのランタイムでゲームオブジェクト名から <see cref=\"!:CityObject\"></see> を取得します。\n"
    example: []
    syntax:
      content:
        CSharp: public class SemanticsLoader
        VB: Public Class SemanticsLoader
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PLATEAU.SemanticsLoad.SemanticsLoader.Load(System.String,CityMetaData)
      commentId: M:PLATEAU.SemanticsLoad.SemanticsLoader.Load(System.String,CityMetaData)
      language: CSharp
      name:
        CSharp: Load(String, CityMetaData)
        VB: Load(String, CityMetaData)
      nameWithType:
        CSharp: SemanticsLoader.Load(String, CityMetaData)
        VB: SemanticsLoader.Load(String, CityMetaData)
      qualifiedName:
        CSharp: PLATEAU.SemanticsLoad.SemanticsLoader.Load(System.String, CityMetaData)
        VB: PLATEAU.SemanticsLoad.SemanticsLoader.Load(System.String, CityMetaData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: PLATEAU.SemanticsLoad
      source:
        id: Load
        path: ''
        startLine: 5706
      syntax:
        content:
          CSharp: public CityObject Load(string cityObjectId, CityMetaData cityMetaData)
          VB: Public Function Load(cityObjectId As String, cityMetaData As CityMetaData) As CityObject
        parameters:
        - id: cityObjectId
          type: System.String
        - id: cityMetaData
          type: PLATEAU.CityMetaData
        return:
          type: PLATEAU.CityObject
      overload: PLATEAU.SemanticsLoad.SemanticsLoader.Load*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
references:
  PLATEAU.CityGML.CityObject:
    name:
      CSharp:
      - id: PLATEAU.CityGML.CityObject
        name: CityObject
        nameWithType: CityObject
        qualifiedName: PLATEAU.CityGML.CityObject
      VB:
      - id: PLATEAU.CityGML.CityObject
        name: CityObject
        nameWithType: CityObject
        qualifiedName: PLATEAU.CityGML.CityObject
    isDefinition: true
    parent: PLATEAU.CityGML
    commentId: T:PLATEAU.CityGML.CityObject
  PLATEAU.CityGML.Address:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Address
        name: Address
        nameWithType: Address
        qualifiedName: PLATEAU.CityGML.Address
      VB:
      - id: PLATEAU.CityGML.Address
        name: Address
        nameWithType: Address
        qualifiedName: PLATEAU.CityGML.Address
    isDefinition: true
    parent: PLATEAU.CityGML
    commentId: T:PLATEAU.CityGML.Address
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  PLATEAU.IntPtr:
    name:
      CSharp:
      - id: PLATEAU.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: IntPtr
        isExternal: true
      VB:
      - id: PLATEAU.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: IntPtr
        isExternal: true
    isDefinition: true
  PLATEAU.CityGML.Address.#ctor*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Address.#ctor*
        name: Address
        nameWithType: Address.Address
        qualifiedName: PLATEAU.CityGML.Address.Address
      VB:
      - id: PLATEAU.CityGML.Address.#ctor*
        name: Address
        nameWithType: Address.Address
        qualifiedName: PLATEAU.CityGML.Address.Address
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Address.#ctor
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  PLATEAU.CityGML.Address.Country*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Address.Country*
        name: Country
        nameWithType: Address.Country
        qualifiedName: PLATEAU.CityGML.Address.Country
      VB:
      - id: PLATEAU.CityGML.Address.Country*
        name: Country
        nameWithType: Address.Country
        qualifiedName: PLATEAU.CityGML.Address.Country
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Address.Country
  PLATEAU.CityGML.Address.Locality*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Address.Locality*
        name: Locality
        nameWithType: Address.Locality
        qualifiedName: PLATEAU.CityGML.Address.Locality
      VB:
      - id: PLATEAU.CityGML.Address.Locality*
        name: Locality
        nameWithType: Address.Locality
        qualifiedName: PLATEAU.CityGML.Address.Locality
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Address.Locality
  PLATEAU.CityGML.Address.PostalCode*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Address.PostalCode*
        name: PostalCode
        nameWithType: Address.PostalCode
        qualifiedName: PLATEAU.CityGML.Address.PostalCode
      VB:
      - id: PLATEAU.CityGML.Address.PostalCode*
        name: PostalCode
        nameWithType: Address.PostalCode
        qualifiedName: PLATEAU.CityGML.Address.PostalCode
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Address.PostalCode
  PLATEAU.CityGML.Address.ThoroughFareName*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Address.ThoroughFareName*
        name: ThoroughFareName
        nameWithType: Address.ThoroughFareName
        qualifiedName: PLATEAU.CityGML.Address.ThoroughFareName
      VB:
      - id: PLATEAU.CityGML.Address.ThoroughFareName*
        name: ThoroughFareName
        nameWithType: Address.ThoroughFareName
        qualifiedName: PLATEAU.CityGML.Address.ThoroughFareName
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Address.ThoroughFareName
  PLATEAU.CityGML.Address.ThoroughFareNumber*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Address.ThoroughFareNumber*
        name: ThoroughFareNumber
        nameWithType: Address.ThoroughFareNumber
        qualifiedName: PLATEAU.CityGML.Address.ThoroughFareNumber
      VB:
      - id: PLATEAU.CityGML.Address.ThoroughFareNumber*
        name: ThoroughFareNumber
        nameWithType: Address.ThoroughFareNumber
        qualifiedName: PLATEAU.CityGML.Address.ThoroughFareNumber
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Address.ThoroughFareNumber
  PLATEAU.CityGML.Texture:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Texture
        name: Texture
        nameWithType: Texture
        qualifiedName: PLATEAU.CityGML.Texture
      VB:
      - id: PLATEAU.CityGML.Texture
        name: Texture
        nameWithType: Texture
        qualifiedName: PLATEAU.CityGML.Texture
    isDefinition: true
    commentId: T:PLATEAU.CityGML.Texture
  PLATEAU.CityGML.Material:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Material
        name: Material
        nameWithType: Material
        qualifiedName: PLATEAU.CityGML.Material
      VB:
      - id: PLATEAU.CityGML.Material
        name: Material
        nameWithType: Material
        qualifiedName: PLATEAU.CityGML.Material
    isDefinition: true
    commentId: T:PLATEAU.CityGML.Material
  PLATEAU.CityGML:
    name:
      CSharp:
      - name: PLATEAU.CityGML
        nameWithType: PLATEAU.CityGML
        qualifiedName: PLATEAU.CityGML
      VB:
      - name: PLATEAU.CityGML
        nameWithType: PLATEAU.CityGML
        qualifiedName: PLATEAU.CityGML
    isDefinition: true
    commentId: N:PLATEAU.CityGML
  PLATEAU.CityGML.Object:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Object
        name: Object
        nameWithType: Object
        qualifiedName: PLATEAU.CityGML.Object
      VB:
      - id: PLATEAU.CityGML.Object
        name: Object
        nameWithType: Object
        qualifiedName: PLATEAU.CityGML.Object
    isDefinition: true
    parent: PLATEAU.CityGML
    commentId: T:PLATEAU.CityGML.Object
  PLATEAU.CityGML.Object.Handle:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Object.Handle
        name: Handle
        nameWithType: Object.Handle
        qualifiedName: PLATEAU.CityGML.Object.Handle
      VB:
      - id: PLATEAU.CityGML.Object.Handle
        name: Handle
        nameWithType: Object.Handle
        qualifiedName: PLATEAU.CityGML.Object.Handle
    isDefinition: true
    parent: PLATEAU.CityGML.Object
    commentId: P:PLATEAU.CityGML.Object.Handle
  PLATEAU.CityGML.Object.ID:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Object.ID
        name: ID
        nameWithType: Object.ID
        qualifiedName: PLATEAU.CityGML.Object.ID
      VB:
      - id: PLATEAU.CityGML.Object.ID
        name: ID
        nameWithType: Object.ID
        qualifiedName: PLATEAU.CityGML.Object.ID
    isDefinition: true
    parent: PLATEAU.CityGML.Object
    commentId: P:PLATEAU.CityGML.Object.ID
  PLATEAU.CityGML.Object.AttributesMap:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Object.AttributesMap
        name: AttributesMap
        nameWithType: Object.AttributesMap
        qualifiedName: PLATEAU.CityGML.Object.AttributesMap
      VB:
      - id: PLATEAU.CityGML.Object.AttributesMap
        name: AttributesMap
        nameWithType: Object.AttributesMap
        qualifiedName: PLATEAU.CityGML.Object.AttributesMap
    isDefinition: true
    parent: PLATEAU.CityGML.Object
    commentId: P:PLATEAU.CityGML.Object.AttributesMap
  PLATEAU.CityGML.Appearance.Type*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Appearance.Type*
        name: Type
        nameWithType: Appearance.Type
        qualifiedName: PLATEAU.CityGML.Appearance.Type
      VB:
      - id: PLATEAU.CityGML.Appearance.Type*
        name: Type
        nameWithType: Appearance.Type
        qualifiedName: PLATEAU.CityGML.Appearance.Type
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Appearance.Type
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  PLATEAU.CityGML.Appearance.IsFront*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Appearance.IsFront*
        name: IsFront
        nameWithType: Appearance.IsFront
        qualifiedName: PLATEAU.CityGML.Appearance.IsFront
      VB:
      - id: PLATEAU.CityGML.Appearance.IsFront*
        name: IsFront
        nameWithType: Appearance.IsFront
        qualifiedName: PLATEAU.CityGML.Appearance.IsFront
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Appearance.IsFront
  System.String[]:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  PLATEAU.CityGML.Appearance.Themes*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Appearance.Themes*
        name: Themes
        nameWithType: Appearance.Themes
        qualifiedName: PLATEAU.CityGML.Appearance.Themes
      VB:
      - id: PLATEAU.CityGML.Appearance.Themes*
        name: Themes
        nameWithType: Appearance.Themes
        qualifiedName: PLATEAU.CityGML.Appearance.Themes
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Appearance.Themes
  PLATEAU.CityGML.Appearance:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Appearance
        name: Appearance
        nameWithType: Appearance
        qualifiedName: PLATEAU.CityGML.Appearance
      VB:
      - id: PLATEAU.CityGML.Appearance
        name: Appearance
        nameWithType: Appearance
        qualifiedName: PLATEAU.CityGML.Appearance
    isDefinition: true
    parent: PLATEAU.CityGML
    commentId: T:PLATEAU.CityGML.Appearance
  PLATEAU.CityGML.TextureTargetDefinition:
    name:
      CSharp:
      - id: PLATEAU.CityGML.TextureTargetDefinition
        name: TextureTargetDefinition
        nameWithType: TextureTargetDefinition
        qualifiedName: PLATEAU.CityGML.TextureTargetDefinition
      VB:
      - id: PLATEAU.CityGML.TextureTargetDefinition
        name: TextureTargetDefinition
        nameWithType: TextureTargetDefinition
        qualifiedName: PLATEAU.CityGML.TextureTargetDefinition
    isDefinition: true
    parent: PLATEAU.CityGML
    commentId: T:PLATEAU.CityGML.TextureTargetDefinition
  PLATEAU.CityGML.MaterialTargetDefinition:
    name:
      CSharp:
      - id: PLATEAU.CityGML.MaterialTargetDefinition
        name: MaterialTargetDefinition
        nameWithType: MaterialTargetDefinition
        qualifiedName: PLATEAU.CityGML.MaterialTargetDefinition
      VB:
      - id: PLATEAU.CityGML.MaterialTargetDefinition
        name: MaterialTargetDefinition
        nameWithType: MaterialTargetDefinition
        qualifiedName: PLATEAU.CityGML.MaterialTargetDefinition
    isDefinition: true
    parent: PLATEAU.CityGML
    commentId: T:PLATEAU.CityGML.MaterialTargetDefinition
  PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitions:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitions
        name: TextureTargetDefinitions
        nameWithType: AppearanceTarget.TextureTargetDefinitions
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitions
      VB:
      - id: PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitions
        name: TextureTargetDefinitions
        nameWithType: AppearanceTarget.TextureTargetDefinitions
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitions
    isDefinition: true
    parent: PLATEAU.CityGML.AppearanceTarget
    commentId: P:PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitions
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitionsCount*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitionsCount*
        name: TextureTargetDefinitionsCount
        nameWithType: AppearanceTarget.TextureTargetDefinitionsCount
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitionsCount
      VB:
      - id: PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitionsCount*
        name: TextureTargetDefinitionsCount
        nameWithType: AppearanceTarget.TextureTargetDefinitionsCount
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitionsCount
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitionsCount
  PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition*
        name: GetTextureTargetDefinition
        nameWithType: AppearanceTarget.GetTextureTargetDefinition
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition
      VB:
      - id: PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition*
        name: GetTextureTargetDefinition
        nameWithType: AppearanceTarget.GetTextureTargetDefinition
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition
  PLATEAU.IEnumerable`1:
    name:
      CSharp:
      - id: PLATEAU.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: PLATEAU.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  PLATEAU.IEnumerable{PLATEAU.CityGML.TextureTargetDefinition}:
    name:
      CSharp:
      - id: PLATEAU.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: PLATEAU.CityGML.TextureTargetDefinition
        name: TextureTargetDefinition
        nameWithType: TextureTargetDefinition
        qualifiedName: PLATEAU.CityGML.TextureTargetDefinition
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: PLATEAU.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: PLATEAU.CityGML.TextureTargetDefinition
        name: TextureTargetDefinition
        nameWithType: TextureTargetDefinition
        qualifiedName: PLATEAU.CityGML.TextureTargetDefinition
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: PLATEAU.IEnumerable`1
    commentId: '!:PLATEAU.IEnumerable{PLATEAU.CityGML.TextureTargetDefinition}'
  PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitions*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitions*
        name: TextureTargetDefinitions
        nameWithType: AppearanceTarget.TextureTargetDefinitions
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitions
      VB:
      - id: PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitions*
        name: TextureTargetDefinitions
        nameWithType: AppearanceTarget.TextureTargetDefinitions
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitions
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitions
  PLATEAU.CityGML.AppearanceTarget.TextureThemesCountOfFront*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AppearanceTarget.TextureThemesCountOfFront*
        name: TextureThemesCountOfFront
        nameWithType: AppearanceTarget.TextureThemesCountOfFront
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.TextureThemesCountOfFront
      VB:
      - id: PLATEAU.CityGML.AppearanceTarget.TextureThemesCountOfFront*
        name: TextureThemesCountOfFront
        nameWithType: AppearanceTarget.TextureThemesCountOfFront
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.TextureThemesCountOfFront
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.AppearanceTarget.TextureThemesCountOfFront
  PLATEAU.CityGML.AppearanceTarget.TextureThemeNames*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AppearanceTarget.TextureThemeNames*
        name: TextureThemeNames
        nameWithType: AppearanceTarget.TextureThemeNames
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.TextureThemeNames
      VB:
      - id: PLATEAU.CityGML.AppearanceTarget.TextureThemeNames*
        name: TextureThemeNames
        nameWithType: AppearanceTarget.TextureThemeNames
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.TextureThemeNames
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.AppearanceTarget.TextureThemeNames
  PLATEAU.CityGML.AppearanceTarget.MaterialThemesCountByFront*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AppearanceTarget.MaterialThemesCountByFront*
        name: MaterialThemesCountByFront
        nameWithType: AppearanceTarget.MaterialThemesCountByFront
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.MaterialThemesCountByFront
      VB:
      - id: PLATEAU.CityGML.AppearanceTarget.MaterialThemesCountByFront*
        name: MaterialThemesCountByFront
        nameWithType: AppearanceTarget.MaterialThemesCountByFront
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.MaterialThemesCountByFront
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.AppearanceTarget.MaterialThemesCountByFront
  PLATEAU.CityGML.AppearanceTarget.MaterialThemeNames*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AppearanceTarget.MaterialThemeNames*
        name: MaterialThemeNames
        nameWithType: AppearanceTarget.MaterialThemeNames
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.MaterialThemeNames
      VB:
      - id: PLATEAU.CityGML.AppearanceTarget.MaterialThemeNames*
        name: MaterialThemeNames
        nameWithType: AppearanceTarget.MaterialThemeNames
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.MaterialThemeNames
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.AppearanceTarget.MaterialThemeNames
  PLATEAU.CityGML.AppearanceTarget.GetMaterialTargetDefinitionByThemeName*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AppearanceTarget.GetMaterialTargetDefinitionByThemeName*
        name: GetMaterialTargetDefinitionByThemeName
        nameWithType: AppearanceTarget.GetMaterialTargetDefinitionByThemeName
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.GetMaterialTargetDefinitionByThemeName
      VB:
      - id: PLATEAU.CityGML.AppearanceTarget.GetMaterialTargetDefinitionByThemeName*
        name: GetMaterialTargetDefinitionByThemeName
        nameWithType: AppearanceTarget.GetMaterialTargetDefinitionByThemeName
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.GetMaterialTargetDefinitionByThemeName
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.AppearanceTarget.GetMaterialTargetDefinitionByThemeName
  PLATEAU.CityGML.AppearanceTarget:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AppearanceTarget
        name: AppearanceTarget
        nameWithType: AppearanceTarget
        qualifiedName: PLATEAU.CityGML.AppearanceTarget
      VB:
      - id: PLATEAU.CityGML.AppearanceTarget
        name: AppearanceTarget
        nameWithType: AppearanceTarget
        qualifiedName: PLATEAU.CityGML.AppearanceTarget
    isDefinition: true
    parent: PLATEAU.CityGML
    commentId: T:PLATEAU.CityGML.AppearanceTarget
  PLATEAU.CityGML.AppearanceTargetDefinition`1.TargetID:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AppearanceTargetDefinition`1.TargetID
        name: TargetID
        nameWithType: AppearanceTargetDefinition<T>.TargetID
        qualifiedName: PLATEAU.CityGML.AppearanceTargetDefinition<T>.TargetID
      VB:
      - id: PLATEAU.CityGML.AppearanceTargetDefinition`1.TargetID
        name: TargetID
        nameWithType: AppearanceTargetDefinition(Of T).TargetID
        qualifiedName: PLATEAU.CityGML.AppearanceTargetDefinition(Of T).TargetID
    isDefinition: true
    commentId: P:PLATEAU.CityGML.AppearanceTargetDefinition`1.TargetID
  PLATEAU.CityGML.AppearanceTargetDefinition`1.Appearance:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AppearanceTargetDefinition`1.Appearance
        name: Appearance
        nameWithType: AppearanceTargetDefinition<T>.Appearance
        qualifiedName: PLATEAU.CityGML.AppearanceTargetDefinition<T>.Appearance
      VB:
      - id: PLATEAU.CityGML.AppearanceTargetDefinition`1.Appearance
        name: Appearance
        nameWithType: AppearanceTargetDefinition(Of T).Appearance
        qualifiedName: PLATEAU.CityGML.AppearanceTargetDefinition(Of T).Appearance
    isDefinition: true
    commentId: P:PLATEAU.CityGML.AppearanceTargetDefinition`1.Appearance
  T:
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: true
    commentId: '!:T'
  '{T}':
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: false
    definition: T
    commentId: '!:T'
  PLATEAU.CityGML.AppearanceTargetDefinition`1.Appearance*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AppearanceTargetDefinition`1.Appearance*
        name: Appearance
        nameWithType: AppearanceTargetDefinition<T>.Appearance
        qualifiedName: PLATEAU.CityGML.AppearanceTargetDefinition<T>.Appearance
      VB:
      - id: PLATEAU.CityGML.AppearanceTargetDefinition`1.Appearance*
        name: Appearance
        nameWithType: AppearanceTargetDefinition(Of T).Appearance
        qualifiedName: PLATEAU.CityGML.AppearanceTargetDefinition(Of T).Appearance
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.AppearanceTargetDefinition`1.Appearance
  PLATEAU.CityGML.AppearanceTargetDefinition`1.TargetID*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AppearanceTargetDefinition`1.TargetID*
        name: TargetID
        nameWithType: AppearanceTargetDefinition<T>.TargetID
        qualifiedName: PLATEAU.CityGML.AppearanceTargetDefinition<T>.TargetID
      VB:
      - id: PLATEAU.CityGML.AppearanceTargetDefinition`1.TargetID*
        name: TargetID
        nameWithType: AppearanceTargetDefinition(Of T).TargetID
        qualifiedName: PLATEAU.CityGML.AppearanceTargetDefinition(Of T).TargetID
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.AppearanceTargetDefinition`1.TargetID
  PLATEAU.CityGML.AppearanceTargetDefinition`1:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AppearanceTargetDefinition`1
        name: AppearanceTargetDefinition
        nameWithType: AppearanceTargetDefinition
        qualifiedName: PLATEAU.CityGML.AppearanceTargetDefinition
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: PLATEAU.CityGML.AppearanceTargetDefinition`1
        name: AppearanceTargetDefinition
        nameWithType: AppearanceTargetDefinition
        qualifiedName: PLATEAU.CityGML.AppearanceTargetDefinition
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:PLATEAU.CityGML.AppearanceTargetDefinition`1
  PLATEAU.CityGML.AttributeValue:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AttributeValue
        name: AttributeValue
        nameWithType: AttributeValue
        qualifiedName: PLATEAU.CityGML.AttributeValue
      VB:
      - id: PLATEAU.CityGML.AttributeValue
        name: AttributeValue
        nameWithType: AttributeValue
        qualifiedName: PLATEAU.CityGML.AttributeValue
    isDefinition: true
    parent: PLATEAU.CityGML
    commentId: T:PLATEAU.CityGML.AttributeValue
  PLATEAU.CityGML.AttributesMap.Count*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AttributesMap.Count*
        name: Count
        nameWithType: AttributesMap.Count
        qualifiedName: PLATEAU.CityGML.AttributesMap.Count
      VB:
      - id: PLATEAU.CityGML.AttributesMap.Count*
        name: Count
        nameWithType: AttributesMap.Count
        qualifiedName: PLATEAU.CityGML.AttributesMap.Count
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.AttributesMap.Count
  PLATEAU.IEnumerable{System.String}:
    name:
      CSharp:
      - id: PLATEAU.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: PLATEAU.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: PLATEAU.IEnumerable`1
    commentId: '!:PLATEAU.IEnumerable{System.String}'
  PLATEAU.CityGML.AttributesMap.Keys*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AttributesMap.Keys*
        name: Keys
        nameWithType: AttributesMap.Keys
        qualifiedName: PLATEAU.CityGML.AttributesMap.Keys
      VB:
      - id: PLATEAU.CityGML.AttributesMap.Keys*
        name: Keys
        nameWithType: AttributesMap.Keys
        qualifiedName: PLATEAU.CityGML.AttributesMap.Keys
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.AttributesMap.Keys
  PLATEAU.IEnumerable{PLATEAU.CityGML.AttributeValue}:
    name:
      CSharp:
      - id: PLATEAU.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: PLATEAU.CityGML.AttributeValue
        name: AttributeValue
        nameWithType: AttributeValue
        qualifiedName: PLATEAU.CityGML.AttributeValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: PLATEAU.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: PLATEAU.CityGML.AttributeValue
        name: AttributeValue
        nameWithType: AttributeValue
        qualifiedName: PLATEAU.CityGML.AttributeValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: PLATEAU.IEnumerable`1
    commentId: '!:PLATEAU.IEnumerable{PLATEAU.CityGML.AttributeValue}'
  PLATEAU.CityGML.AttributesMap.Values*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AttributesMap.Values*
        name: Values
        nameWithType: AttributesMap.Values
        qualifiedName: PLATEAU.CityGML.AttributesMap.Values
      VB:
      - id: PLATEAU.CityGML.AttributesMap.Values*
        name: Values
        nameWithType: AttributesMap.Values
        qualifiedName: PLATEAU.CityGML.AttributesMap.Values
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.AttributesMap.Values
  PLATEAU.CityGML.AttributesMap.TryGetValue(System.String,PLATEAU.CityGML.AttributeValue@):
    commentId: M:PLATEAU.CityGML.AttributesMap.TryGetValue(System.String,PLATEAU.CityGML.AttributeValue@)
  PLATEAU.CityGML.AttributesMap.Item*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AttributesMap.Item*
        name: Item
        nameWithType: AttributesMap.Item
        qualifiedName: PLATEAU.CityGML.AttributesMap.Item
      VB:
      - id: PLATEAU.CityGML.AttributesMap.Item*
        name: Item
        nameWithType: AttributesMap.Item
        qualifiedName: PLATEAU.CityGML.AttributesMap.Item
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.AttributesMap.Item
  PLATEAU.CityGML.AttributesMap.ContainsKey*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AttributesMap.ContainsKey*
        name: ContainsKey
        nameWithType: AttributesMap.ContainsKey
        qualifiedName: PLATEAU.CityGML.AttributesMap.ContainsKey
      VB:
      - id: PLATEAU.CityGML.AttributesMap.ContainsKey*
        name: ContainsKey
        nameWithType: AttributesMap.ContainsKey
        qualifiedName: PLATEAU.CityGML.AttributesMap.ContainsKey
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.AttributesMap.ContainsKey
  PLATEAU.CityGML.AttributesMap.TryGetValue*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AttributesMap.TryGetValue*
        name: TryGetValue
        nameWithType: AttributesMap.TryGetValue
        qualifiedName: PLATEAU.CityGML.AttributesMap.TryGetValue
      VB:
      - id: PLATEAU.CityGML.AttributesMap.TryGetValue*
        name: TryGetValue
        nameWithType: AttributesMap.TryGetValue
        qualifiedName: PLATEAU.CityGML.AttributesMap.TryGetValue
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.AttributesMap.TryGetValue
  PLATEAU.IEnumerator`1:
    name:
      CSharp:
      - id: PLATEAU.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: IEnumerator
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: PLATEAU.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: IEnumerator
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  PLATEAU.IEnumerator{AttrPair}:
    name:
      CSharp:
      - id: PLATEAU.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: IEnumerator
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: PLATEAU.AttrPair
        name: AttrPair
        nameWithType: AttrPair
        qualifiedName: AttrPair
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: PLATEAU.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: IEnumerator
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: PLATEAU.AttrPair
        name: AttrPair
        nameWithType: AttrPair
        qualifiedName: AttrPair
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: PLATEAU.IEnumerator`1
    commentId: '!:PLATEAU.IEnumerator{AttrPair}'
  PLATEAU.CityGML.AttributesMap.GetEnumerator*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AttributesMap.GetEnumerator*
        name: GetEnumerator
        nameWithType: AttributesMap.GetEnumerator
        qualifiedName: PLATEAU.CityGML.AttributesMap.GetEnumerator
      VB:
      - id: PLATEAU.CityGML.AttributesMap.GetEnumerator*
        name: GetEnumerator
        nameWithType: AttributesMap.GetEnumerator
        qualifiedName: PLATEAU.CityGML.AttributesMap.GetEnumerator
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.AttributesMap.GetEnumerator
  PLATEAU.CityGML.AttributesMap.ToString*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AttributesMap.ToString*
        name: ToString
        nameWithType: AttributesMap.ToString
        qualifiedName: PLATEAU.CityGML.AttributesMap.ToString
      VB:
      - id: PLATEAU.CityGML.AttributesMap.ToString*
        name: ToString
        nameWithType: AttributesMap.ToString
        qualifiedName: PLATEAU.CityGML.AttributesMap.ToString
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.AttributesMap.ToString
  PLATEAU.CityGML.AttributesMap:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AttributesMap
        name: AttributesMap
        nameWithType: AttributesMap
        qualifiedName: PLATEAU.CityGML.AttributesMap
      VB:
      - id: PLATEAU.CityGML.AttributesMap
        name: AttributesMap
        nameWithType: AttributesMap
        qualifiedName: PLATEAU.CityGML.AttributesMap
    isDefinition: true
    parent: PLATEAU.CityGML
    commentId: T:PLATEAU.CityGML.AttributesMap
  PLATEAU.CityGML.AttributeType:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AttributeType
        name: AttributeType
        nameWithType: AttributeType
        qualifiedName: PLATEAU.CityGML.AttributeType
      VB:
      - id: PLATEAU.CityGML.AttributeType
        name: AttributeType
        nameWithType: AttributeType
        qualifiedName: PLATEAU.CityGML.AttributeType
    isDefinition: true
    parent: PLATEAU.CityGML
    commentId: T:PLATEAU.CityGML.AttributeType
  PLATEAU.CityGML.AttributeValue.Type:
    commentId: P:PLATEAU.CityGML.AttributeValue.Type
  PLATEAU.CityGML.AttributeValue.AsString:
    commentId: P:PLATEAU.CityGML.AttributeValue.AsString
  PLATEAU.CityGML.AttributeValue.AsDouble:
    commentId: P:PLATEAU.CityGML.AttributeValue.AsDouble
  PLATEAU.CityGML.AttributeValue.AsInt:
    commentId: P:PLATEAU.CityGML.AttributeValue.AsInt
  PLATEAU.CityGML.AttributeType.AttributeSet:
    commentId: F:PLATEAU.CityGML.AttributeType.AttributeSet
  PLATEAU.CityGML.AttributeValue.AsAttrSet:
    commentId: P:PLATEAU.CityGML.AttributeValue.AsAttrSet
  PLATEAU.CityGML.AttributeValue.#ctor*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AttributeValue.#ctor*
        name: AttributeValue
        nameWithType: AttributeValue.AttributeValue
        qualifiedName: PLATEAU.CityGML.AttributeValue.AttributeValue
      VB:
      - id: PLATEAU.CityGML.AttributeValue.#ctor*
        name: AttributeValue
        nameWithType: AttributeValue.AttributeValue
        qualifiedName: PLATEAU.CityGML.AttributeValue.AttributeValue
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.AttributeValue.#ctor
  PLATEAU.CityGML.AttributeValue.AsString*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AttributeValue.AsString*
        name: AsString
        nameWithType: AttributeValue.AsString
        qualifiedName: PLATEAU.CityGML.AttributeValue.AsString
      VB:
      - id: PLATEAU.CityGML.AttributeValue.AsString*
        name: AsString
        nameWithType: AttributeValue.AsString
        qualifiedName: PLATEAU.CityGML.AttributeValue.AsString
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.AttributeValue.AsString
  System.Double:
    name:
      CSharp:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      VB:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Double
  PLATEAU.CityGML.AttributeValue.AsDouble*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AttributeValue.AsDouble*
        name: AsDouble
        nameWithType: AttributeValue.AsDouble
        qualifiedName: PLATEAU.CityGML.AttributeValue.AsDouble
      VB:
      - id: PLATEAU.CityGML.AttributeValue.AsDouble*
        name: AsDouble
        nameWithType: AttributeValue.AsDouble
        qualifiedName: PLATEAU.CityGML.AttributeValue.AsDouble
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.AttributeValue.AsDouble
  PLATEAU.CityGML.AttributeValue.AsInt*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AttributeValue.AsInt*
        name: AsInt
        nameWithType: AttributeValue.AsInt
        qualifiedName: PLATEAU.CityGML.AttributeValue.AsInt
      VB:
      - id: PLATEAU.CityGML.AttributeValue.AsInt*
        name: AsInt
        nameWithType: AttributeValue.AsInt
        qualifiedName: PLATEAU.CityGML.AttributeValue.AsInt
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.AttributeValue.AsInt
  PLATEAU.CityGML.AttributeValue.Type*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AttributeValue.Type*
        name: Type
        nameWithType: AttributeValue.Type
        qualifiedName: PLATEAU.CityGML.AttributeValue.Type
      VB:
      - id: PLATEAU.CityGML.AttributeValue.Type*
        name: Type
        nameWithType: AttributeValue.Type
        qualifiedName: PLATEAU.CityGML.AttributeValue.Type
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.AttributeValue.Type
  PLATEAU.CityGML.AttributeValue.AsAttrSet*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AttributeValue.AsAttrSet*
        name: AsAttrSet
        nameWithType: AttributeValue.AsAttrSet
        qualifiedName: PLATEAU.CityGML.AttributeValue.AsAttrSet
      VB:
      - id: PLATEAU.CityGML.AttributeValue.AsAttrSet*
        name: AsAttrSet
        nameWithType: AttributeValue.AsAttrSet
        qualifiedName: PLATEAU.CityGML.AttributeValue.AsAttrSet
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.AttributeValue.AsAttrSet
  PLATEAU.CityGML.CityModel:
    name:
      CSharp:
      - id: PLATEAU.CityGML.CityModel
        name: CityModel
        nameWithType: CityModel
        qualifiedName: PLATEAU.CityGML.CityModel
      VB:
      - id: PLATEAU.CityGML.CityModel
        name: CityModel
        nameWithType: CityModel
        qualifiedName: PLATEAU.CityGML.CityModel
    isDefinition: true
    parent: PLATEAU.CityGML
    commentId: T:PLATEAU.CityGML.CityModel
  PLATEAU.CityGML.CitygmlParserParams:
    name:
      CSharp:
      - id: PLATEAU.CityGML.CitygmlParserParams
        name: CitygmlParserParams
        nameWithType: CitygmlParserParams
        qualifiedName: PLATEAU.CityGML.CitygmlParserParams
      VB:
      - id: PLATEAU.CityGML.CitygmlParserParams
        name: CitygmlParserParams
        nameWithType: CitygmlParserParams
        qualifiedName: PLATEAU.CityGML.CitygmlParserParams
    isDefinition: true
    parent: PLATEAU.CityGML
    commentId: T:PLATEAU.CityGML.CitygmlParserParams
  PLATEAU.CityGML.LogCallbacks:
    name:
      CSharp:
      - id: PLATEAU.CityGML.LogCallbacks
        name: LogCallbacks
        nameWithType: LogCallbacks
        qualifiedName: PLATEAU.CityGML.LogCallbacks
      VB:
      - id: PLATEAU.CityGML.LogCallbacks
        name: LogCallbacks
        nameWithType: LogCallbacks
        qualifiedName: PLATEAU.CityGML.LogCallbacks
    isDefinition: true
    parent: PLATEAU.CityGML
    commentId: T:PLATEAU.CityGML.LogCallbacks
  PLATEAU.CityGML.DllLogLevel:
    name:
      CSharp:
      - id: PLATEAU.CityGML.DllLogLevel
        name: DllLogLevel
        nameWithType: DllLogLevel
        qualifiedName: PLATEAU.CityGML.DllLogLevel
      VB:
      - id: PLATEAU.CityGML.DllLogLevel
        name: DllLogLevel
        nameWithType: DllLogLevel
        qualifiedName: PLATEAU.CityGML.DllLogLevel
    isDefinition: true
    parent: PLATEAU.CityGML
    commentId: T:PLATEAU.CityGML.DllLogLevel
  PLATEAU.CityGML.CityGml.Load*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.CityGml.Load*
        name: Load
        nameWithType: CityGml.Load
        qualifiedName: PLATEAU.CityGML.CityGml.Load
      VB:
      - id: PLATEAU.CityGML.CityGml.Load*
        name: Load
        nameWithType: CityGml.Load
        qualifiedName: PLATEAU.CityGML.CityGml.Load
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.CityGml.Load
  PLATEAU.CityGML.CityGml:
    name:
      CSharp:
      - id: PLATEAU.CityGML.CityGml
        name: CityGml
        nameWithType: CityGml
        qualifiedName: PLATEAU.CityGML.CityGml
      VB:
      - id: PLATEAU.CityGML.CityGml
        name: CityGml
        nameWithType: CityGml
        qualifiedName: PLATEAU.CityGML.CityGml
    isDefinition: true
    commentId: T:PLATEAU.CityGML.CityGml
  PLATEAU.CityGML.CityModel.Handle*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.CityModel.Handle*
        name: Handle
        nameWithType: CityModel.Handle
        qualifiedName: PLATEAU.CityGML.CityModel.Handle
      VB:
      - id: PLATEAU.CityGML.CityModel.Handle*
        name: Handle
        nameWithType: CityModel.Handle
        qualifiedName: PLATEAU.CityGML.CityModel.Handle
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.CityModel.Handle
  PLATEAU.ReadOnlyCollection`1:
    name:
      CSharp:
      - id: PLATEAU.ReadOnlyCollection`1
        name: ReadOnlyCollection
        nameWithType: ReadOnlyCollection
        qualifiedName: ReadOnlyCollection
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: PLATEAU.ReadOnlyCollection`1
        name: ReadOnlyCollection
        nameWithType: ReadOnlyCollection
        qualifiedName: ReadOnlyCollection
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:PLATEAU.ReadOnlyCollection`1'
  PLATEAU.ReadOnlyCollection{PLATEAU.CityGML.CityObject}:
    name:
      CSharp:
      - id: PLATEAU.ReadOnlyCollection`1
        name: ReadOnlyCollection
        nameWithType: ReadOnlyCollection
        qualifiedName: ReadOnlyCollection
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: PLATEAU.CityGML.CityObject
        name: CityObject
        nameWithType: CityObject
        qualifiedName: PLATEAU.CityGML.CityObject
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: PLATEAU.ReadOnlyCollection`1
        name: ReadOnlyCollection
        nameWithType: ReadOnlyCollection
        qualifiedName: ReadOnlyCollection
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: PLATEAU.CityGML.CityObject
        name: CityObject
        nameWithType: CityObject
        qualifiedName: PLATEAU.CityGML.CityObject
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: PLATEAU.ReadOnlyCollection`1
    commentId: '!:PLATEAU.ReadOnlyCollection{PLATEAU.CityGML.CityObject}'
  PLATEAU.CityGML.CityModel.RootCityObjects*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.CityModel.RootCityObjects*
        name: RootCityObjects
        nameWithType: CityModel.RootCityObjects
        qualifiedName: PLATEAU.CityGML.CityModel.RootCityObjects
      VB:
      - id: PLATEAU.CityGML.CityModel.RootCityObjects*
        name: RootCityObjects
        nameWithType: CityModel.RootCityObjects
        qualifiedName: PLATEAU.CityGML.CityModel.RootCityObjects
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.CityModel.RootCityObjects
  PLATEAU.CityGML.CityModel.GetCityObjectById*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.CityModel.GetCityObjectById*
        name: GetCityObjectById
        nameWithType: CityModel.GetCityObjectById
        qualifiedName: PLATEAU.CityGML.CityModel.GetCityObjectById
      VB:
      - id: PLATEAU.CityGML.CityModel.GetCityObjectById*
        name: GetCityObjectById
        nameWithType: CityModel.GetCityObjectById
        qualifiedName: PLATEAU.CityGML.CityModel.GetCityObjectById
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.CityModel.GetCityObjectById
  PLATEAU.CityGML.CityModel.Finalize*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.CityModel.Finalize*
        name: Finalize
        nameWithType: CityModel.Finalize
        qualifiedName: PLATEAU.CityGML.CityModel.Finalize
      VB:
      - id: PLATEAU.CityGML.CityModel.Finalize*
        name: Finalize
        nameWithType: CityModel.Finalize
        qualifiedName: PLATEAU.CityGML.CityModel.Finalize
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.CityModel.Finalize
  PLATEAU.CityGML.CityModel.Dispose*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.CityModel.Dispose*
        name: Dispose
        nameWithType: CityModel.Dispose
        qualifiedName: PLATEAU.CityGML.CityModel.Dispose
      VB:
      - id: PLATEAU.CityGML.CityModel.Dispose*
        name: Dispose
        nameWithType: CityModel.Dispose
        qualifiedName: PLATEAU.CityGML.CityModel.Dispose
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.CityModel.Dispose
  PLATEAU.CityGML.CityObjectType:
    name:
      CSharp:
      - id: PLATEAU.CityGML.CityObjectType
        name: CityObjectType
        nameWithType: CityObjectType
        qualifiedName: PLATEAU.CityGML.CityObjectType
      VB:
      - id: PLATEAU.CityGML.CityObjectType
        name: CityObjectType
        nameWithType: CityObjectType
        qualifiedName: PLATEAU.CityGML.CityObjectType
    isDefinition: true
    parent: PLATEAU.CityGML
    commentId: T:PLATEAU.CityGML.CityObjectType
  PLATEAU.CityGML.Geometry:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Geometry
        name: Geometry
        nameWithType: Geometry
        qualifiedName: PLATEAU.CityGML.Geometry
      VB:
      - id: PLATEAU.CityGML.Geometry
        name: Geometry
        nameWithType: Geometry
        qualifiedName: PLATEAU.CityGML.Geometry
    isDefinition: true
    parent: PLATEAU.CityGML
    commentId: T:PLATEAU.CityGML.Geometry
  PLATEAU.CityGML.FeatureObject:
    name:
      CSharp:
      - id: PLATEAU.CityGML.FeatureObject
        name: FeatureObject
        nameWithType: FeatureObject
        qualifiedName: PLATEAU.CityGML.FeatureObject
      VB:
      - id: PLATEAU.CityGML.FeatureObject
        name: FeatureObject
        nameWithType: FeatureObject
        qualifiedName: PLATEAU.CityGML.FeatureObject
    isDefinition: true
    parent: PLATEAU.CityGML
    commentId: T:PLATEAU.CityGML.FeatureObject
  PLATEAU.CityGML.FeatureObject.Envelope:
    name:
      CSharp:
      - id: PLATEAU.CityGML.FeatureObject.Envelope
        name: Envelope
        nameWithType: FeatureObject.Envelope
        qualifiedName: PLATEAU.CityGML.FeatureObject.Envelope
      VB:
      - id: PLATEAU.CityGML.FeatureObject.Envelope
        name: Envelope
        nameWithType: FeatureObject.Envelope
        qualifiedName: PLATEAU.CityGML.FeatureObject.Envelope
    isDefinition: true
    parent: PLATEAU.CityGML.FeatureObject
    commentId: P:PLATEAU.CityGML.FeatureObject.Envelope
  PLATEAU.CityGML.FeatureObject.SetEnvelope(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double):
    name:
      CSharp:
      - id: PLATEAU.CityGML.FeatureObject.SetEnvelope(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
        name: SetEnvelope
        nameWithType: FeatureObject.SetEnvelope
        qualifiedName: PLATEAU.CityGML.FeatureObject.SetEnvelope
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: PLATEAU.CityGML.FeatureObject.SetEnvelope(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
        name: SetEnvelope
        nameWithType: FeatureObject.SetEnvelope
        qualifiedName: PLATEAU.CityGML.FeatureObject.SetEnvelope
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: PLATEAU.CityGML.FeatureObject
    commentId: M:PLATEAU.CityGML.FeatureObject.SetEnvelope(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  PLATEAU.CityGML.CityObject.Type*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.CityObject.Type*
        name: Type
        nameWithType: CityObject.Type
        qualifiedName: PLATEAU.CityGML.CityObject.Type
      VB:
      - id: PLATEAU.CityGML.CityObject.Type*
        name: Type
        nameWithType: CityObject.Type
        qualifiedName: PLATEAU.CityGML.CityObject.Type
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.CityObject.Type
  PLATEAU.CityGML.CityObject.GeometryCount*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.CityObject.GeometryCount*
        name: GeometryCount
        nameWithType: CityObject.GeometryCount
        qualifiedName: PLATEAU.CityGML.CityObject.GeometryCount
      VB:
      - id: PLATEAU.CityGML.CityObject.GeometryCount*
        name: GeometryCount
        nameWithType: CityObject.GeometryCount
        qualifiedName: PLATEAU.CityGML.CityObject.GeometryCount
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.CityObject.GeometryCount
  PLATEAU.CityGML.CityObject.ImplicitGeometryCount*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.CityObject.ImplicitGeometryCount*
        name: ImplicitGeometryCount
        nameWithType: CityObject.ImplicitGeometryCount
        qualifiedName: PLATEAU.CityGML.CityObject.ImplicitGeometryCount
      VB:
      - id: PLATEAU.CityGML.CityObject.ImplicitGeometryCount*
        name: ImplicitGeometryCount
        nameWithType: CityObject.ImplicitGeometryCount
        qualifiedName: PLATEAU.CityGML.CityObject.ImplicitGeometryCount
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.CityObject.ImplicitGeometryCount
  PLATEAU.CityGML.CityObject.Address*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.CityObject.Address*
        name: Address
        nameWithType: CityObject.Address
        qualifiedName: PLATEAU.CityGML.CityObject.Address
      VB:
      - id: PLATEAU.CityGML.CityObject.Address*
        name: Address
        nameWithType: CityObject.Address
        qualifiedName: PLATEAU.CityGML.CityObject.Address
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.CityObject.Address
  PLATEAU.CityGML.CityObject.ChildCityObjectCount*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.CityObject.ChildCityObjectCount*
        name: ChildCityObjectCount
        nameWithType: CityObject.ChildCityObjectCount
        qualifiedName: PLATEAU.CityGML.CityObject.ChildCityObjectCount
      VB:
      - id: PLATEAU.CityGML.CityObject.ChildCityObjectCount*
        name: ChildCityObjectCount
        nameWithType: CityObject.ChildCityObjectCount
        qualifiedName: PLATEAU.CityGML.CityObject.ChildCityObjectCount
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.CityObject.ChildCityObjectCount
  PLATEAU.CityGML.CityObject.GetChildCityObject*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.CityObject.GetChildCityObject*
        name: GetChildCityObject
        nameWithType: CityObject.GetChildCityObject
        qualifiedName: PLATEAU.CityGML.CityObject.GetChildCityObject
      VB:
      - id: PLATEAU.CityGML.CityObject.GetChildCityObject*
        name: GetChildCityObject
        nameWithType: CityObject.GetChildCityObject
        qualifiedName: PLATEAU.CityGML.CityObject.GetChildCityObject
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.CityObject.GetChildCityObject
  PLATEAU.IEnumerable{PLATEAU.CityGML.CityObject}:
    name:
      CSharp:
      - id: PLATEAU.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: PLATEAU.CityGML.CityObject
        name: CityObject
        nameWithType: CityObject
        qualifiedName: PLATEAU.CityGML.CityObject
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: PLATEAU.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: PLATEAU.CityGML.CityObject
        name: CityObject
        nameWithType: CityObject
        qualifiedName: PLATEAU.CityGML.CityObject
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: PLATEAU.IEnumerable`1
    commentId: '!:PLATEAU.IEnumerable{PLATEAU.CityGML.CityObject}'
  PLATEAU.CityGML.CityObject.ChildCityObjects*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.CityObject.ChildCityObjects*
        name: ChildCityObjects
        nameWithType: CityObject.ChildCityObjects
        qualifiedName: PLATEAU.CityGML.CityObject.ChildCityObjects
      VB:
      - id: PLATEAU.CityGML.CityObject.ChildCityObjects*
        name: ChildCityObjects
        nameWithType: CityObject.ChildCityObjects
        qualifiedName: PLATEAU.CityGML.CityObject.ChildCityObjects
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.CityObject.ChildCityObjects
  PLATEAU.CityGML.CityObject.GetGeometry*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.CityObject.GetGeometry*
        name: GetGeometry
        nameWithType: CityObject.GetGeometry
        qualifiedName: PLATEAU.CityGML.CityObject.GetGeometry
      VB:
      - id: PLATEAU.CityGML.CityObject.GetGeometry*
        name: GetGeometry
        nameWithType: CityObject.GetGeometry
        qualifiedName: PLATEAU.CityGML.CityObject.GetGeometry
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.CityObject.GetGeometry
  PLATEAU.IEnumerable{PLATEAU.CityGML.Geometry}:
    name:
      CSharp:
      - id: PLATEAU.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: PLATEAU.CityGML.Geometry
        name: Geometry
        nameWithType: Geometry
        qualifiedName: PLATEAU.CityGML.Geometry
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: PLATEAU.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: PLATEAU.CityGML.Geometry
        name: Geometry
        nameWithType: Geometry
        qualifiedName: PLATEAU.CityGML.Geometry
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: PLATEAU.IEnumerable`1
    commentId: '!:PLATEAU.IEnumerable{PLATEAU.CityGML.Geometry}'
  PLATEAU.CityGML.CityObject.Geometries*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.CityObject.Geometries*
        name: Geometries
        nameWithType: CityObject.Geometries
        qualifiedName: PLATEAU.CityGML.CityObject.Geometries
      VB:
      - id: PLATEAU.CityGML.CityObject.Geometries*
        name: Geometries
        nameWithType: CityObject.Geometries
        qualifiedName: PLATEAU.CityGML.CityObject.Geometries
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.CityObject.Geometries
  PLATEAU.CityGML.CityObject.CityObjectDescendantsDFS*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.CityObject.CityObjectDescendantsDFS*
        name: CityObjectDescendantsDFS
        nameWithType: CityObject.CityObjectDescendantsDFS
        qualifiedName: PLATEAU.CityGML.CityObject.CityObjectDescendantsDFS
      VB:
      - id: PLATEAU.CityGML.CityObject.CityObjectDescendantsDFS*
        name: CityObjectDescendantsDFS
        nameWithType: CityObject.CityObjectDescendantsDFS
        qualifiedName: PLATEAU.CityGML.CityObject.CityObjectDescendantsDFS
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.CityObject.CityObjectDescendantsDFS
  PLATEAU.CityGML.DllLogger:
    name:
      CSharp:
      - id: PLATEAU.CityGML.DllLogger
        name: DllLogger
        nameWithType: DllLogger
        qualifiedName: PLATEAU.CityGML.DllLogger
      VB:
      - id: PLATEAU.CityGML.DllLogger
        name: DllLogger
        nameWithType: DllLogger
        qualifiedName: PLATEAU.CityGML.DllLogger
    isDefinition: true
    commentId: T:PLATEAU.CityGML.DllLogger
  PLATEAU.CityGML.LogCallbackFuncType:
    name:
      CSharp:
      - id: PLATEAU.CityGML.LogCallbackFuncType
        name: LogCallbackFuncType
        nameWithType: LogCallbackFuncType
        qualifiedName: PLATEAU.CityGML.LogCallbackFuncType
      VB:
      - id: PLATEAU.CityGML.LogCallbackFuncType
        name: LogCallbackFuncType
        nameWithType: LogCallbackFuncType
        qualifiedName: PLATEAU.CityGML.LogCallbackFuncType
    isDefinition: true
    parent: PLATEAU.CityGML
    commentId: T:PLATEAU.CityGML.LogCallbackFuncType
  PLATEAU.CityGML.LogCallbacks.LogError*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.LogCallbacks.LogError*
        name: LogError
        nameWithType: LogCallbacks.LogError
        qualifiedName: PLATEAU.CityGML.LogCallbacks.LogError
      VB:
      - id: PLATEAU.CityGML.LogCallbacks.LogError*
        name: LogError
        nameWithType: LogCallbacks.LogError
        qualifiedName: PLATEAU.CityGML.LogCallbacks.LogError
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.LogCallbacks.LogError
  PLATEAU.CityGML.LogCallbacks.LogWarn*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.LogCallbacks.LogWarn*
        name: LogWarn
        nameWithType: LogCallbacks.LogWarn
        qualifiedName: PLATEAU.CityGML.LogCallbacks.LogWarn
      VB:
      - id: PLATEAU.CityGML.LogCallbacks.LogWarn*
        name: LogWarn
        nameWithType: LogCallbacks.LogWarn
        qualifiedName: PLATEAU.CityGML.LogCallbacks.LogWarn
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.LogCallbacks.LogWarn
  PLATEAU.CityGML.LogCallbacks.LogInfo*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.LogCallbacks.LogInfo*
        name: LogInfo
        nameWithType: LogCallbacks.LogInfo
        qualifiedName: PLATEAU.CityGML.LogCallbacks.LogInfo
      VB:
      - id: PLATEAU.CityGML.LogCallbacks.LogInfo*
        name: LogInfo
        nameWithType: LogCallbacks.LogInfo
        qualifiedName: PLATEAU.CityGML.LogCallbacks.LogInfo
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.LogCallbacks.LogInfo
  PLATEAU.CityGML.LogCallbacks.LogErrorFuncPtr*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.LogCallbacks.LogErrorFuncPtr*
        name: LogErrorFuncPtr
        nameWithType: LogCallbacks.LogErrorFuncPtr
        qualifiedName: PLATEAU.CityGML.LogCallbacks.LogErrorFuncPtr
      VB:
      - id: PLATEAU.CityGML.LogCallbacks.LogErrorFuncPtr*
        name: LogErrorFuncPtr
        nameWithType: LogCallbacks.LogErrorFuncPtr
        qualifiedName: PLATEAU.CityGML.LogCallbacks.LogErrorFuncPtr
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.LogCallbacks.LogErrorFuncPtr
  PLATEAU.CityGML.LogCallbacks.LogWarnFuncPtr*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.LogCallbacks.LogWarnFuncPtr*
        name: LogWarnFuncPtr
        nameWithType: LogCallbacks.LogWarnFuncPtr
        qualifiedName: PLATEAU.CityGML.LogCallbacks.LogWarnFuncPtr
      VB:
      - id: PLATEAU.CityGML.LogCallbacks.LogWarnFuncPtr*
        name: LogWarnFuncPtr
        nameWithType: LogCallbacks.LogWarnFuncPtr
        qualifiedName: PLATEAU.CityGML.LogCallbacks.LogWarnFuncPtr
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.LogCallbacks.LogWarnFuncPtr
  PLATEAU.CityGML.LogCallbacks.LogInfoFuncPtr*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.LogCallbacks.LogInfoFuncPtr*
        name: LogInfoFuncPtr
        nameWithType: LogCallbacks.LogInfoFuncPtr
        qualifiedName: PLATEAU.CityGML.LogCallbacks.LogInfoFuncPtr
      VB:
      - id: PLATEAU.CityGML.LogCallbacks.LogInfoFuncPtr*
        name: LogInfoFuncPtr
        nameWithType: LogCallbacks.LogInfoFuncPtr
        qualifiedName: PLATEAU.CityGML.LogCallbacks.LogInfoFuncPtr
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.LogCallbacks.LogInfoFuncPtr
  PLATEAU.CityGML.LogCallbacks.#ctor*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.LogCallbacks.#ctor*
        name: LogCallbacks
        nameWithType: LogCallbacks.LogCallbacks
        qualifiedName: PLATEAU.CityGML.LogCallbacks.LogCallbacks
      VB:
      - id: PLATEAU.CityGML.LogCallbacks.#ctor*
        name: LogCallbacks
        nameWithType: LogCallbacks.LogCallbacks
        qualifiedName: PLATEAU.CityGML.LogCallbacks.LogCallbacks
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.LogCallbacks.#ctor
  PLATEAU.CityGML.DllLogger.#ctor*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.DllLogger.#ctor*
        name: DllLogger
        nameWithType: DllLogger.DllLogger
        qualifiedName: PLATEAU.CityGML.DllLogger.DllLogger
      VB:
      - id: PLATEAU.CityGML.DllLogger.#ctor*
        name: DllLogger
        nameWithType: DllLogger.DllLogger
        qualifiedName: PLATEAU.CityGML.DllLogger.DllLogger
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.DllLogger.#ctor
  PLATEAU.CityGML.DllLogger.SetCallbacksToStdOut*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.DllLogger.SetCallbacksToStdOut*
        name: SetCallbacksToStdOut
        nameWithType: DllLogger.SetCallbacksToStdOut
        qualifiedName: PLATEAU.CityGML.DllLogger.SetCallbacksToStdOut
      VB:
      - id: PLATEAU.CityGML.DllLogger.SetCallbacksToStdOut*
        name: SetCallbacksToStdOut
        nameWithType: DllLogger.SetCallbacksToStdOut
        qualifiedName: PLATEAU.CityGML.DllLogger.SetCallbacksToStdOut
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.DllLogger.SetCallbacksToStdOut
  PLATEAU.CityGML.DllLogger.SetLogCallbacks*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.DllLogger.SetLogCallbacks*
        name: SetLogCallbacks
        nameWithType: DllLogger.SetLogCallbacks
        qualifiedName: PLATEAU.CityGML.DllLogger.SetLogCallbacks
      VB:
      - id: PLATEAU.CityGML.DllLogger.SetLogCallbacks*
        name: SetLogCallbacks
        nameWithType: DllLogger.SetLogCallbacks
        qualifiedName: PLATEAU.CityGML.DllLogger.SetLogCallbacks
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.DllLogger.SetLogCallbacks
  PLATEAU.CityGML.DllLogger.SetLogLevel*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.DllLogger.SetLogLevel*
        name: SetLogLevel
        nameWithType: DllLogger.SetLogLevel
        qualifiedName: PLATEAU.CityGML.DllLogger.SetLogLevel
      VB:
      - id: PLATEAU.CityGML.DllLogger.SetLogLevel*
        name: SetLogLevel
        nameWithType: DllLogger.SetLogLevel
        qualifiedName: PLATEAU.CityGML.DllLogger.SetLogLevel
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.DllLogger.SetLogLevel
  System.Double[]:
    name:
      CSharp:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  PLATEAU.CityGML.FeatureObject.Envelope*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.FeatureObject.Envelope*
        name: Envelope
        nameWithType: FeatureObject.Envelope
        qualifiedName: PLATEAU.CityGML.FeatureObject.Envelope
      VB:
      - id: PLATEAU.CityGML.FeatureObject.Envelope*
        name: Envelope
        nameWithType: FeatureObject.Envelope
        qualifiedName: PLATEAU.CityGML.FeatureObject.Envelope
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.FeatureObject.Envelope
  PLATEAU.CityGML.FeatureObject.SetEnvelope*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.FeatureObject.SetEnvelope*
        name: SetEnvelope
        nameWithType: FeatureObject.SetEnvelope
        qualifiedName: PLATEAU.CityGML.FeatureObject.SetEnvelope
      VB:
      - id: PLATEAU.CityGML.FeatureObject.SetEnvelope*
        name: SetEnvelope
        nameWithType: FeatureObject.SetEnvelope
        qualifiedName: PLATEAU.CityGML.FeatureObject.SetEnvelope
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.FeatureObject.SetEnvelope
  PLATEAU.CityGML.Polygon:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Polygon
        name: Polygon
        nameWithType: Polygon
        qualifiedName: PLATEAU.CityGML.Polygon
      VB:
      - id: PLATEAU.CityGML.Polygon
        name: Polygon
        nameWithType: Polygon
        qualifiedName: PLATEAU.CityGML.Polygon
    isDefinition: true
    parent: PLATEAU.CityGML
    commentId: T:PLATEAU.CityGML.Polygon
  PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitionsCount:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitionsCount
        name: TextureTargetDefinitionsCount
        nameWithType: AppearanceTarget.TextureTargetDefinitionsCount
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitionsCount
      VB:
      - id: PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitionsCount
        name: TextureTargetDefinitionsCount
        nameWithType: AppearanceTarget.TextureTargetDefinitionsCount
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitionsCount
    isDefinition: true
    parent: PLATEAU.CityGML.AppearanceTarget
    commentId: P:PLATEAU.CityGML.AppearanceTarget.TextureTargetDefinitionsCount
  PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition(System.Int32):
    name:
      CSharp:
      - id: PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition(System.Int32)
        name: GetTextureTargetDefinition
        nameWithType: AppearanceTarget.GetTextureTargetDefinition
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition(System.Int32)
        name: GetTextureTargetDefinition
        nameWithType: AppearanceTarget.GetTextureTargetDefinition
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: PLATEAU.CityGML.AppearanceTarget
    commentId: M:PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition(System.Int32)
  PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition(System.String,System.Boolean):
    name:
      CSharp:
      - id: PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition(System.String,System.Boolean)
        name: GetTextureTargetDefinition
        nameWithType: AppearanceTarget.GetTextureTargetDefinition
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition(System.String,System.Boolean)
        name: GetTextureTargetDefinition
        nameWithType: AppearanceTarget.GetTextureTargetDefinition
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: PLATEAU.CityGML.AppearanceTarget
    commentId: M:PLATEAU.CityGML.AppearanceTarget.GetTextureTargetDefinition(System.String,System.Boolean)
  PLATEAU.CityGML.AppearanceTarget.TextureThemesCountOfFront(System.Boolean):
    name:
      CSharp:
      - id: PLATEAU.CityGML.AppearanceTarget.TextureThemesCountOfFront(System.Boolean)
        name: TextureThemesCountOfFront
        nameWithType: AppearanceTarget.TextureThemesCountOfFront
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.TextureThemesCountOfFront
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: PLATEAU.CityGML.AppearanceTarget.TextureThemesCountOfFront(System.Boolean)
        name: TextureThemesCountOfFront
        nameWithType: AppearanceTarget.TextureThemesCountOfFront
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.TextureThemesCountOfFront
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: PLATEAU.CityGML.AppearanceTarget
    commentId: M:PLATEAU.CityGML.AppearanceTarget.TextureThemesCountOfFront(System.Boolean)
  PLATEAU.CityGML.AppearanceTarget.TextureThemeNames(System.Boolean):
    name:
      CSharp:
      - id: PLATEAU.CityGML.AppearanceTarget.TextureThemeNames(System.Boolean)
        name: TextureThemeNames
        nameWithType: AppearanceTarget.TextureThemeNames
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.TextureThemeNames
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: PLATEAU.CityGML.AppearanceTarget.TextureThemeNames(System.Boolean)
        name: TextureThemeNames
        nameWithType: AppearanceTarget.TextureThemeNames
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.TextureThemeNames
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: PLATEAU.CityGML.AppearanceTarget
    commentId: M:PLATEAU.CityGML.AppearanceTarget.TextureThemeNames(System.Boolean)
  PLATEAU.CityGML.AppearanceTarget.MaterialThemesCountByFront(System.Boolean):
    name:
      CSharp:
      - id: PLATEAU.CityGML.AppearanceTarget.MaterialThemesCountByFront(System.Boolean)
        name: MaterialThemesCountByFront
        nameWithType: AppearanceTarget.MaterialThemesCountByFront
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.MaterialThemesCountByFront
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: PLATEAU.CityGML.AppearanceTarget.MaterialThemesCountByFront(System.Boolean)
        name: MaterialThemesCountByFront
        nameWithType: AppearanceTarget.MaterialThemesCountByFront
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.MaterialThemesCountByFront
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: PLATEAU.CityGML.AppearanceTarget
    commentId: M:PLATEAU.CityGML.AppearanceTarget.MaterialThemesCountByFront(System.Boolean)
  PLATEAU.CityGML.AppearanceTarget.MaterialThemeNames(System.Boolean):
    name:
      CSharp:
      - id: PLATEAU.CityGML.AppearanceTarget.MaterialThemeNames(System.Boolean)
        name: MaterialThemeNames
        nameWithType: AppearanceTarget.MaterialThemeNames
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.MaterialThemeNames
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: PLATEAU.CityGML.AppearanceTarget.MaterialThemeNames(System.Boolean)
        name: MaterialThemeNames
        nameWithType: AppearanceTarget.MaterialThemeNames
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.MaterialThemeNames
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: PLATEAU.CityGML.AppearanceTarget
    commentId: M:PLATEAU.CityGML.AppearanceTarget.MaterialThemeNames(System.Boolean)
  PLATEAU.CityGML.AppearanceTarget.GetMaterialTargetDefinitionByThemeName(System.String,System.Boolean):
    name:
      CSharp:
      - id: PLATEAU.CityGML.AppearanceTarget.GetMaterialTargetDefinitionByThemeName(System.String,System.Boolean)
        name: GetMaterialTargetDefinitionByThemeName
        nameWithType: AppearanceTarget.GetMaterialTargetDefinitionByThemeName
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.GetMaterialTargetDefinitionByThemeName
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: PLATEAU.CityGML.AppearanceTarget.GetMaterialTargetDefinitionByThemeName(System.String,System.Boolean)
        name: GetMaterialTargetDefinitionByThemeName
        nameWithType: AppearanceTarget.GetMaterialTargetDefinitionByThemeName
        qualifiedName: PLATEAU.CityGML.AppearanceTarget.GetMaterialTargetDefinitionByThemeName
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: PLATEAU.CityGML.AppearanceTarget
    commentId: M:PLATEAU.CityGML.AppearanceTarget.GetMaterialTargetDefinitionByThemeName(System.String,System.Boolean)
  PLATEAU.CityGML.Geometry.#ctor*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Geometry.#ctor*
        name: Geometry
        nameWithType: Geometry.Geometry
        qualifiedName: PLATEAU.CityGML.Geometry.Geometry
      VB:
      - id: PLATEAU.CityGML.Geometry.#ctor*
        name: Geometry
        nameWithType: Geometry.Geometry
        qualifiedName: PLATEAU.CityGML.Geometry.Geometry
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Geometry.#ctor
  PLATEAU.CityGML.GeometryType:
    name:
      CSharp:
      - id: PLATEAU.CityGML.GeometryType
        name: GeometryType
        nameWithType: GeometryType
        qualifiedName: PLATEAU.CityGML.GeometryType
      VB:
      - id: PLATEAU.CityGML.GeometryType
        name: GeometryType
        nameWithType: GeometryType
        qualifiedName: PLATEAU.CityGML.GeometryType
    isDefinition: true
    parent: PLATEAU.CityGML
    commentId: T:PLATEAU.CityGML.GeometryType
  PLATEAU.CityGML.Geometry.Type*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Geometry.Type*
        name: Type
        nameWithType: Geometry.Type
        qualifiedName: PLATEAU.CityGML.Geometry.Type
      VB:
      - id: PLATEAU.CityGML.Geometry.Type*
        name: Type
        nameWithType: Geometry.Type
        qualifiedName: PLATEAU.CityGML.Geometry.Type
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Geometry.Type
  PLATEAU.CityGML.Geometry.ChildGeometryCount*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Geometry.ChildGeometryCount*
        name: ChildGeometryCount
        nameWithType: Geometry.ChildGeometryCount
        qualifiedName: PLATEAU.CityGML.Geometry.ChildGeometryCount
      VB:
      - id: PLATEAU.CityGML.Geometry.ChildGeometryCount*
        name: ChildGeometryCount
        nameWithType: Geometry.ChildGeometryCount
        qualifiedName: PLATEAU.CityGML.Geometry.ChildGeometryCount
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Geometry.ChildGeometryCount
  PLATEAU.CityGML.Geometry.GetChildGeometry*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Geometry.GetChildGeometry*
        name: GetChildGeometry
        nameWithType: Geometry.GetChildGeometry
        qualifiedName: PLATEAU.CityGML.Geometry.GetChildGeometry
      VB:
      - id: PLATEAU.CityGML.Geometry.GetChildGeometry*
        name: GetChildGeometry
        nameWithType: Geometry.GetChildGeometry
        qualifiedName: PLATEAU.CityGML.Geometry.GetChildGeometry
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Geometry.GetChildGeometry
  PLATEAU.CityGML.Geometry.ChildGeometries*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Geometry.ChildGeometries*
        name: ChildGeometries
        nameWithType: Geometry.ChildGeometries
        qualifiedName: PLATEAU.CityGML.Geometry.ChildGeometries
      VB:
      - id: PLATEAU.CityGML.Geometry.ChildGeometries*
        name: ChildGeometries
        nameWithType: Geometry.ChildGeometries
        qualifiedName: PLATEAU.CityGML.Geometry.ChildGeometries
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Geometry.ChildGeometries
  PLATEAU.CityGML.Geometry.GeometryDescendantsDFS*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Geometry.GeometryDescendantsDFS*
        name: GeometryDescendantsDFS
        nameWithType: Geometry.GeometryDescendantsDFS
        qualifiedName: PLATEAU.CityGML.Geometry.GeometryDescendantsDFS
      VB:
      - id: PLATEAU.CityGML.Geometry.GeometryDescendantsDFS*
        name: GeometryDescendantsDFS
        nameWithType: Geometry.GeometryDescendantsDFS
        qualifiedName: PLATEAU.CityGML.Geometry.GeometryDescendantsDFS
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Geometry.GeometryDescendantsDFS
  PLATEAU.CityGML.Geometry.PolygonCount*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Geometry.PolygonCount*
        name: PolygonCount
        nameWithType: Geometry.PolygonCount
        qualifiedName: PLATEAU.CityGML.Geometry.PolygonCount
      VB:
      - id: PLATEAU.CityGML.Geometry.PolygonCount*
        name: PolygonCount
        nameWithType: Geometry.PolygonCount
        qualifiedName: PLATEAU.CityGML.Geometry.PolygonCount
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Geometry.PolygonCount
  PLATEAU.CityGML.Geometry.GetPolygon*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Geometry.GetPolygon*
        name: GetPolygon
        nameWithType: Geometry.GetPolygon
        qualifiedName: PLATEAU.CityGML.Geometry.GetPolygon
      VB:
      - id: PLATEAU.CityGML.Geometry.GetPolygon*
        name: GetPolygon
        nameWithType: Geometry.GetPolygon
        qualifiedName: PLATEAU.CityGML.Geometry.GetPolygon
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Geometry.GetPolygon
  PLATEAU.IEnumerable{PLATEAU.CityGML.Polygon}:
    name:
      CSharp:
      - id: PLATEAU.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: PLATEAU.CityGML.Polygon
        name: Polygon
        nameWithType: Polygon
        qualifiedName: PLATEAU.CityGML.Polygon
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: PLATEAU.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: PLATEAU.CityGML.Polygon
        name: Polygon
        nameWithType: Polygon
        qualifiedName: PLATEAU.CityGML.Polygon
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: PLATEAU.IEnumerable`1
    commentId: '!:PLATEAU.IEnumerable{PLATEAU.CityGML.Polygon}'
  PLATEAU.CityGML.Geometry.Polygons*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Geometry.Polygons*
        name: Polygons
        nameWithType: Geometry.Polygons
        qualifiedName: PLATEAU.CityGML.Geometry.Polygons
      VB:
      - id: PLATEAU.CityGML.Geometry.Polygons*
        name: Polygons
        nameWithType: Geometry.Polygons
        qualifiedName: PLATEAU.CityGML.Geometry.Polygons
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Geometry.Polygons
  PLATEAU.CityGML.Geometry.LOD*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Geometry.LOD*
        name: LOD
        nameWithType: Geometry.LOD
        qualifiedName: PLATEAU.CityGML.Geometry.LOD
      VB:
      - id: PLATEAU.CityGML.Geometry.LOD*
        name: LOD
        nameWithType: Geometry.LOD
        qualifiedName: PLATEAU.CityGML.Geometry.LOD
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Geometry.LOD
  PLATEAU.CityGML.Geometry.ToString*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Geometry.ToString*
        name: ToString
        nameWithType: Geometry.ToString
        qualifiedName: PLATEAU.CityGML.Geometry.ToString
      VB:
      - id: PLATEAU.CityGML.Geometry.ToString*
        name: ToString
        nameWithType: Geometry.ToString
        qualifiedName: PLATEAU.CityGML.Geometry.ToString
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Geometry.ToString
  PLATEAU.CityGML.Geometry.LineStringCount*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Geometry.LineStringCount*
        name: LineStringCount
        nameWithType: Geometry.LineStringCount
        qualifiedName: PLATEAU.CityGML.Geometry.LineStringCount
      VB:
      - id: PLATEAU.CityGML.Geometry.LineStringCount*
        name: LineStringCount
        nameWithType: Geometry.LineStringCount
        qualifiedName: PLATEAU.CityGML.Geometry.LineStringCount
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Geometry.LineStringCount
  PLATEAU.CityGML.Geometry.SRSName*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Geometry.SRSName*
        name: SRSName
        nameWithType: Geometry.SRSName
        qualifiedName: PLATEAU.CityGML.Geometry.SRSName
      VB:
      - id: PLATEAU.CityGML.Geometry.SRSName*
        name: SRSName
        nameWithType: Geometry.SRSName
        qualifiedName: PLATEAU.CityGML.Geometry.SRSName
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Geometry.SRSName
  PLATEAU.CityGML.LinearRing:
    name:
      CSharp:
      - id: PLATEAU.CityGML.LinearRing
        name: LinearRing
        nameWithType: LinearRing
        qualifiedName: PLATEAU.CityGML.LinearRing
      VB:
      - id: PLATEAU.CityGML.LinearRing
        name: LinearRing
        nameWithType: LinearRing
        qualifiedName: PLATEAU.CityGML.LinearRing
    isDefinition: true
    parent: PLATEAU.CityGML
    commentId: T:PLATEAU.CityGML.LinearRing
  PLATEAU.CityGML.LinearRing.VertexCount*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.LinearRing.VertexCount*
        name: VertexCount
        nameWithType: LinearRing.VertexCount
        qualifiedName: PLATEAU.CityGML.LinearRing.VertexCount
      VB:
      - id: PLATEAU.CityGML.LinearRing.VertexCount*
        name: VertexCount
        nameWithType: LinearRing.VertexCount
        qualifiedName: PLATEAU.CityGML.LinearRing.VertexCount
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.LinearRing.VertexCount
  PLATEAU.CityGML.PlateauVector3d:
    name:
      CSharp:
      - id: PLATEAU.CityGML.PlateauVector3d
        name: PlateauVector3d
        nameWithType: PlateauVector3d
        qualifiedName: PLATEAU.CityGML.PlateauVector3d
      VB:
      - id: PLATEAU.CityGML.PlateauVector3d
        name: PlateauVector3d
        nameWithType: PlateauVector3d
        qualifiedName: PLATEAU.CityGML.PlateauVector3d
    isDefinition: true
    parent: PLATEAU.CityGML
    commentId: T:PLATEAU.CityGML.PlateauVector3d
  PLATEAU.CityGML.LinearRing.GetVertex*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.LinearRing.GetVertex*
        name: GetVertex
        nameWithType: LinearRing.GetVertex
        qualifiedName: PLATEAU.CityGML.LinearRing.GetVertex
      VB:
      - id: PLATEAU.CityGML.LinearRing.GetVertex*
        name: GetVertex
        nameWithType: LinearRing.GetVertex
        qualifiedName: PLATEAU.CityGML.LinearRing.GetVertex
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.LinearRing.GetVertex
  PLATEAU.CityGML.Appearance.Type:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Appearance.Type
        name: Type
        nameWithType: Appearance.Type
        qualifiedName: PLATEAU.CityGML.Appearance.Type
      VB:
      - id: PLATEAU.CityGML.Appearance.Type
        name: Type
        nameWithType: Appearance.Type
        qualifiedName: PLATEAU.CityGML.Appearance.Type
    isDefinition: true
    parent: PLATEAU.CityGML.Appearance
    commentId: P:PLATEAU.CityGML.Appearance.Type
  PLATEAU.CityGML.Appearance.IsFront:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Appearance.IsFront
        name: IsFront
        nameWithType: Appearance.IsFront
        qualifiedName: PLATEAU.CityGML.Appearance.IsFront
      VB:
      - id: PLATEAU.CityGML.Appearance.IsFront
        name: IsFront
        nameWithType: Appearance.IsFront
        qualifiedName: PLATEAU.CityGML.Appearance.IsFront
    isDefinition: true
    parent: PLATEAU.CityGML.Appearance
    commentId: P:PLATEAU.CityGML.Appearance.IsFront
  PLATEAU.CityGML.Appearance.Themes:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Appearance.Themes
        name: Themes
        nameWithType: Appearance.Themes
        qualifiedName: PLATEAU.CityGML.Appearance.Themes
      VB:
      - id: PLATEAU.CityGML.Appearance.Themes
        name: Themes
        nameWithType: Appearance.Themes
        qualifiedName: PLATEAU.CityGML.Appearance.Themes
    isDefinition: true
    parent: PLATEAU.CityGML.Appearance
    commentId: P:PLATEAU.CityGML.Appearance.Themes
  PLATEAU.CityGML.AppearanceTargetDefinition{PLATEAU.CityGML.Material}:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AppearanceTargetDefinition`1
        name: AppearanceTargetDefinition
        nameWithType: AppearanceTargetDefinition
        qualifiedName: PLATEAU.CityGML.AppearanceTargetDefinition
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: PLATEAU.CityGML.Material
        name: Material
        nameWithType: Material
        qualifiedName: PLATEAU.CityGML.Material
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: PLATEAU.CityGML.AppearanceTargetDefinition`1
        name: AppearanceTargetDefinition
        nameWithType: AppearanceTargetDefinition
        qualifiedName: PLATEAU.CityGML.AppearanceTargetDefinition
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: PLATEAU.CityGML.Material
        name: Material
        nameWithType: Material
        qualifiedName: PLATEAU.CityGML.Material
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: PLATEAU.CityGML.AppearanceTargetDefinition`1
    parent: PLATEAU.CityGML
    commentId: T:PLATEAU.CityGML.AppearanceTargetDefinition{PLATEAU.CityGML.Material}
  PLATEAU.CityGML.AppearanceTargetDefinition{PLATEAU.CityGML.Material}.Appearance:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AppearanceTargetDefinition`1.Appearance
        name: Appearance
        nameWithType: AppearanceTargetDefinition<Material>.Appearance
        qualifiedName: PLATEAU.CityGML.AppearanceTargetDefinition<PLATEAU.CityGML.Material>.Appearance
      VB:
      - id: PLATEAU.CityGML.AppearanceTargetDefinition`1.Appearance
        name: Appearance
        nameWithType: AppearanceTargetDefinition(Of Material).Appearance
        qualifiedName: PLATEAU.CityGML.AppearanceTargetDefinition(Of PLATEAU.CityGML.Material).Appearance
    isDefinition: false
    definition: PLATEAU.CityGML.AppearanceTargetDefinition`1.Appearance
    parent: PLATEAU.CityGML.AppearanceTargetDefinition{PLATEAU.CityGML.Material}
    commentId: P:PLATEAU.CityGML.AppearanceTargetDefinition{PLATEAU.CityGML.Material}.Appearance
  PLATEAU.CityGML.AppearanceTargetDefinition{PLATEAU.CityGML.Material}.TargetID:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AppearanceTargetDefinition`1.TargetID
        name: TargetID
        nameWithType: AppearanceTargetDefinition<Material>.TargetID
        qualifiedName: PLATEAU.CityGML.AppearanceTargetDefinition<PLATEAU.CityGML.Material>.TargetID
      VB:
      - id: PLATEAU.CityGML.AppearanceTargetDefinition`1.TargetID
        name: TargetID
        nameWithType: AppearanceTargetDefinition(Of Material).TargetID
        qualifiedName: PLATEAU.CityGML.AppearanceTargetDefinition(Of PLATEAU.CityGML.Material).TargetID
    isDefinition: false
    definition: PLATEAU.CityGML.AppearanceTargetDefinition`1.TargetID
    parent: PLATEAU.CityGML.AppearanceTargetDefinition{PLATEAU.CityGML.Material}
    commentId: P:PLATEAU.CityGML.AppearanceTargetDefinition{PLATEAU.CityGML.Material}.TargetID
  System.ValueType:
    name:
      CSharp:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
      VB:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ValueType
  System.ValueType.Equals(System.Object):
    name:
      CSharp:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.Equals(System.Object)
  System.ValueType.GetHashCode:
    name:
      CSharp:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.GetHashCode
  PLATEAU.CityGML.PlateauVector3d.#ctor*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.PlateauVector3d.#ctor*
        name: PlateauVector3d
        nameWithType: PlateauVector3d.PlateauVector3d
        qualifiedName: PLATEAU.CityGML.PlateauVector3d.PlateauVector3d
      VB:
      - id: PLATEAU.CityGML.PlateauVector3d.#ctor*
        name: PlateauVector3d
        nameWithType: PlateauVector3d.PlateauVector3d
        qualifiedName: PLATEAU.CityGML.PlateauVector3d.PlateauVector3d
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.PlateauVector3d.#ctor
  System.ValueType.ToString:
    name:
      CSharp:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.ToString
  PLATEAU.CityGML.PlateauVector3d.ToString*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.PlateauVector3d.ToString*
        name: ToString
        nameWithType: PlateauVector3d.ToString
        qualifiedName: PLATEAU.CityGML.PlateauVector3d.ToString
      VB:
      - id: PLATEAU.CityGML.PlateauVector3d.ToString*
        name: ToString
        nameWithType: PlateauVector3d.ToString
        qualifiedName: PLATEAU.CityGML.PlateauVector3d.ToString
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.PlateauVector3d.ToString
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  PLATEAU.CityGML.PlateauVector2f.#ctor*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.PlateauVector2f.#ctor*
        name: PlateauVector2f
        nameWithType: PlateauVector2f.PlateauVector2f
        qualifiedName: PLATEAU.CityGML.PlateauVector2f.PlateauVector2f
      VB:
      - id: PLATEAU.CityGML.PlateauVector2f.#ctor*
        name: PlateauVector2f
        nameWithType: PlateauVector2f.PlateauVector2f
        qualifiedName: PLATEAU.CityGML.PlateauVector2f.PlateauVector2f
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.PlateauVector2f.#ctor
  PLATEAU.CityGML.PlateauVector2f.ToString*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.PlateauVector2f.ToString*
        name: ToString
        nameWithType: PlateauVector2f.ToString
        qualifiedName: PLATEAU.CityGML.PlateauVector2f.ToString
      VB:
      - id: PLATEAU.CityGML.PlateauVector2f.ToString*
        name: ToString
        nameWithType: PlateauVector2f.ToString
        qualifiedName: PLATEAU.CityGML.PlateauVector2f.ToString
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.PlateauVector2f.ToString
  PLATEAU.CityGML.PlateauVector2f:
    name:
      CSharp:
      - id: PLATEAU.CityGML.PlateauVector2f
        name: PlateauVector2f
        nameWithType: PlateauVector2f
        qualifiedName: PLATEAU.CityGML.PlateauVector2f
      VB:
      - id: PLATEAU.CityGML.PlateauVector2f
        name: PlateauVector2f
        nameWithType: PlateauVector2f
        qualifiedName: PLATEAU.CityGML.PlateauVector2f
    isDefinition: true
    parent: PLATEAU.CityGML
    commentId: T:PLATEAU.CityGML.PlateauVector2f
  PLATEAU.CityGML.CitygmlParserParams.Tessellate:
    commentId: F:PLATEAU.CityGML.CitygmlParserParams.Tessellate
  PLATEAU.CityGML.CitygmlParserParams.#ctor*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.CitygmlParserParams.#ctor*
        name: CitygmlParserParams
        nameWithType: CitygmlParserParams.CitygmlParserParams
        qualifiedName: PLATEAU.CityGML.CitygmlParserParams.CitygmlParserParams
      VB:
      - id: PLATEAU.CityGML.CitygmlParserParams.#ctor*
        name: CitygmlParserParams
        nameWithType: CitygmlParserParams.CitygmlParserParams
        qualifiedName: PLATEAU.CityGML.CitygmlParserParams.CitygmlParserParams
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.CitygmlParserParams.#ctor
  PLATEAU.CityGML.AxesConversion:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AxesConversion
        name: AxesConversion
        nameWithType: AxesConversion
        qualifiedName: PLATEAU.CityGML.AxesConversion
      VB:
      - id: PLATEAU.CityGML.AxesConversion
        name: AxesConversion
        nameWithType: AxesConversion
        qualifiedName: PLATEAU.CityGML.AxesConversion
    isDefinition: true
    parent: PLATEAU.CityGML
    commentId: T:PLATEAU.CityGML.AxesConversion
  PLATEAU.CityGML.MeshGranularity:
    name:
      CSharp:
      - id: PLATEAU.CityGML.MeshGranularity
        name: MeshGranularity
        nameWithType: MeshGranularity
        qualifiedName: PLATEAU.CityGML.MeshGranularity
      VB:
      - id: PLATEAU.CityGML.MeshGranularity
        name: MeshGranularity
        nameWithType: MeshGranularity
        qualifiedName: PLATEAU.CityGML.MeshGranularity
    isDefinition: true
    parent: PLATEAU.CityGML
    commentId: T:PLATEAU.CityGML.MeshGranularity
  PLATEAU.CityGML.APIResult:
    name:
      CSharp:
      - id: PLATEAU.CityGML.APIResult
        name: APIResult
        nameWithType: APIResult
        qualifiedName: PLATEAU.CityGML.APIResult
      VB:
      - id: PLATEAU.CityGML.APIResult
        name: APIResult
        nameWithType: APIResult
        qualifiedName: PLATEAU.CityGML.APIResult
    isDefinition: true
    parent: PLATEAU.CityGML
    commentId: T:PLATEAU.CityGML.APIResult
  PLATEAU.CityGML.TextureWrapMode:
    name:
      CSharp:
      - id: PLATEAU.CityGML.TextureWrapMode
        name: TextureWrapMode
        nameWithType: TextureWrapMode
        qualifiedName: PLATEAU.CityGML.TextureWrapMode
      VB:
      - id: PLATEAU.CityGML.TextureWrapMode
        name: TextureWrapMode
        nameWithType: TextureWrapMode
        qualifiedName: PLATEAU.CityGML.TextureWrapMode
    isDefinition: true
    parent: PLATEAU.CityGML
    commentId: T:PLATEAU.CityGML.TextureWrapMode
  PLATEAU.CityGML.Object.Handle*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Object.Handle*
        name: Handle
        nameWithType: Object.Handle
        qualifiedName: PLATEAU.CityGML.Object.Handle
      VB:
      - id: PLATEAU.CityGML.Object.Handle*
        name: Handle
        nameWithType: Object.Handle
        qualifiedName: PLATEAU.CityGML.Object.Handle
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Object.Handle
  PLATEAU.CityGML.Object.ID*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Object.ID*
        name: ID
        nameWithType: Object.ID
        qualifiedName: PLATEAU.CityGML.Object.ID
      VB:
      - id: PLATEAU.CityGML.Object.ID*
        name: ID
        nameWithType: Object.ID
        qualifiedName: PLATEAU.CityGML.Object.ID
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Object.ID
  PLATEAU.CityGML.Object.AttributesMap*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Object.AttributesMap*
        name: AttributesMap
        nameWithType: Object.AttributesMap
        qualifiedName: PLATEAU.CityGML.Object.AttributesMap
      VB:
      - id: PLATEAU.CityGML.Object.AttributesMap*
        name: AttributesMap
        nameWithType: Object.AttributesMap
        qualifiedName: PLATEAU.CityGML.Object.AttributesMap
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Object.AttributesMap
  PLATEAU.CityGML.Polygon.ExteriorRing:
    commentId: P:PLATEAU.CityGML.Polygon.ExteriorRing
  PLATEAU.CityGML.Polygon.InteriorRings:
    commentId: P:PLATEAU.CityGML.Polygon.InteriorRings
  PLATEAU.CityGML.Polygon.DoHaveVertices*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Polygon.DoHaveVertices*
        name: DoHaveVertices
        nameWithType: Polygon.DoHaveVertices
        qualifiedName: PLATEAU.CityGML.Polygon.DoHaveVertices
      VB:
      - id: PLATEAU.CityGML.Polygon.DoHaveVertices*
        name: DoHaveVertices
        nameWithType: Polygon.DoHaveVertices
        qualifiedName: PLATEAU.CityGML.Polygon.DoHaveVertices
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Polygon.DoHaveVertices
  PLATEAU.CityGML.Polygon.DoHaveRings*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Polygon.DoHaveRings*
        name: DoHaveRings
        nameWithType: Polygon.DoHaveRings
        qualifiedName: PLATEAU.CityGML.Polygon.DoHaveRings
      VB:
      - id: PLATEAU.CityGML.Polygon.DoHaveRings*
        name: DoHaveRings
        nameWithType: Polygon.DoHaveRings
        qualifiedName: PLATEAU.CityGML.Polygon.DoHaveRings
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Polygon.DoHaveRings
  PLATEAU.CityGML.Polygon.VertexCount*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Polygon.VertexCount*
        name: VertexCount
        nameWithType: Polygon.VertexCount
        qualifiedName: PLATEAU.CityGML.Polygon.VertexCount
      VB:
      - id: PLATEAU.CityGML.Polygon.VertexCount*
        name: VertexCount
        nameWithType: Polygon.VertexCount
        qualifiedName: PLATEAU.CityGML.Polygon.VertexCount
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Polygon.VertexCount
  PLATEAU.CityGML.Polygon.GetVertex*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Polygon.GetVertex*
        name: GetVertex
        nameWithType: Polygon.GetVertex
        qualifiedName: PLATEAU.CityGML.Polygon.GetVertex
      VB:
      - id: PLATEAU.CityGML.Polygon.GetVertex*
        name: GetVertex
        nameWithType: Polygon.GetVertex
        qualifiedName: PLATEAU.CityGML.Polygon.GetVertex
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Polygon.GetVertex
  PLATEAU.CityGML.Polygon.IndicesCount*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Polygon.IndicesCount*
        name: IndicesCount
        nameWithType: Polygon.IndicesCount
        qualifiedName: PLATEAU.CityGML.Polygon.IndicesCount
      VB:
      - id: PLATEAU.CityGML.Polygon.IndicesCount*
        name: IndicesCount
        nameWithType: Polygon.IndicesCount
        qualifiedName: PLATEAU.CityGML.Polygon.IndicesCount
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Polygon.IndicesCount
  PLATEAU.CityGML.Polygon.GetIndexOfIndices*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Polygon.GetIndexOfIndices*
        name: GetIndexOfIndices
        nameWithType: Polygon.GetIndexOfIndices
        qualifiedName: PLATEAU.CityGML.Polygon.GetIndexOfIndices
      VB:
      - id: PLATEAU.CityGML.Polygon.GetIndexOfIndices*
        name: GetIndexOfIndices
        nameWithType: Polygon.GetIndexOfIndices
        qualifiedName: PLATEAU.CityGML.Polygon.GetIndexOfIndices
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Polygon.GetIndexOfIndices
  PLATEAU.IEnumerable{System.Int32}:
    name:
      CSharp:
      - id: PLATEAU.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: PLATEAU.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: PLATEAU.IEnumerable`1
    commentId: '!:PLATEAU.IEnumerable{System.Int32}'
  PLATEAU.CityGML.Polygon.Indices*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Polygon.Indices*
        name: Indices
        nameWithType: Polygon.Indices
        qualifiedName: PLATEAU.CityGML.Polygon.Indices
      VB:
      - id: PLATEAU.CityGML.Polygon.Indices*
        name: Indices
        nameWithType: Polygon.Indices
        qualifiedName: PLATEAU.CityGML.Polygon.Indices
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Polygon.Indices
  PLATEAU.CityGML.Polygon.ExteriorRing*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Polygon.ExteriorRing*
        name: ExteriorRing
        nameWithType: Polygon.ExteriorRing
        qualifiedName: PLATEAU.CityGML.Polygon.ExteriorRing
      VB:
      - id: PLATEAU.CityGML.Polygon.ExteriorRing*
        name: ExteriorRing
        nameWithType: Polygon.ExteriorRing
        qualifiedName: PLATEAU.CityGML.Polygon.ExteriorRing
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Polygon.ExteriorRing
  PLATEAU.CityGML.Polygon.InteriorRingCount*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Polygon.InteriorRingCount*
        name: InteriorRingCount
        nameWithType: Polygon.InteriorRingCount
        qualifiedName: PLATEAU.CityGML.Polygon.InteriorRingCount
      VB:
      - id: PLATEAU.CityGML.Polygon.InteriorRingCount*
        name: InteriorRingCount
        nameWithType: Polygon.InteriorRingCount
        qualifiedName: PLATEAU.CityGML.Polygon.InteriorRingCount
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Polygon.InteriorRingCount
  PLATEAU.CityGML.Polygon.GetInteriorRing*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Polygon.GetInteriorRing*
        name: GetInteriorRing
        nameWithType: Polygon.GetInteriorRing
        qualifiedName: PLATEAU.CityGML.Polygon.GetInteriorRing
      VB:
      - id: PLATEAU.CityGML.Polygon.GetInteriorRing*
        name: GetInteriorRing
        nameWithType: Polygon.GetInteriorRing
        qualifiedName: PLATEAU.CityGML.Polygon.GetInteriorRing
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Polygon.GetInteriorRing
  PLATEAU.IEnumerable{PLATEAU.CityGML.LinearRing}:
    name:
      CSharp:
      - id: PLATEAU.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: PLATEAU.CityGML.LinearRing
        name: LinearRing
        nameWithType: LinearRing
        qualifiedName: PLATEAU.CityGML.LinearRing
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: PLATEAU.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: PLATEAU.CityGML.LinearRing
        name: LinearRing
        nameWithType: LinearRing
        qualifiedName: PLATEAU.CityGML.LinearRing
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: PLATEAU.IEnumerable`1
    commentId: '!:PLATEAU.IEnumerable{PLATEAU.CityGML.LinearRing}'
  PLATEAU.CityGML.Polygon.InteriorRings*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Polygon.InteriorRings*
        name: InteriorRings
        nameWithType: Polygon.InteriorRings
        qualifiedName: PLATEAU.CityGML.Polygon.InteriorRings
      VB:
      - id: PLATEAU.CityGML.Polygon.InteriorRings*
        name: InteriorRings
        nameWithType: Polygon.InteriorRings
        qualifiedName: PLATEAU.CityGML.Polygon.InteriorRings
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Polygon.InteriorRings
  PLATEAU.CityGML.Texture.Url:
    commentId: P:PLATEAU.CityGML.Texture.Url
  PLATEAU.CityGML.Texture.Url*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Texture.Url*
        name: Url
        nameWithType: Texture.Url
        qualifiedName: PLATEAU.CityGML.Texture.Url
      VB:
      - id: PLATEAU.CityGML.Texture.Url*
        name: Url
        nameWithType: Texture.Url
        qualifiedName: PLATEAU.CityGML.Texture.Url
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Texture.Url
  PLATEAU.CityGML.Texture.WrapMode*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.Texture.WrapMode*
        name: WrapMode
        nameWithType: Texture.WrapMode
        qualifiedName: PLATEAU.CityGML.Texture.WrapMode
      VB:
      - id: PLATEAU.CityGML.Texture.WrapMode*
        name: WrapMode
        nameWithType: Texture.WrapMode
        qualifiedName: PLATEAU.CityGML.Texture.WrapMode
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.Texture.WrapMode
  PLATEAU.CityGML.TextureCoordinates.Vec2CoordsCount*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.TextureCoordinates.Vec2CoordsCount*
        name: Vec2CoordsCount
        nameWithType: TextureCoordinates.Vec2CoordsCount
        qualifiedName: PLATEAU.CityGML.TextureCoordinates.Vec2CoordsCount
      VB:
      - id: PLATEAU.CityGML.TextureCoordinates.Vec2CoordsCount*
        name: Vec2CoordsCount
        nameWithType: TextureCoordinates.Vec2CoordsCount
        qualifiedName: PLATEAU.CityGML.TextureCoordinates.Vec2CoordsCount
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.TextureCoordinates.Vec2CoordsCount
  PLATEAU.CityGML.TextureCoordinates.GetVec2Coord*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.TextureCoordinates.GetVec2Coord*
        name: GetVec2Coord
        nameWithType: TextureCoordinates.GetVec2Coord
        qualifiedName: PLATEAU.CityGML.TextureCoordinates.GetVec2Coord
      VB:
      - id: PLATEAU.CityGML.TextureCoordinates.GetVec2Coord*
        name: GetVec2Coord
        nameWithType: TextureCoordinates.GetVec2Coord
        qualifiedName: PLATEAU.CityGML.TextureCoordinates.GetVec2Coord
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.TextureCoordinates.GetVec2Coord
  PLATEAU.CityGML.TextureCoordinates.TargetLinearRingId*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.TextureCoordinates.TargetLinearRingId*
        name: TargetLinearRingId
        nameWithType: TextureCoordinates.TargetLinearRingId
        qualifiedName: PLATEAU.CityGML.TextureCoordinates.TargetLinearRingId
      VB:
      - id: PLATEAU.CityGML.TextureCoordinates.TargetLinearRingId*
        name: TargetLinearRingId
        nameWithType: TextureCoordinates.TargetLinearRingId
        qualifiedName: PLATEAU.CityGML.TextureCoordinates.TargetLinearRingId
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.TextureCoordinates.TargetLinearRingId
  PLATEAU.CityGML.TextureCoordinates.IsRingTarget*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.TextureCoordinates.IsRingTarget*
        name: IsRingTarget
        nameWithType: TextureCoordinates.IsRingTarget
        qualifiedName: PLATEAU.CityGML.TextureCoordinates.IsRingTarget
      VB:
      - id: PLATEAU.CityGML.TextureCoordinates.IsRingTarget*
        name: IsRingTarget
        nameWithType: TextureCoordinates.IsRingTarget
        qualifiedName: PLATEAU.CityGML.TextureCoordinates.IsRingTarget
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.TextureCoordinates.IsRingTarget
  PLATEAU.CityGML.TextureCoordinates:
    name:
      CSharp:
      - id: PLATEAU.CityGML.TextureCoordinates
        name: TextureCoordinates
        nameWithType: TextureCoordinates
        qualifiedName: PLATEAU.CityGML.TextureCoordinates
      VB:
      - id: PLATEAU.CityGML.TextureCoordinates
        name: TextureCoordinates
        nameWithType: TextureCoordinates
        qualifiedName: PLATEAU.CityGML.TextureCoordinates
    isDefinition: true
    parent: PLATEAU.CityGML
    commentId: T:PLATEAU.CityGML.TextureCoordinates
  PLATEAU.CityGML.TextureTargetDefinition.GetCoordinate(System.Int32):
    commentId: M:PLATEAU.CityGML.TextureTargetDefinition.GetCoordinate(System.Int32)
  PLATEAU.CityGML.AppearanceTargetDefinition{PLATEAU.CityGML.Texture}:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AppearanceTargetDefinition`1
        name: AppearanceTargetDefinition
        nameWithType: AppearanceTargetDefinition
        qualifiedName: PLATEAU.CityGML.AppearanceTargetDefinition
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: PLATEAU.CityGML.Texture
        name: Texture
        nameWithType: Texture
        qualifiedName: PLATEAU.CityGML.Texture
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: PLATEAU.CityGML.AppearanceTargetDefinition`1
        name: AppearanceTargetDefinition
        nameWithType: AppearanceTargetDefinition
        qualifiedName: PLATEAU.CityGML.AppearanceTargetDefinition
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: PLATEAU.CityGML.Texture
        name: Texture
        nameWithType: Texture
        qualifiedName: PLATEAU.CityGML.Texture
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: PLATEAU.CityGML.AppearanceTargetDefinition`1
    parent: PLATEAU.CityGML
    commentId: T:PLATEAU.CityGML.AppearanceTargetDefinition{PLATEAU.CityGML.Texture}
  PLATEAU.CityGML.AppearanceTargetDefinition{PLATEAU.CityGML.Texture}.Appearance:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AppearanceTargetDefinition`1.Appearance
        name: Appearance
        nameWithType: AppearanceTargetDefinition<Texture>.Appearance
        qualifiedName: PLATEAU.CityGML.AppearanceTargetDefinition<PLATEAU.CityGML.Texture>.Appearance
      VB:
      - id: PLATEAU.CityGML.AppearanceTargetDefinition`1.Appearance
        name: Appearance
        nameWithType: AppearanceTargetDefinition(Of Texture).Appearance
        qualifiedName: PLATEAU.CityGML.AppearanceTargetDefinition(Of PLATEAU.CityGML.Texture).Appearance
    isDefinition: false
    definition: PLATEAU.CityGML.AppearanceTargetDefinition`1.Appearance
    parent: PLATEAU.CityGML.AppearanceTargetDefinition{PLATEAU.CityGML.Texture}
    commentId: P:PLATEAU.CityGML.AppearanceTargetDefinition{PLATEAU.CityGML.Texture}.Appearance
  PLATEAU.CityGML.AppearanceTargetDefinition{PLATEAU.CityGML.Texture}.TargetID:
    name:
      CSharp:
      - id: PLATEAU.CityGML.AppearanceTargetDefinition`1.TargetID
        name: TargetID
        nameWithType: AppearanceTargetDefinition<Texture>.TargetID
        qualifiedName: PLATEAU.CityGML.AppearanceTargetDefinition<PLATEAU.CityGML.Texture>.TargetID
      VB:
      - id: PLATEAU.CityGML.AppearanceTargetDefinition`1.TargetID
        name: TargetID
        nameWithType: AppearanceTargetDefinition(Of Texture).TargetID
        qualifiedName: PLATEAU.CityGML.AppearanceTargetDefinition(Of PLATEAU.CityGML.Texture).TargetID
    isDefinition: false
    definition: PLATEAU.CityGML.AppearanceTargetDefinition`1.TargetID
    parent: PLATEAU.CityGML.AppearanceTargetDefinition{PLATEAU.CityGML.Texture}
    commentId: P:PLATEAU.CityGML.AppearanceTargetDefinition{PLATEAU.CityGML.Texture}.TargetID
  PLATEAU.CityGML.TextureTargetDefinition.#ctor*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.TextureTargetDefinition.#ctor*
        name: TextureTargetDefinition
        nameWithType: TextureTargetDefinition.TextureTargetDefinition
        qualifiedName: PLATEAU.CityGML.TextureTargetDefinition.TextureTargetDefinition
      VB:
      - id: PLATEAU.CityGML.TextureTargetDefinition.#ctor*
        name: TextureTargetDefinition
        nameWithType: TextureTargetDefinition.TextureTargetDefinition
        qualifiedName: PLATEAU.CityGML.TextureTargetDefinition.TextureTargetDefinition
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.TextureTargetDefinition.#ctor
  PLATEAU.CityGML.TextureTargetDefinition.TexCoordinatesCount*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.TextureTargetDefinition.TexCoordinatesCount*
        name: TexCoordinatesCount
        nameWithType: TextureTargetDefinition.TexCoordinatesCount
        qualifiedName: PLATEAU.CityGML.TextureTargetDefinition.TexCoordinatesCount
      VB:
      - id: PLATEAU.CityGML.TextureTargetDefinition.TexCoordinatesCount*
        name: TexCoordinatesCount
        nameWithType: TextureTargetDefinition.TexCoordinatesCount
        qualifiedName: PLATEAU.CityGML.TextureTargetDefinition.TexCoordinatesCount
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.TextureTargetDefinition.TexCoordinatesCount
  PLATEAU.CityGML.TextureTargetDefinition.GetCoordinate*:
    name:
      CSharp:
      - id: PLATEAU.CityGML.TextureTargetDefinition.GetCoordinate*
        name: GetCoordinate
        nameWithType: TextureTargetDefinition.GetCoordinate
        qualifiedName: PLATEAU.CityGML.TextureTargetDefinition.GetCoordinate
      VB:
      - id: PLATEAU.CityGML.TextureTargetDefinition.GetCoordinate*
        name: GetCoordinate
        nameWithType: TextureTargetDefinition.GetCoordinate
        qualifiedName: PLATEAU.CityGML.TextureTargetDefinition.GetCoordinate
    isDefinition: true
    commentId: Overload:PLATEAU.CityGML.TextureTargetDefinition.GetCoordinate
  PLATEAU.IO.ObjWriter:
    name:
      CSharp:
      - id: PLATEAU.IO.ObjWriter
        name: ObjWriter
        nameWithType: ObjWriter
        qualifiedName: PLATEAU.IO.ObjWriter
      VB:
      - id: PLATEAU.IO.ObjWriter
        name: ObjWriter
        nameWithType: ObjWriter
        qualifiedName: PLATEAU.IO.ObjWriter
    isDefinition: true
    commentId: T:PLATEAU.IO.ObjWriter
  PLATEAU.PlateauVector3d:
    name:
      CSharp:
      - id: PLATEAU.PlateauVector3d
        name: PlateauVector3d
        nameWithType: PlateauVector3d
        qualifiedName: PlateauVector3d
        isExternal: true
      VB:
      - id: PLATEAU.PlateauVector3d
        name: PlateauVector3d
        nameWithType: PlateauVector3d
        qualifiedName: PlateauVector3d
        isExternal: true
    isDefinition: true
    commentId: '!:PLATEAU.PlateauVector3d'
  PLATEAU.IO.ObjWriter.ReferencePoint*:
    name:
      CSharp:
      - id: PLATEAU.IO.ObjWriter.ReferencePoint*
        name: ReferencePoint
        nameWithType: ObjWriter.ReferencePoint
        qualifiedName: PLATEAU.IO.ObjWriter.ReferencePoint
      VB:
      - id: PLATEAU.IO.ObjWriter.ReferencePoint*
        name: ReferencePoint
        nameWithType: ObjWriter.ReferencePoint
        qualifiedName: PLATEAU.IO.ObjWriter.ReferencePoint
    isDefinition: true
    commentId: Overload:PLATEAU.IO.ObjWriter.ReferencePoint
  PLATEAU.DllLogLevel:
    name:
      CSharp:
      - id: PLATEAU.DllLogLevel
        name: DllLogLevel
        nameWithType: DllLogLevel
        qualifiedName: DllLogLevel
        isExternal: true
      VB:
      - id: PLATEAU.DllLogLevel
        name: DllLogLevel
        nameWithType: DllLogLevel
        qualifiedName: DllLogLevel
        isExternal: true
    isDefinition: true
  PLATEAU.IO.ObjWriter.#ctor*:
    name:
      CSharp:
      - id: PLATEAU.IO.ObjWriter.#ctor*
        name: ObjWriter
        nameWithType: ObjWriter.ObjWriter
        qualifiedName: PLATEAU.IO.ObjWriter.ObjWriter
      VB:
      - id: PLATEAU.IO.ObjWriter.#ctor*
        name: ObjWriter
        nameWithType: ObjWriter.ObjWriter
        qualifiedName: PLATEAU.IO.ObjWriter.ObjWriter
    isDefinition: true
    commentId: Overload:PLATEAU.IO.ObjWriter.#ctor
  PLATEAU.IO.ObjWriter.Finalize*:
    name:
      CSharp:
      - id: PLATEAU.IO.ObjWriter.Finalize*
        name: Finalize
        nameWithType: ObjWriter.Finalize
        qualifiedName: PLATEAU.IO.ObjWriter.Finalize
      VB:
      - id: PLATEAU.IO.ObjWriter.Finalize*
        name: Finalize
        nameWithType: ObjWriter.Finalize
        qualifiedName: PLATEAU.IO.ObjWriter.Finalize
    isDefinition: true
    commentId: Overload:PLATEAU.IO.ObjWriter.Finalize
  PLATEAU.IO.ObjWriter.Handle*:
    name:
      CSharp:
      - id: PLATEAU.IO.ObjWriter.Handle*
        name: Handle
        nameWithType: ObjWriter.Handle
        qualifiedName: PLATEAU.IO.ObjWriter.Handle
      VB:
      - id: PLATEAU.IO.ObjWriter.Handle*
        name: Handle
        nameWithType: ObjWriter.Handle
        qualifiedName: PLATEAU.IO.ObjWriter.Handle
    isDefinition: true
    commentId: Overload:PLATEAU.IO.ObjWriter.Handle
  PLATEAU.IO.ObjWriter.Dispose*:
    name:
      CSharp:
      - id: PLATEAU.IO.ObjWriter.Dispose*
        name: Dispose
        nameWithType: ObjWriter.Dispose
        qualifiedName: PLATEAU.IO.ObjWriter.Dispose
      VB:
      - id: PLATEAU.IO.ObjWriter.Dispose*
        name: Dispose
        nameWithType: ObjWriter.Dispose
        qualifiedName: PLATEAU.IO.ObjWriter.Dispose
    isDefinition: true
    commentId: Overload:PLATEAU.IO.ObjWriter.Dispose
  PLATEAU.CityModel:
    name:
      CSharp:
      - id: PLATEAU.CityModel
        name: CityModel
        nameWithType: CityModel
        qualifiedName: CityModel
        isExternal: true
      VB:
      - id: PLATEAU.CityModel
        name: CityModel
        nameWithType: CityModel
        qualifiedName: CityModel
        isExternal: true
    isDefinition: true
  PLATEAU.IO.ObjWriter.Write*:
    name:
      CSharp:
      - id: PLATEAU.IO.ObjWriter.Write*
        name: Write
        nameWithType: ObjWriter.Write
        qualifiedName: PLATEAU.IO.ObjWriter.Write
      VB:
      - id: PLATEAU.IO.ObjWriter.Write*
        name: Write
        nameWithType: ObjWriter.Write
        qualifiedName: PLATEAU.IO.ObjWriter.Write
    isDefinition: true
    commentId: Overload:PLATEAU.IO.ObjWriter.Write
  PLATEAU.DllLogger:
    name:
      CSharp:
      - id: PLATEAU.DllLogger
        name: DllLogger
        nameWithType: DllLogger
        qualifiedName: DllLogger
        isExternal: true
      VB:
      - id: PLATEAU.DllLogger
        name: DllLogger
        nameWithType: DllLogger
        qualifiedName: DllLogger
        isExternal: true
    isDefinition: true
    commentId: '!:PLATEAU.DllLogger'
  PLATEAU.IO.ObjWriter.GetDllLogger*:
    name:
      CSharp:
      - id: PLATEAU.IO.ObjWriter.GetDllLogger*
        name: GetDllLogger
        nameWithType: ObjWriter.GetDllLogger
        qualifiedName: PLATEAU.IO.ObjWriter.GetDllLogger
      VB:
      - id: PLATEAU.IO.ObjWriter.GetDllLogger*
        name: GetDllLogger
        nameWithType: ObjWriter.GetDllLogger
        qualifiedName: PLATEAU.IO.ObjWriter.GetDllLogger
    isDefinition: true
    commentId: Overload:PLATEAU.IO.ObjWriter.GetDllLogger
  PLATEAU.MeshGranularity:
    name:
      CSharp:
      - id: PLATEAU.MeshGranularity
        name: MeshGranularity
        nameWithType: MeshGranularity
        qualifiedName: MeshGranularity
        isExternal: true
      VB:
      - id: PLATEAU.MeshGranularity
        name: MeshGranularity
        nameWithType: MeshGranularity
        qualifiedName: MeshGranularity
        isExternal: true
    isDefinition: true
  PLATEAU.IO.ObjWriter.SetMeshGranularity*:
    name:
      CSharp:
      - id: PLATEAU.IO.ObjWriter.SetMeshGranularity*
        name: SetMeshGranularity
        nameWithType: ObjWriter.SetMeshGranularity
        qualifiedName: PLATEAU.IO.ObjWriter.SetMeshGranularity
      VB:
      - id: PLATEAU.IO.ObjWriter.SetMeshGranularity*
        name: SetMeshGranularity
        nameWithType: ObjWriter.SetMeshGranularity
        qualifiedName: PLATEAU.IO.ObjWriter.SetMeshGranularity
    isDefinition: true
    commentId: Overload:PLATEAU.IO.ObjWriter.SetMeshGranularity
  PLATEAU.IO.ObjWriter.GetMeshGranularity*:
    name:
      CSharp:
      - id: PLATEAU.IO.ObjWriter.GetMeshGranularity*
        name: GetMeshGranularity
        nameWithType: ObjWriter.GetMeshGranularity
        qualifiedName: PLATEAU.IO.ObjWriter.GetMeshGranularity
      VB:
      - id: PLATEAU.IO.ObjWriter.GetMeshGranularity*
        name: GetMeshGranularity
        nameWithType: ObjWriter.GetMeshGranularity
        qualifiedName: PLATEAU.IO.ObjWriter.GetMeshGranularity
    isDefinition: true
    commentId: Overload:PLATEAU.IO.ObjWriter.GetMeshGranularity
  PLATEAU.AxesConversion:
    name:
      CSharp:
      - id: PLATEAU.AxesConversion
        name: AxesConversion
        nameWithType: AxesConversion
        qualifiedName: AxesConversion
        isExternal: true
      VB:
      - id: PLATEAU.AxesConversion
        name: AxesConversion
        nameWithType: AxesConversion
        qualifiedName: AxesConversion
        isExternal: true
    isDefinition: true
  PLATEAU.IO.ObjWriter.SetDestAxes*:
    name:
      CSharp:
      - id: PLATEAU.IO.ObjWriter.SetDestAxes*
        name: SetDestAxes
        nameWithType: ObjWriter.SetDestAxes
        qualifiedName: PLATEAU.IO.ObjWriter.SetDestAxes
      VB:
      - id: PLATEAU.IO.ObjWriter.SetDestAxes*
        name: SetDestAxes
        nameWithType: ObjWriter.SetDestAxes
        qualifiedName: PLATEAU.IO.ObjWriter.SetDestAxes
    isDefinition: true
    commentId: Overload:PLATEAU.IO.ObjWriter.SetDestAxes
  PLATEAU.IO.ObjWriter.GetDestAxes*:
    name:
      CSharp:
      - id: PLATEAU.IO.ObjWriter.GetDestAxes*
        name: GetDestAxes
        nameWithType: ObjWriter.GetDestAxes
        qualifiedName: PLATEAU.IO.ObjWriter.GetDestAxes
      VB:
      - id: PLATEAU.IO.ObjWriter.GetDestAxes*
        name: GetDestAxes
        nameWithType: ObjWriter.GetDestAxes
        qualifiedName: PLATEAU.IO.ObjWriter.GetDestAxes
    isDefinition: true
    commentId: Overload:PLATEAU.IO.ObjWriter.GetDestAxes
  PLATEAU.IO.ObjWriter.ReferencePoint:
    commentId: P:PLATEAU.IO.ObjWriter.ReferencePoint
  PLATEAU.IO.ObjWriter.SetValidReferencePoint*:
    name:
      CSharp:
      - id: PLATEAU.IO.ObjWriter.SetValidReferencePoint*
        name: SetValidReferencePoint
        nameWithType: ObjWriter.SetValidReferencePoint
        qualifiedName: PLATEAU.IO.ObjWriter.SetValidReferencePoint
      VB:
      - id: PLATEAU.IO.ObjWriter.SetValidReferencePoint*
        name: SetValidReferencePoint
        nameWithType: ObjWriter.SetValidReferencePoint
        qualifiedName: PLATEAU.IO.ObjWriter.SetValidReferencePoint
    isDefinition: true
    commentId: Overload:PLATEAU.IO.ObjWriter.SetValidReferencePoint
  PLATEAU.IO:
    name:
      CSharp:
      - name: PLATEAU.IO
        nameWithType: PLATEAU.IO
        qualifiedName: PLATEAU.IO
      VB:
      - name: PLATEAU.IO
        nameWithType: PLATEAU.IO
        qualifiedName: PLATEAU.IO
    isDefinition: true
    commentId: N:PLATEAU.IO
  PLATEAU.Behaviour.CityBehaviour.CityMetaData:
    commentId: P:PLATEAU.Behaviour.CityBehaviour.CityMetaData
  PLATEAU.CityMetaData:
    name:
      CSharp:
      - id: PLATEAU.CityMetaData
        name: CityMetaData
        nameWithType: CityMetaData
        qualifiedName: CityMetaData
        isExternal: true
      VB:
      - id: PLATEAU.CityMetaData
        name: CityMetaData
        nameWithType: CityMetaData
        qualifiedName: CityMetaData
        isExternal: true
    isDefinition: true
  PLATEAU.Behaviour.CityBehaviour.CityMetaData*:
    name:
      CSharp:
      - id: PLATEAU.Behaviour.CityBehaviour.CityMetaData*
        name: CityMetaData
        nameWithType: CityBehaviour.CityMetaData
        qualifiedName: PLATEAU.Behaviour.CityBehaviour.CityMetaData
      VB:
      - id: PLATEAU.Behaviour.CityBehaviour.CityMetaData*
        name: CityMetaData
        nameWithType: CityBehaviour.CityMetaData
        qualifiedName: PLATEAU.Behaviour.CityBehaviour.CityMetaData
    isDefinition: true
    commentId: Overload:PLATEAU.Behaviour.CityBehaviour.CityMetaData
  PLATEAU.CityObject:
    name:
      CSharp:
      - id: PLATEAU.CityObject
        name: CityObject
        nameWithType: CityObject
        qualifiedName: CityObject
        isExternal: true
      VB:
      - id: PLATEAU.CityObject
        name: CityObject
        nameWithType: CityObject
        qualifiedName: CityObject
        isExternal: true
    isDefinition: true
  PLATEAU.Behaviour.CityBehaviour.LoadSemantics*:
    name:
      CSharp:
      - id: PLATEAU.Behaviour.CityBehaviour.LoadSemantics*
        name: LoadSemantics
        nameWithType: CityBehaviour.LoadSemantics
        qualifiedName: PLATEAU.Behaviour.CityBehaviour.LoadSemantics
      VB:
      - id: PLATEAU.Behaviour.CityBehaviour.LoadSemantics*
        name: LoadSemantics
        nameWithType: CityBehaviour.LoadSemantics
        qualifiedName: PLATEAU.Behaviour.CityBehaviour.LoadSemantics
    isDefinition: true
    commentId: Overload:PLATEAU.Behaviour.CityBehaviour.LoadSemantics
  PLATEAU.Behaviour.CityBehaviour:
    name:
      CSharp:
      - id: PLATEAU.Behaviour.CityBehaviour
        name: CityBehaviour
        nameWithType: CityBehaviour
        qualifiedName: PLATEAU.Behaviour.CityBehaviour
      VB:
      - id: PLATEAU.Behaviour.CityBehaviour
        name: CityBehaviour
        nameWithType: CityBehaviour
        qualifiedName: PLATEAU.Behaviour.CityBehaviour
    isDefinition: true
    commentId: T:PLATEAU.Behaviour.CityBehaviour
  PLATEAU.Behaviour:
    name:
      CSharp:
      - name: PLATEAU.Behaviour
        nameWithType: PLATEAU.Behaviour
        qualifiedName: PLATEAU.Behaviour
      VB:
      - name: PLATEAU.Behaviour
        nameWithType: PLATEAU.Behaviour
        qualifiedName: PLATEAU.Behaviour
    isDefinition: true
    commentId: N:PLATEAU.Behaviour
  PLATEAU.CityMeta:
    name:
      CSharp:
      - name: PLATEAU.CityMeta
        nameWithType: PLATEAU.CityMeta
        qualifiedName: PLATEAU.CityMeta
      VB:
      - name: PLATEAU.CityMeta
        nameWithType: PLATEAU.CityMeta
        qualifiedName: PLATEAU.CityMeta
    isDefinition: true
    commentId: N:PLATEAU.CityMeta
  PLATEAU.CityMeta.GmlSearcherConfig:
    name:
      CSharp:
      - id: PLATEAU.CityMeta.GmlSearcherConfig
        name: GmlSearcherConfig
        nameWithType: GmlSearcherConfig
        qualifiedName: PLATEAU.CityMeta.GmlSearcherConfig
      VB:
      - id: PLATEAU.CityMeta.GmlSearcherConfig
        name: GmlSearcherConfig
        nameWithType: GmlSearcherConfig
        qualifiedName: PLATEAU.CityMeta.GmlSearcherConfig
    isDefinition: true
    parent: PLATEAU.CityMeta
    commentId: T:PLATEAU.CityMeta.GmlSearcherConfig
  PLATEAU.Vector3:
    name:
      CSharp:
      - id: PLATEAU.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      VB:
      - id: PLATEAU.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
    isDefinition: true
    commentId: '!:PLATEAU.Vector3'
  PLATEAU.CityMeta.CityImporterConfig:
    name:
      CSharp:
      - id: PLATEAU.CityMeta.CityImporterConfig
        name: CityImporterConfig
        nameWithType: CityImporterConfig
        qualifiedName: PLATEAU.CityMeta.CityImporterConfig
      VB:
      - id: PLATEAU.CityMeta.CityImporterConfig
        name: CityImporterConfig
        nameWithType: CityImporterConfig
        qualifiedName: PLATEAU.CityMeta.CityImporterConfig
    isDefinition: true
    parent: PLATEAU.CityMeta
    commentId: T:PLATEAU.CityMeta.CityImporterConfig
  PLATEAU.CityMeta.CityMetaData.idToGmlTable:
    commentId: F:PLATEAU.CityMeta.CityMetaData.idToGmlTable
  PLATEAU.CityMeta.IdToGmlTable:
    name:
      CSharp:
      - id: PLATEAU.CityMeta.IdToGmlTable
        name: IdToGmlTable
        nameWithType: IdToGmlTable
        qualifiedName: PLATEAU.CityMeta.IdToGmlTable
      VB:
      - id: PLATEAU.CityMeta.IdToGmlTable
        name: IdToGmlTable
        nameWithType: IdToGmlTable
        qualifiedName: PLATEAU.CityMeta.IdToGmlTable
    isDefinition: true
    parent: PLATEAU.CityMeta
    commentId: T:PLATEAU.CityMeta.IdToGmlTable
  PLATEAU.CityMeta.CityMetaData.DoGmlTableContainsKey*:
    name:
      CSharp:
      - id: PLATEAU.CityMeta.CityMetaData.DoGmlTableContainsKey*
        name: DoGmlTableContainsKey
        nameWithType: CityMetaData.DoGmlTableContainsKey
        qualifiedName: PLATEAU.CityMeta.CityMetaData.DoGmlTableContainsKey
      VB:
      - id: PLATEAU.CityMeta.CityMetaData.DoGmlTableContainsKey*
        name: DoGmlTableContainsKey
        nameWithType: CityMetaData.DoGmlTableContainsKey
        qualifiedName: PLATEAU.CityMeta.CityMetaData.DoGmlTableContainsKey
    isDefinition: true
    commentId: Overload:PLATEAU.CityMeta.CityMetaData.DoGmlTableContainsKey
  PLATEAU.CityMeta.CityMetaData.AddToGmlTable*:
    name:
      CSharp:
      - id: PLATEAU.CityMeta.CityMetaData.AddToGmlTable*
        name: AddToGmlTable
        nameWithType: CityMetaData.AddToGmlTable
        qualifiedName: PLATEAU.CityMeta.CityMetaData.AddToGmlTable
      VB:
      - id: PLATEAU.CityMeta.CityMetaData.AddToGmlTable*
        name: AddToGmlTable
        nameWithType: CityMetaData.AddToGmlTable
        qualifiedName: PLATEAU.CityMeta.CityMetaData.AddToGmlTable
    isDefinition: true
    commentId: Overload:PLATEAU.CityMeta.CityMetaData.AddToGmlTable
  PLATEAU.CityMeta.CityMetaData.TryGetValueFromGmlTable*:
    name:
      CSharp:
      - id: PLATEAU.CityMeta.CityMetaData.TryGetValueFromGmlTable*
        name: TryGetValueFromGmlTable
        nameWithType: CityMetaData.TryGetValueFromGmlTable
        qualifiedName: PLATEAU.CityMeta.CityMetaData.TryGetValueFromGmlTable
      VB:
      - id: PLATEAU.CityMeta.CityMetaData.TryGetValueFromGmlTable*
        name: TryGetValueFromGmlTable
        nameWithType: CityMetaData.TryGetValueFromGmlTable
        qualifiedName: PLATEAU.CityMeta.CityMetaData.TryGetValueFromGmlTable
    isDefinition: true
    commentId: Overload:PLATEAU.CityMeta.CityMetaData.TryGetValueFromGmlTable
  PLATEAU.CityMeta.CityMetaData.DoClearIdToGmlTable*:
    name:
      CSharp:
      - id: PLATEAU.CityMeta.CityMetaData.DoClearIdToGmlTable*
        name: DoClearIdToGmlTable
        nameWithType: CityMetaData.DoClearIdToGmlTable
        qualifiedName: PLATEAU.CityMeta.CityMetaData.DoClearIdToGmlTable
      VB:
      - id: PLATEAU.CityMeta.CityMetaData.DoClearIdToGmlTable*
        name: DoClearIdToGmlTable
        nameWithType: CityMetaData.DoClearIdToGmlTable
        qualifiedName: PLATEAU.CityMeta.CityMetaData.DoClearIdToGmlTable
    isDefinition: true
    commentId: Overload:PLATEAU.CityMeta.CityMetaData.DoClearIdToGmlTable
  PLATEAU.CityMeta.CityMetaData:
    name:
      CSharp:
      - id: PLATEAU.CityMeta.CityMetaData
        name: CityMetaData
        nameWithType: CityMetaData
        qualifiedName: PLATEAU.CityMeta.CityMetaData
      VB:
      - id: PLATEAU.CityMeta.CityMetaData
        name: CityMetaData
        nameWithType: CityMetaData
        qualifiedName: PLATEAU.CityMeta.CityMetaData
    isDefinition: true
    commentId: T:PLATEAU.CityMeta.CityMetaData
  System.Int32[]:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  PLATEAU.CityMeta.GmlSearcherConfig.areaIds:
    commentId: F:PLATEAU.CityMeta.GmlSearcherConfig.areaIds
  System.Boolean[]:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  PLATEAU.CityMeta.GmlTypeTarget:
    name:
      CSharp:
      - id: PLATEAU.CityMeta.GmlTypeTarget
        name: GmlTypeTarget
        nameWithType: GmlTypeTarget
        qualifiedName: PLATEAU.CityMeta.GmlTypeTarget
      VB:
      - id: PLATEAU.CityMeta.GmlTypeTarget
        name: GmlTypeTarget
        nameWithType: GmlTypeTarget
        qualifiedName: PLATEAU.CityMeta.GmlTypeTarget
    isDefinition: true
    parent: PLATEAU.CityMeta
    commentId: T:PLATEAU.CityMeta.GmlTypeTarget
  PLATEAU.CityMeta.GmlType:
    name:
      CSharp:
      - id: PLATEAU.CityMeta.GmlType
        name: GmlType
        nameWithType: GmlType
        qualifiedName: PLATEAU.CityMeta.GmlType
      VB:
      - id: PLATEAU.CityMeta.GmlType
        name: GmlType
        nameWithType: GmlType
        qualifiedName: PLATEAU.CityMeta.GmlType
    isDefinition: true
    parent: PLATEAU.CityMeta
    commentId: T:PLATEAU.CityMeta.GmlType
  PLATEAU.CityMeta.GmlType.Etc:
    commentId: F:PLATEAU.CityMeta.GmlType.Etc
  PLATEAU.CityMeta.GmlTypeConvert.ToPrefix*:
    name:
      CSharp:
      - id: PLATEAU.CityMeta.GmlTypeConvert.ToPrefix*
        name: ToPrefix
        nameWithType: GmlTypeConvert.ToPrefix
        qualifiedName: PLATEAU.CityMeta.GmlTypeConvert.ToPrefix
      VB:
      - id: PLATEAU.CityMeta.GmlTypeConvert.ToPrefix*
        name: ToPrefix
        nameWithType: GmlTypeConvert.ToPrefix
        qualifiedName: PLATEAU.CityMeta.GmlTypeConvert.ToPrefix
    isDefinition: true
    commentId: Overload:PLATEAU.CityMeta.GmlTypeConvert.ToPrefix
  PLATEAU.CityMeta.GmlTypeConvert.ToEnum*:
    name:
      CSharp:
      - id: PLATEAU.CityMeta.GmlTypeConvert.ToEnum*
        name: ToEnum
        nameWithType: GmlTypeConvert.ToEnum
        qualifiedName: PLATEAU.CityMeta.GmlTypeConvert.ToEnum
      VB:
      - id: PLATEAU.CityMeta.GmlTypeConvert.ToEnum*
        name: ToEnum
        nameWithType: GmlTypeConvert.ToEnum
        qualifiedName: PLATEAU.CityMeta.GmlTypeConvert.ToEnum
    isDefinition: true
    commentId: Overload:PLATEAU.CityMeta.GmlTypeConvert.ToEnum
  PLATEAU.CityMeta.GmlTypeConvert.ToDisplay*:
    name:
      CSharp:
      - id: PLATEAU.CityMeta.GmlTypeConvert.ToDisplay*
        name: ToDisplay
        nameWithType: GmlTypeConvert.ToDisplay
        qualifiedName: PLATEAU.CityMeta.GmlTypeConvert.ToDisplay
      VB:
      - id: PLATEAU.CityMeta.GmlTypeConvert.ToDisplay*
        name: ToDisplay
        nameWithType: GmlTypeConvert.ToDisplay
        qualifiedName: PLATEAU.CityMeta.GmlTypeConvert.ToDisplay
    isDefinition: true
    commentId: Overload:PLATEAU.CityMeta.GmlTypeConvert.ToDisplay
  PLATEAU.CityMeta.GmlTypeConvert:
    name:
      CSharp:
      - id: PLATEAU.CityMeta.GmlTypeConvert
        name: GmlTypeConvert
        nameWithType: GmlTypeConvert
        qualifiedName: PLATEAU.CityMeta.GmlTypeConvert
      VB:
      - id: PLATEAU.CityMeta.GmlTypeConvert
        name: GmlTypeConvert
        nameWithType: GmlTypeConvert
        qualifiedName: PLATEAU.CityMeta.GmlTypeConvert
    isDefinition: true
    commentId: T:PLATEAU.CityMeta.GmlTypeConvert
  PLATEAU.Dictionary`2:
    name:
      CSharp:
      - id: PLATEAU.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: PLATEAU.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:PLATEAU.Dictionary`2'
  PLATEAU.Dictionary{PLATEAU.CityMeta.GmlType,System.Boolean}:
    name:
      CSharp:
      - id: PLATEAU.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: PLATEAU.CityMeta.GmlType
        name: GmlType
        nameWithType: GmlType
        qualifiedName: PLATEAU.CityMeta.GmlType
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: PLATEAU.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: PLATEAU.CityMeta.GmlType
        name: GmlType
        nameWithType: GmlType
        qualifiedName: PLATEAU.CityMeta.GmlType
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: PLATEAU.Dictionary`2
    commentId: '!:PLATEAU.Dictionary{PLATEAU.CityMeta.GmlType,System.Boolean}'
  PLATEAU.CityMeta.GmlTypeTarget.TargetDict*:
    name:
      CSharp:
      - id: PLATEAU.CityMeta.GmlTypeTarget.TargetDict*
        name: TargetDict
        nameWithType: GmlTypeTarget.TargetDict
        qualifiedName: PLATEAU.CityMeta.GmlTypeTarget.TargetDict
      VB:
      - id: PLATEAU.CityMeta.GmlTypeTarget.TargetDict*
        name: TargetDict
        nameWithType: GmlTypeTarget.TargetDict
        qualifiedName: PLATEAU.CityMeta.GmlTypeTarget.TargetDict
    isDefinition: true
    commentId: Overload:PLATEAU.CityMeta.GmlTypeTarget.TargetDict
  PLATEAU.CityMeta.GmlTypeTarget.#ctor*:
    name:
      CSharp:
      - id: PLATEAU.CityMeta.GmlTypeTarget.#ctor*
        name: GmlTypeTarget
        nameWithType: GmlTypeTarget.GmlTypeTarget
        qualifiedName: PLATEAU.CityMeta.GmlTypeTarget.GmlTypeTarget
      VB:
      - id: PLATEAU.CityMeta.GmlTypeTarget.#ctor*
        name: GmlTypeTarget
        nameWithType: GmlTypeTarget.GmlTypeTarget
        qualifiedName: PLATEAU.CityMeta.GmlTypeTarget.GmlTypeTarget
    isDefinition: true
    commentId: Overload:PLATEAU.CityMeta.GmlTypeTarget.#ctor
  PLATEAU.CityMeta.GmlTypeTarget.IsTypeTarget*:
    name:
      CSharp:
      - id: PLATEAU.CityMeta.GmlTypeTarget.IsTypeTarget*
        name: IsTypeTarget
        nameWithType: GmlTypeTarget.IsTypeTarget
        qualifiedName: PLATEAU.CityMeta.GmlTypeTarget.IsTypeTarget
      VB:
      - id: PLATEAU.CityMeta.GmlTypeTarget.IsTypeTarget*
        name: IsTypeTarget
        nameWithType: GmlTypeTarget.IsTypeTarget
        qualifiedName: PLATEAU.CityMeta.GmlTypeTarget.IsTypeTarget
    isDefinition: true
    commentId: Overload:PLATEAU.CityMeta.GmlTypeTarget.IsTypeTarget
  PLATEAU.CityMeta.GmlTypeTarget.SetAll*:
    name:
      CSharp:
      - id: PLATEAU.CityMeta.GmlTypeTarget.SetAll*
        name: SetAll
        nameWithType: GmlTypeTarget.SetAll
        qualifiedName: PLATEAU.CityMeta.GmlTypeTarget.SetAll
      VB:
      - id: PLATEAU.CityMeta.GmlTypeTarget.SetAll*
        name: SetAll
        nameWithType: GmlTypeTarget.SetAll
        qualifiedName: PLATEAU.CityMeta.GmlTypeTarget.SetAll
    isDefinition: true
    commentId: Overload:PLATEAU.CityMeta.GmlTypeTarget.SetAll
  PLATEAU.CityMeta.IdToGmlTable.Add*:
    name:
      CSharp:
      - id: PLATEAU.CityMeta.IdToGmlTable.Add*
        name: Add
        nameWithType: IdToGmlTable.Add
        qualifiedName: PLATEAU.CityMeta.IdToGmlTable.Add
      VB:
      - id: PLATEAU.CityMeta.IdToGmlTable.Add*
        name: Add
        nameWithType: IdToGmlTable.Add
        qualifiedName: PLATEAU.CityMeta.IdToGmlTable.Add
    isDefinition: true
    commentId: Overload:PLATEAU.CityMeta.IdToGmlTable.Add
  PLATEAU.KeyValuePair`2:
    name:
      CSharp:
      - id: PLATEAU.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: PLATEAU.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:PLATEAU.KeyValuePair`2'
  PLATEAU.KeyValuePair{System.String,System.String}:
    name:
      CSharp:
      - id: PLATEAU.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: PLATEAU.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: PLATEAU.KeyValuePair`2
    commentId: '!:PLATEAU.KeyValuePair{System.String,System.String}'
  PLATEAU.CityMeta.IdToGmlTable.ContainsKey*:
    name:
      CSharp:
      - id: PLATEAU.CityMeta.IdToGmlTable.ContainsKey*
        name: ContainsKey
        nameWithType: IdToGmlTable.ContainsKey
        qualifiedName: PLATEAU.CityMeta.IdToGmlTable.ContainsKey
      VB:
      - id: PLATEAU.CityMeta.IdToGmlTable.ContainsKey*
        name: ContainsKey
        nameWithType: IdToGmlTable.ContainsKey
        qualifiedName: PLATEAU.CityMeta.IdToGmlTable.ContainsKey
    isDefinition: true
    commentId: Overload:PLATEAU.CityMeta.IdToGmlTable.ContainsKey
  PLATEAU.CityMeta.IdToGmlTable.TryGetValue*:
    name:
      CSharp:
      - id: PLATEAU.CityMeta.IdToGmlTable.TryGetValue*
        name: TryGetValue
        nameWithType: IdToGmlTable.TryGetValue
        qualifiedName: PLATEAU.CityMeta.IdToGmlTable.TryGetValue
      VB:
      - id: PLATEAU.CityMeta.IdToGmlTable.TryGetValue*
        name: TryGetValue
        nameWithType: IdToGmlTable.TryGetValue
        qualifiedName: PLATEAU.CityMeta.IdToGmlTable.TryGetValue
    isDefinition: true
    commentId: Overload:PLATEAU.CityMeta.IdToGmlTable.TryGetValue
  PLATEAU.CityMeta.IdToGmlTable.Item*:
    name:
      CSharp:
      - id: PLATEAU.CityMeta.IdToGmlTable.Item*
        name: Item
        nameWithType: IdToGmlTable.Item
        qualifiedName: PLATEAU.CityMeta.IdToGmlTable.Item
      VB:
      - id: PLATEAU.CityMeta.IdToGmlTable.Item*
        name: Item
        nameWithType: IdToGmlTable.Item
        qualifiedName: PLATEAU.CityMeta.IdToGmlTable.Item
    isDefinition: true
    commentId: Overload:PLATEAU.CityMeta.IdToGmlTable.Item
  PLATEAU.ICollection`1:
    name:
      CSharp:
      - id: PLATEAU.ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: ICollection
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: PLATEAU.ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: ICollection
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:PLATEAU.ICollection`1'
  PLATEAU.ICollection{System.String}:
    name:
      CSharp:
      - id: PLATEAU.ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: ICollection
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: PLATEAU.ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: ICollection
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: PLATEAU.ICollection`1
    commentId: '!:PLATEAU.ICollection{System.String}'
  PLATEAU.CityMeta.IdToGmlTable.Keys*:
    name:
      CSharp:
      - id: PLATEAU.CityMeta.IdToGmlTable.Keys*
        name: Keys
        nameWithType: IdToGmlTable.Keys
        qualifiedName: PLATEAU.CityMeta.IdToGmlTable.Keys
      VB:
      - id: PLATEAU.CityMeta.IdToGmlTable.Keys*
        name: Keys
        nameWithType: IdToGmlTable.Keys
        qualifiedName: PLATEAU.CityMeta.IdToGmlTable.Keys
    isDefinition: true
    commentId: Overload:PLATEAU.CityMeta.IdToGmlTable.Keys
  PLATEAU.CityMeta.IdToGmlTable.Clear*:
    name:
      CSharp:
      - id: PLATEAU.CityMeta.IdToGmlTable.Clear*
        name: Clear
        nameWithType: IdToGmlTable.Clear
        qualifiedName: PLATEAU.CityMeta.IdToGmlTable.Clear
      VB:
      - id: PLATEAU.CityMeta.IdToGmlTable.Clear*
        name: Clear
        nameWithType: IdToGmlTable.Clear
        qualifiedName: PLATEAU.CityMeta.IdToGmlTable.Clear
    isDefinition: true
    commentId: Overload:PLATEAU.CityMeta.IdToGmlTable.Clear
  PLATEAU.CityMeta.IdToGmlTable.Count*:
    name:
      CSharp:
      - id: PLATEAU.CityMeta.IdToGmlTable.Count*
        name: Count
        nameWithType: IdToGmlTable.Count
        qualifiedName: PLATEAU.CityMeta.IdToGmlTable.Count
      VB:
      - id: PLATEAU.CityMeta.IdToGmlTable.Count*
        name: Count
        nameWithType: IdToGmlTable.Count
        qualifiedName: PLATEAU.CityMeta.IdToGmlTable.Count
    isDefinition: true
    commentId: Overload:PLATEAU.CityMeta.IdToGmlTable.Count
  PLATEAU.IEnumerator{KeyValuePair{System.String,System.String}}:
    name:
      CSharp:
      - id: PLATEAU.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: IEnumerator
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: PLATEAU.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: PLATEAU.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: IEnumerator
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: PLATEAU.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: PLATEAU.IEnumerator`1
    commentId: '!:PLATEAU.IEnumerator{KeyValuePair{System.String,System.String}}'
  PLATEAU.CityMeta.IdToGmlTable.GetEnumerator*:
    name:
      CSharp:
      - id: PLATEAU.CityMeta.IdToGmlTable.GetEnumerator*
        name: GetEnumerator
        nameWithType: IdToGmlTable.GetEnumerator
        qualifiedName: PLATEAU.CityMeta.IdToGmlTable.GetEnumerator
      VB:
      - id: PLATEAU.CityMeta.IdToGmlTable.GetEnumerator*
        name: GetEnumerator
        nameWithType: IdToGmlTable.GetEnumerator
        qualifiedName: PLATEAU.CityMeta.IdToGmlTable.GetEnumerator
    isDefinition: true
    commentId: Overload:PLATEAU.CityMeta.IdToGmlTable.GetEnumerator
  PLATEAU.SemanticsLoad.SemanticsLoader.Load*:
    name:
      CSharp:
      - id: PLATEAU.SemanticsLoad.SemanticsLoader.Load*
        name: Load
        nameWithType: SemanticsLoader.Load
        qualifiedName: PLATEAU.SemanticsLoad.SemanticsLoader.Load
      VB:
      - id: PLATEAU.SemanticsLoad.SemanticsLoader.Load*
        name: Load
        nameWithType: SemanticsLoader.Load
        qualifiedName: PLATEAU.SemanticsLoad.SemanticsLoader.Load
    isDefinition: true
    commentId: Overload:PLATEAU.SemanticsLoad.SemanticsLoader.Load
  PLATEAU.SemanticsLoad.SemanticsLoader:
    name:
      CSharp:
      - id: PLATEAU.SemanticsLoad.SemanticsLoader
        name: SemanticsLoader
        nameWithType: SemanticsLoader
        qualifiedName: PLATEAU.SemanticsLoad.SemanticsLoader
      VB:
      - id: PLATEAU.SemanticsLoad.SemanticsLoader
        name: SemanticsLoader
        nameWithType: SemanticsLoader
        qualifiedName: PLATEAU.SemanticsLoad.SemanticsLoader
    isDefinition: true
    commentId: T:PLATEAU.SemanticsLoad.SemanticsLoader
  PLATEAU.SemanticsLoad:
    name:
      CSharp:
      - name: PLATEAU.SemanticsLoad
        nameWithType: PLATEAU.SemanticsLoad
        qualifiedName: PLATEAU.SemanticsLoad
      VB:
      - name: PLATEAU.SemanticsLoad
        nameWithType: PLATEAU.SemanticsLoad
        qualifiedName: PLATEAU.SemanticsLoad
    isDefinition: true
    commentId: N:PLATEAU.SemanticsLoad
